{"ast":null,"code":"import _regeneratorRuntime from \"/home/adrienna/Documents/Stage/Suivi_courrier_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/adrienna/Documents/Stage/Suivi_courrier_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport TopNavbar from \"./TopNavbar.vue\";\nimport DashboardContent from \"./Content.vue\";\nimport MobileMenu from \"./MobileMenu\";\nimport axios from 'axios';\nexport default {\n  components: {\n    TopNavbar: TopNavbar,\n    DashboardContent: DashboardContent,\n    MobileMenu: MobileMenu\n  },\n  data: function data() {\n    return {\n      notificationCount: 0,\n      user: null,\n      departement: ''\n    };\n  },\n  mounted: function mounted() {\n    this.fetchNotificationCount();\n  },\n  methods: {\n    toggleSidebar: function toggleSidebar() {\n      if (this.$sidebar.showSidebar) {\n        this.$sidebar.displaySidebar(false);\n      }\n    },\n    fetchNotificationCount: function fetchNotificationCount() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, responsedept, notificationResponse;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('http://localhost:8081/api/utilisateur', {\n                headers: {\n                  Authorization: \"Bearer \".concat(localStorage.getItem('authToken'))\n                }\n              });\n            case 3:\n              response = _context.sent;\n              _this.user = response.data;\n              if (_this.user) {\n                _context.next = 8;\n                break;\n              }\n              console.error(\"User data is missing\");\n              return _context.abrupt(\"return\");\n            case 8:\n              _context.next = 10;\n              return axios.get(\"http://localhost:8081/api/departement/utilisateur/\".concat(_this.user.id_utilisateur));\n            case 10:\n              responsedept = _context.sent;\n              _this.departement = responsedept.data;\n              console.log(\"Données du département :\", _this.departement);\n\n              // Récupérer le nombre de notifications pour le département\n              _context.next = 15;\n              return axios.get(\"http://localhost:8081/api/notifications/\".concat(_this.departement));\n            case 15:\n              notificationResponse = _context.sent;\n              _this.notificationCount = notificationResponse.data; // Mettez à jour le compteur de notifications\n              _context.next = 22;\n              break;\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(\"Erreur lors de la récupération des notifications:\", _context.t0);\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 19]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["TopNavbar","DashboardContent","MobileMenu","axios","components","data","notificationCount","user","departement","mounted","fetchNotificationCount","methods","toggleSidebar","$sidebar","showSidebar","displaySidebar","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","responsedept","notificationResponse","wrap","_callee$","_context","prev","next","get","headers","Authorization","concat","localStorage","getItem","sent","console","error","abrupt","id_utilisateur","log","t0","stop"],"sources":["src/layout/dashboard/DashboardDept.vue"],"sourcesContent":["<template>\n    <div class=\"wrapper\">\n      <side-bar>\n        <template slot=\"links\">\n          <sidebar-link\n            to=\"/board/notifications\"\n            name=\"notifications \"\n            icon=\"ti-bell\"\n          />\n          <span class=\"notification-badge\" v-if=\"notificationCount > 0\">{{ notificationCount }}</span>\n          <sidebar-link\n            to=\"/board/departement/:id_departement/courriers\"\n            name=\"Waiting document list \"\n            icon=\"ti-view-list-alt\"\n          />\n          <sidebar-link\n            to=\"/board/courriersRecu\"\n            name=\"List of documents received by your departement\"\n            icon=\"ti-view-list-alt\"\n          />\n\n         </template>\n\n      </side-bar>\n      <div class=\"main-panel\">\n        <top-navbar></top-navbar>\n\n        <dashboard-content @click.native=\"toggleSidebar\"> </dashboard-content>\n  \n      </div>\n    </div>\n  </template>\n<style lang=\"scss\">\n.notification-badge {\n  background-color: red;\n  color: white; \n  border-radius: 30%;\n  padding-top: 10px; \n  padding-right: 5px;\n  padding-left: 5px;\n  height: 30px;\n  margin-left:170px; \n  margin-top: -50px;\n  font-size: 0.8em; \n}\n</style>\n  <script>\n  import TopNavbar from \"./TopNavbar.vue\";\n  import DashboardContent from \"./Content.vue\";\n  import MobileMenu from \"./MobileMenu\";\n\n  import axios from 'axios';\n\n  export default {\n    components: {\n      TopNavbar,\n      DashboardContent,\n      MobileMenu,\n    },\n    data() {\n      return {\n        notificationCount: 0,\n        user:null,\n        departement:'',\n      };\n    },\n    mounted() {\n      this.fetchNotificationCount();\n    },\n    methods: {\n      toggleSidebar() {\n        if (this.$sidebar.showSidebar) {\n          this.$sidebar.displaySidebar(false);\n        }\n      },\n      async fetchNotificationCount() {\n        try {\n          const response = await axios.get('http://localhost:8081/api/utilisateur', {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('authToken')}`, \n            },\n          });\n          \n          this.user = response.data; \n          if (!this.user) {\n            console.error(\"User data is missing\");\n            return;\n          }\n\n          // Récupérer le département de l'utilisateur\n          const responsedept = await axios.get(`http://localhost:8081/api/departement/utilisateur/${this.user.id_utilisateur}`);\n          this.departement = responsedept.data;\n          console.log(\"Données du département :\", this.departement);\n          \n          // Récupérer le nombre de notifications pour le département\n          const notificationResponse = await axios.get(`http://localhost:8081/api/notifications/${this.departement}`);\n          this.notificationCount = notificationResponse.data; // Mettez à jour le compteur de notifications\n        } catch (error) {\n          console.error(\"Erreur lors de la récupération des notifications:\", error);\n        }\n      },\n    },\n  };\n  </script>\n  "],"mappings":";;AA+CA,OAAAA,SAAA;AACA,OAAAC,gBAAA;AACA,OAAAC,UAAA;AAEA,OAAAC,KAAA;AAEA;EACAC,UAAA;IACAJ,SAAA,EAAAA,SAAA;IACAC,gBAAA,EAAAA,gBAAA;IACAC,UAAA,EAAAA;EACA;EACAG,IAAA,WAAAA,KAAA;IACA;MACAC,iBAAA;MACAC,IAAA;MACAC,WAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,sBAAA;EACA;EACAC,OAAA;IACAC,aAAA,WAAAA,cAAA;MACA,SAAAC,QAAA,CAAAC,WAAA;QACA,KAAAD,QAAA,CAAAE,cAAA;MACA;IACA;IACAL,sBAAA,WAAAA,uBAAA;MAAA,IAAAM,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA,EAAAC,YAAA,EAAAC,oBAAA;QAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEAzB,KAAA,CAAA0B,GAAA;gBACAC,OAAA;kBACAC,aAAA,YAAAC,MAAA,CAAAC,YAAA,CAAAC,OAAA;gBACA;cACA;YAAA;cAJAb,QAAA,GAAAK,QAAA,CAAAS,IAAA;cAMAnB,KAAA,CAAAT,IAAA,GAAAc,QAAA,CAAAhB,IAAA;cAAA,IACAW,KAAA,CAAAT,IAAA;gBAAAmB,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACAQ,OAAA,CAAAC,KAAA;cAAA,OAAAX,QAAA,CAAAY,MAAA;YAAA;cAAAZ,QAAA,CAAAE,IAAA;cAAA,OAKAzB,KAAA,CAAA0B,GAAA,sDAAAG,MAAA,CAAAhB,KAAA,CAAAT,IAAA,CAAAgC,cAAA;YAAA;cAAAjB,YAAA,GAAAI,QAAA,CAAAS,IAAA;cACAnB,KAAA,CAAAR,WAAA,GAAAc,YAAA,CAAAjB,IAAA;cACA+B,OAAA,CAAAI,GAAA,6BAAAxB,KAAA,CAAAR,WAAA;;cAEA;cAAAkB,QAAA,CAAAE,IAAA;cAAA,OACAzB,KAAA,CAAA0B,GAAA,4CAAAG,MAAA,CAAAhB,KAAA,CAAAR,WAAA;YAAA;cAAAe,oBAAA,GAAAG,QAAA,CAAAS,IAAA;cACAnB,KAAA,CAAAV,iBAAA,GAAAiB,oBAAA,CAAAlB,IAAA;cAAAqB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAe,EAAA,GAAAf,QAAA;cAEAU,OAAA,CAAAC,KAAA,sDAAAX,QAAA,CAAAe,EAAA;YAAA;YAAA;cAAA,OAAAf,QAAA,CAAAgB,IAAA;UAAA;QAAA,GAAAtB,OAAA;MAAA;IAEA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}