{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'connection_user',\n  data: function data() {\n    return {\n      nom_utilisateur: '',\n      mot_de_passe: '',\n      confirmMdp: '',\n      isLogin: true\n    };\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n      var formData = new FormData();\n      formData.append('nom_utilisateur', this.nom_utilisateur);\n      formData.append('mot_de_passe', this.mot_de_passe);\n      axios.post('http://localhost:8081/api/login', formData).then(function (response) {\n        console.log(response.data);\n\n        // Store the token in localStorage or sessionStorage\n        var token = response.data.token; // assuming the token is in response.data.token\n        localStorage.setItem('authToken', token); // Storing in localStorage\n\n        // Redirect based on the URL in the response\n        var redirectUrl = response.data.redirect;\n        if (redirectUrl === '/dashboard/document_register') {\n          _this.$router.push({\n            name: 'Insert the document'\n          });\n        } else {\n          _this.$router.push(redirectUrl);\n        }\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    signUp: function signUp() {\n      // Simuler une inscription réussie\n      if (this.mdp === this.confirmMdp) {\n        this.$router.push('/dashboard');\n      } else {\n        alert(\"Passwords do not match\");\n      }\n    },\n    toggleMode: function toggleMode() {\n      this.isLogin = !this.isLogin;\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","nom_utilisateur","mot_de_passe","confirmMdp","isLogin","methods","login","_this","formData","FormData","append","post","then","response","console","log","token","localStorage","setItem","redirectUrl","redirect","$router","push","catch","error","signUp","mdp","alert","toggleMode"],"sources":["src/pages/LoginUser.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-card\">\n      <img alt=\"User profile icon\" src=\"@/assets/ok.avif\" width=\"100\" height=\"100\" />\n      <h2 style=\"color:#fff\">{{ isLogin ? 'Login' : 'Sign Up' }}</h2>\n      <form @submit.prevent=\"isLogin ? login() : signUp()\">\n        <div class=\"input-field\">\n          <input type=\"text\" id=\"nom\" v-model=\"nom_utilisateur\" placeholder=\"Username\" />\n        </div>\n        <div class=\"input-field\">\n          <input type=\"password\" id=\"mdp\" v-model=\"mot_de_passe\" placeholder=\"Password\" />\n        </div>\n        <div v-if=\"!isLogin\" class=\"input-field\">\n          <input type=\"password\" id=\"confirm-mdp\" v-model=\"confirmMdp\" placeholder=\"Confirm Password\" />\n        </div>\n        <div class=\"remember-me\" v-if=\"isLogin\">\n          <a href=\"#\" class=\"forgot-password\">Forgot Password?</a>\n        </div>\n        <button type=\"submit\" class=\"login-btn\">{{ isLogin ? 'LOGIN' : 'SIGN UP' }}</button>\n      </form>\n      <p class=\"toggle-mode\" @click=\"toggleMode\">{{ isLogin ? \"Don't have an account? Sign Up\" : \"Already have an account? Login\" }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'connection_user',\n  data() {\n    return {\n      nom_utilisateur: '',\n      mot_de_passe: '',\n      confirmMdp: '',\n      isLogin: true\n    }\n  },\n  methods: {\n    login() {\n    const formData = new FormData();\n    formData.append('nom_utilisateur', this.nom_utilisateur);\n    formData.append('mot_de_passe', this.mot_de_passe);\n\n    axios.post('http://localhost:8081/api/login', formData)\n    .then(response => {\n        console.log(response.data);\n        \n        // Store the token in localStorage or sessionStorage\n        const token = response.data.token; // assuming the token is in response.data.token\n        localStorage.setItem('authToken', token); // Storing in localStorage\n\n        // Redirect based on the URL in the response\n        const redirectUrl = response.data.redirect;\n        if (redirectUrl === '/dashboard/document_register') {\n            this.$router.push({ name: 'Insert the document' });\n        } else {\n            this.$router.push(redirectUrl);\n        }\n    })\n    .catch(error => {\n        console.error(error);\n    });\n},\n    signUp() {\n      // Simuler une inscription réussie\n      if (this.mdp === this.confirmMdp) {\n        this.$router.push('/dashboard');\n      } else {\n        alert(\"Passwords do not match\");\n      }\n    },\n    toggleMode() {\n      this.isLogin = !this.isLogin;\n    }\n  }\n}\n</script>\n\n<style>\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n}\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  background-color:#333;\n}\n\n.login-card {\n  background-color:rgba(0, 0, 0, 0.7);\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  text-align: center;\n  width: 300px;\n}\n\n.login-card img {\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n}\n\n.input-field {\n  position: relative;\n}\n\n.input-field .icon {\n  position: absolute;\n  top: 50%;\n  left: 10px;\n  transform: translateY(-50%);\n  color: #fff;\n  font-size: 18px;\n}\n\n.input-field input[type=\"text\"],\n.input-field input[type=\"password\"] {\n  width: calc(100% - 30px);\n  padding: 10px 10px 10px 30px;\n  margin: 10px 0;\n  border: none;\n  border-radius: 5px;\n  background-color: #444;\n  color: #fff;\n}\n\n.remember-me a {\n  color: #999;\n  text-decoration: none;\n  font-size: 12px;\n  float: right;\n}\n\n.remember-me a:hover {\n  text-decoration: underline;\n}\n\n.login-btn {\n  width: 100%;\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #555; \n  color: #fff; \n  font-size: 16px;\n  cursor: pointer;\n}\n\n.login-btn:hover {\n  background-color: #666; \n}\n\n.forgot-password {\n  font-size: 14px;\n  color: #fff; \n  text-align: center;\n  margin-top: 20px;\n}\n\n.toggle-mode {\n  font-size: 14px;\n  color: #666; \n  cursor: pointer;\n  margin-top: 20px;\n}\n\n.toggle-mode:hover {\n  text-decoration: underline;\n}\n</style>\n\n"],"mappings":";AA0BA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,eAAA;MACAC,YAAA;MACAC,UAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACAC,KAAA,WAAAA,MAAA;MAAA,IAAAC,KAAA;MACA,IAAAC,QAAA,OAAAC,QAAA;MACAD,QAAA,CAAAE,MAAA,yBAAAT,eAAA;MACAO,QAAA,CAAAE,MAAA,sBAAAR,YAAA;MAEAJ,KAAA,CAAAa,IAAA,oCAAAH,QAAA,EACAI,IAAA,WAAAC,QAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,QAAA,CAAAb,IAAA;;QAEA;QACA,IAAAgB,KAAA,GAAAH,QAAA,CAAAb,IAAA,CAAAgB,KAAA;QACAC,YAAA,CAAAC,OAAA,cAAAF,KAAA;;QAEA;QACA,IAAAG,WAAA,GAAAN,QAAA,CAAAb,IAAA,CAAAoB,QAAA;QACA,IAAAD,WAAA;UACAZ,KAAA,CAAAc,OAAA,CAAAC,IAAA;YAAAvB,IAAA;UAAA;QACA;UACAQ,KAAA,CAAAc,OAAA,CAAAC,IAAA,CAAAH,WAAA;QACA;MACA,GACAI,KAAA,WAAAC,KAAA;QACAV,OAAA,CAAAU,KAAA,CAAAA,KAAA;MACA;IACA;IACAC,MAAA,WAAAA,OAAA;MACA;MACA,SAAAC,GAAA,UAAAvB,UAAA;QACA,KAAAkB,OAAA,CAAAC,IAAA;MACA;QACAK,KAAA;MACA;IACA;IACAC,UAAA,WAAAA,WAAA;MACA,KAAAxB,OAAA,SAAAA,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}