{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      formData: {\n        nom_role: ''\n      },\n      errors: null\n    };\n  },\n  methods: {\n    async submitForm() {\n      if (!this.formData.nom_role) {\n        this.errors = [\"Please fill in all required fields\"];\n        return;\n      }\n      try {\n        await axios.post('http://localhost:8081/api/insert_role', this.formData);\n        this.errors = null;\n        this.formData = {\n          nom_role: ''\n        }; // Reset form data\n      } catch (error) {\n        console.error('Error response:', error.response);\n        if (error.response && error.response.data && error.response.data.message) {\n          this.errors = [error.response.data.message];\n        } else if (error.response && error.response.data && error.response.data.errors) {\n          this.errors = error.response.data.errors;\n        } else {\n          this.errors = [\"An unknown error occurred. Please try again later.\"];\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","formData","nom_role","errors","methods","submitForm","post","error","console","response","message"],"sources":["src/pages/InsertRole.vue"],"sourcesContent":["<template>\n    <card class=\"card\" title=\"Insert Document\">\n      <div>\n        <form @submit.prevent>\n          <div v-if=\"errors\" class=\"alert alert-danger\">\n            <ul>\n              <li v-for=\"error in errors\" :key=\"error\">{{ error }}</li>\n            </ul>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <fg-input\n                type=\"text\"\n                label=\"name\"\n                placeholder=\"Enter Role name\"\n                v-model=\"formData.nom_role\"\n              >\n              </fg-input>\n            </div>\n          </div>\n  \n          <div class=\"text-center\">\n            <p-button style=\"background-color:  rgb(1, 31, 65);\" round @click.native.prevent=\"submitForm\">\n              Insert\n            </p-button>\n          </div>\n          <div class=\"clearfix\"></div>\n        </form>\n      </div>\n    </card>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        formData: {\n          nom_role: '',\n        },\n        errors: null,\n      };\n    },\n    methods: {\n      async submitForm() {\n        if (!this.formData.nom_role) {\n          this.errors = [\"Please fill in all required fields\"];\n          return;\n        }\n        try {\n          await axios.post('http://localhost:8081/api/insert_role', this.formData);\n          this.errors = null;\n          this.formData = { nom_role: ''}; // Reset form data\n        } catch (error) {\n          console.error('Error response:', error.response);\n            if (error.response && error.response.data && error.response.data.message) {\n              this.errors = [error.response.data.message];\n            } else if (error.response && error.response.data && error.response.data.errors) {\n              this.errors = error.response.data.errors;\n            } else {\n              this.errors = [\"An unknown error occurred. Please try again later.\"];\n            }\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style>\n  </style>"],"mappings":"AAkCA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,QAAA;MACA;MACAC,MAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,WAAA;MACA,UAAAJ,QAAA,CAAAC,QAAA;QACA,KAAAC,MAAA;QACA;MACA;MACA;QACA,MAAAJ,KAAA,CAAAO,IAAA,+CAAAL,QAAA;QACA,KAAAE,MAAA;QACA,KAAAF,QAAA;UAAAC,QAAA;QAAA;MACA,SAAAK,KAAA;QACAC,OAAA,CAAAD,KAAA,oBAAAA,KAAA,CAAAE,QAAA;QACA,IAAAF,KAAA,CAAAE,QAAA,IAAAF,KAAA,CAAAE,QAAA,CAAAT,IAAA,IAAAO,KAAA,CAAAE,QAAA,CAAAT,IAAA,CAAAU,OAAA;UACA,KAAAP,MAAA,IAAAI,KAAA,CAAAE,QAAA,CAAAT,IAAA,CAAAU,OAAA;QACA,WAAAH,KAAA,CAAAE,QAAA,IAAAF,KAAA,CAAAE,QAAA,CAAAT,IAAA,IAAAO,KAAA,CAAAE,QAAA,CAAAT,IAAA,CAAAG,MAAA;UACA,KAAAA,MAAA,GAAAI,KAAA,CAAAE,QAAA,CAAAT,IAAA,CAAAG,MAAA;QACA;UACA,KAAAA,MAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}