{"ast":null,"code":"import _regeneratorRuntime from \"/home/adrienna/Documents/Stage/Suivi_courrier_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/adrienna/Documents/Stage/Suivi_courrier_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      formData: {\n        nom_departement: '',\n        responsable: '',\n        dept_parent: ''\n      },\n      depts: [],\n      errors: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    axios.get('http://localhost:8081/api/departements').then(function (response) {\n      _this.depts = response.data;\n    }).catch(function (error) {\n      console.error('Error fetching departments:', error);\n    });\n  },\n  methods: {\n    submitForm: function submitForm() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!_this2.formData.nom_departement || !_this2.formData.responsable)) {\n                _context.next = 3;\n                break;\n              }\n              _this2.errors = [\"Please fill in all required fields\"];\n              return _context.abrupt(\"return\");\n            case 3:\n              if (!_this2.formData.dept_parent) {\n                _this2.formData.dept_parent = null;\n              }\n              _context.prev = 4;\n              _context.next = 7;\n              return axios.post('http://localhost:8081/api/insert_departement', _this2.formData);\n            case 7:\n              _this2.errors = null;\n              _this2.formData = {\n                nom_departement: '',\n                responsable: '',\n                dept_parent: ''\n              }; // Reset form data\n              _context.next = 15;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](4);\n              console.error('Error response:', _context.t0.response);\n              if (_context.t0.response && _context.t0.response.data && _context.t0.response.data.message) {\n                _this2.errors = [_context.t0.response.data.message];\n              } else if (_context.t0.response && _context.t0.response.data && _context.t0.response.data.errors) {\n                _this2.errors = _context.t0.response.data.errors;\n              } else {\n                _this2.errors = [\"An unknown error occurred. Please try again later.\"];\n              }\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[4, 11]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","formData","nom_departement","responsable","dept_parent","depts","errors","mounted","_this","get","then","response","catch","error","console","methods","submitForm","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","post","t0","message","stop"],"sources":["src/pages/InsertDepartement.vue"],"sourcesContent":["<template>\n  <card class=\"card\" title=\"Insert Departement\">\n    <div>\n      <form @submit.prevent>\n        <div v-if=\"errors\" class=\"alert alert-danger\">\n          <ul>\n            <li v-for=\"error in errors\" :key=\"error\">{{ error }}</li>\n          </ul>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <fg-input\n              type=\"text\"\n              label=\"name\"\n              placeholder=\"Enter Departement name\"\n              v-model=\"formData.nom_departement\"\n            >\n            </fg-input>\n            <fg-input\n              type=\"text\"\n              label=\"responsable\"\n              placeholder=\"Enter Responsable name\"\n              v-model=\"formData.responsable\"\n            >\n            </fg-input>\n\n            <div class=\"form-group\">\n              <label for=\"dept\">Department parent</label>\n              <select v-model=\"formData.dept_parent\" id=\"dept\" class=\"form-control\" placeholder=\"Select a department\">\n                <option v-for=\"dept in depts\" :key=\"dept.id_departement\" :value=\"dept\">\n                  {{ dept.nom_departement }}\n                </option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"text-center\">\n          <p-button style=\"background-color:  rgb(1, 31, 65);\" round @click.native.prevent=\"submitForm\">\n            Insert\n          </p-button>\n        </div>\n      </form>\n    </div>\n  </card>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n\n      formData: {\n        nom_departement: '',\n        responsable: '',\n        dept_parent: ''\n      },\n      depts: [],\n      errors: null,\n    };\n  },\n  mounted() {\n    axios.get('http://localhost:8081/api/departements')\n      .then(response => {\n        this.depts = response.data;\n      })\n      .catch(error => {\n        console.error('Error fetching departments:', error);\n      });\n  },\n  methods: {\n    async submitForm() {\n      if (!this.formData.nom_departement || !this.formData.responsable ) {\n        this.errors = [\"Please fill in all required fields\"];\n        return;\n      }\n\n      if (!this.formData.dept_parent) {\n        this.formData.dept_parent = null;\n      }\n\n      try {\n        await axios.post('http://localhost:8081/api/insert_departement', this.formData);\n        this.errors = null;\n\n        this.formData = { nom_departement: '',responsable:'',dept_parent:''}; // Reset form data\n      } catch (error) {\n        console.error('Error response:', error.response);\n          if (error.response && error.response.data && error.response.data.message) {\n            this.errors = [error.response.data.message];\n          } else if (error.response && error.response.data && error.response.data.errors) {\n            this.errors = error.response.data.errors;\n          } else {\n            this.errors = [\"An unknown error occurred. Please try again later.\"];\n          }\n      }\n\n    }\n  },\n};\n</script>\n\n<style>\n</style>"],"mappings":";;AAiDA,OAAAA,KAAA;AAEA;EACAC,IAAA,WAAAA,KAAA;IACA;MAEAC,QAAA;QACAC,eAAA;QACAC,WAAA;QACAC,WAAA;MACA;MACAC,KAAA;MACAC,MAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IAAA,IAAAC,KAAA;IACAT,KAAA,CAAAU,GAAA,2CACAC,IAAA,WAAAC,QAAA;MACAH,KAAA,CAAAH,KAAA,GAAAM,QAAA,CAAAX,IAAA;IACA,GACAY,KAAA,WAAAC,KAAA;MACAC,OAAA,CAAAD,KAAA,gCAAAA,KAAA;IACA;EACA;EACAE,OAAA;IACAC,UAAA,WAAAA,WAAA;MAAA,IAAAC,MAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAA,MACA,CAAAT,MAAA,CAAAhB,QAAA,CAAAC,eAAA,KAAAe,MAAA,CAAAhB,QAAA,CAAAE,WAAA;gBAAAqB,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACAT,MAAA,CAAAX,MAAA;cAAA,OAAAkB,QAAA,CAAAG,MAAA;YAAA;cAIA,KAAAV,MAAA,CAAAhB,QAAA,CAAAG,WAAA;gBACAa,MAAA,CAAAhB,QAAA,CAAAG,WAAA;cACA;cAAAoB,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAGA3B,KAAA,CAAA6B,IAAA,iDAAAX,MAAA,CAAAhB,QAAA;YAAA;cACAgB,MAAA,CAAAX,MAAA;cAEAW,MAAA,CAAAhB,QAAA;gBAAAC,eAAA;gBAAAC,WAAA;gBAAAC,WAAA;cAAA;cAAAoB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAK,EAAA,GAAAL,QAAA;cAEAV,OAAA,CAAAD,KAAA,oBAAAW,QAAA,CAAAK,EAAA,CAAAlB,QAAA;cACA,IAAAa,QAAA,CAAAK,EAAA,CAAAlB,QAAA,IAAAa,QAAA,CAAAK,EAAA,CAAAlB,QAAA,CAAAX,IAAA,IAAAwB,QAAA,CAAAK,EAAA,CAAAlB,QAAA,CAAAX,IAAA,CAAA8B,OAAA;gBACAb,MAAA,CAAAX,MAAA,IAAAkB,QAAA,CAAAK,EAAA,CAAAlB,QAAA,CAAAX,IAAA,CAAA8B,OAAA;cACA,WAAAN,QAAA,CAAAK,EAAA,CAAAlB,QAAA,IAAAa,QAAA,CAAAK,EAAA,CAAAlB,QAAA,CAAAX,IAAA,IAAAwB,QAAA,CAAAK,EAAA,CAAAlB,QAAA,CAAAX,IAAA,CAAAM,MAAA;gBACAW,MAAA,CAAAX,MAAA,GAAAkB,QAAA,CAAAK,EAAA,CAAAlB,QAAA,CAAAX,IAAA,CAAAM,MAAA;cACA;gBACAW,MAAA,CAAAX,MAAA;cACA;YAAA;YAAA;cAAA,OAAAkB,QAAA,CAAAO,IAAA;UAAA;QAAA,GAAAV,OAAA;MAAA;IAGA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}