{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      courriersEnAttente: [],\n      table1: {\n        title: 'Table in Waiting for Registration',\n        subTitle: 'List of Couriers Awaiting Registration'\n      },\n      errors: null,\n      tableColumns: [\"Id\", \"Date of Reception\", \"Name\", \"Description\", \"Expeditor\", \"Departement\", \"Actions\"],\n      showForm: false,\n      selectedCourrier: {},\n      departements: []\n    };\n  },\n  mounted() {\n    this.getCourriersEnAttente();\n    this.getDepartements();\n  },\n  methods: {\n    async getCourriersEnAttente() {\n      try {\n        const response = await axios.get(\"http://localhost:8081/api/courriers_attente\");\n        console.log(response.data);\n        this.courriersEnAttente = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getDepartements() {\n      try {\n        const response = await axios.get(\"http://localhost:8081/api/departements\");\n        this.departements = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async confirmCourrier(courrier) {\n      try {\n        this.error = null;\n        const response = await axios.put('http://localhost:8081/api/confirm_courrier', courrier);\n        this.getCourriersEnAttente();\n      } catch (error) {\n        if (error.response && error.response.data && error.response.data.errors) {\n          this.errors = error.response.data.errors;\n        } else {\n          this.errors = [\"Une erreur est survenue\"];\n        }\n      }\n    },\n    showUpdateForm(courrier) {\n      console.log(\"showUpdateForm called with:\", courrier);\n      this.selectedCourrier = {\n        ...courrier\n      };\n      this.showForm = true;\n      console.log(\"showForm set to true\");\n    },\n    hideUpdateForm() {\n      this.showForm = false;\n    },\n    async submitUpdate() {\n      if (!this.selectedCourrier.date_reception || !this.selectedCourrier.nom_courrier || !this.selectedCourrier.expediteur || !this.selectedCourrier.dept_destinataire) {\n        this.errors = [\"Please fill in all fields\"];\n        return;\n      }\n      try {\n        const courrier = {\n          id_courrier: this.selectedCourrier.id_courrier,\n          date_reception: this.selectedCourrier.date_reception,\n          nom_courrier: this.selectedCourrier.nom_courrier,\n          description: this.selectedCourrier.description,\n          expediteur: this.selectedCourrier.expediteur,\n          statut: this.selectedCourrier.statut,\n          dept_destinataire: this.selectedCourrier.dept_destinataire\n        };\n        this.errors = null;\n        console.log(\"Données du formulaire :\", courrier);\n        const response = await axios.put(`http://localhost:8081/api/update_courrier/${this.selectedCourrier.id_courrier}`, courrier, {});\n        console.log(response.data);\n        this.hideUpdateForm();\n        this.getCourriersEnAttente();\n      } catch (error) {\n        if (error.response && error.response.data && error.response.data.message) {\n          this.errors = [error.response.data.message];\n        } else if (error.response && error.response.data && error.response.data.errors) {\n          this.errors = error.response.data.errors;\n        } else {\n          this.errors = [\"An unknown error occurred. Please try again later.\"];\n        }\n      }\n    }\n  },\n  watch: {\n    showForm(newVal) {\n      console.log(\"showForm changed to:\", newVal);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","courriersEnAttente","table1","title","subTitle","errors","tableColumns","showForm","selectedCourrier","departements","mounted","getCourriersEnAttente","getDepartements","methods","response","get","console","log","error","confirmCourrier","courrier","put","showUpdateForm","hideUpdateForm","submitUpdate","date_reception","nom_courrier","expediteur","dept_destinataire","id_courrier","description","statut","message","watch","newVal"],"sources":["src/pages/ValidationCourrier.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <h3>{{ table1.title }}</h3>\n            <p>{{ table1.subTitle }}</p>\n          </div>\n\n          <div v-if=\"errors\" class=\"alert alert-danger\">\n            <ul>\n              <li v-for=\"error in errors\" :key=\"error\">{{ error }}</li>\n            </ul>\n          </div>\n\n          <div class=\"card-body table-responsive\">\n            <table class=\"table\">\n              <thead>\n                <tr>\n                  <th v-for=\"column in tableColumns\" :key=\"column\">{{ column }}</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"courrier in courriersEnAttente\" :key=\"courrier.id_courrier\">\n                  <td>{{ courrier.id_courrier }}</td>\n                  <td>{{ courrier.date_reception }}</td>\n                  <td>{{ courrier.nom_courrier }}</td>\n                  <td class=\"description\">{{ courrier.description }}</td>\n                  <td>{{ courrier.expediteur }}</td>\n                  <td>\n                    <span v-if=\"courrier.dept_destinataire && courrier.dept_destinataire.nom_departement\">\n                      {{ courrier.dept_destinataire.nom_departement }}\n                    </span>\n                  </td>\n                  <td>\n                    <div class=\"btn-group\">\n                      <button class=\"btn btn-confirm\" @click=\"confirmCourrier(courrier)\">Confirm</button>\n                      <button class=\"btn btn-update\" @click=\"showUpdateForm(courrier)\">Update</button>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  <!-- Formulaire de mise à jour en tant que modal -->\n    <div v-if=\"showForm\" class=\"modal\">\n      <div class=\"modal-content\">\n        <span class=\"close\" @click=\"hideUpdateForm\">&times;</span>\n        <h3 style=\"color: #FF5733;\">Update Courrier</h3>\n        <form @submit.prevent=\"submitUpdate\">\n          \n          <div v-if=\"errors\" class=\"alert alert-danger\">\n            <ul>\n              <li v-for=\"error in errors\" :key=\"error\">{{ error }}</li>\n            </ul>\n          </div>\n          \n          <div class=\"form-group\">\n            <label for=\"date_reception\">Date of Reception</label>\n            <input type=\"date\" id=\"date_reception\" v-model=\"selectedCourrier.date_reception\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"nom_courrier\">Name</label>\n            <input type=\"text\" id=\"nom_courrier\" v-model=\"selectedCourrier.nom_courrier\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"description\">Description</label>\n            <textarea id=\"description\" v-model=\"selectedCourrier.description\" rows=\"5\"/>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"expediteur\">Expeditor</label>\n            <input type=\"text\" id=\"expediteur\" v-model=\"selectedCourrier.expediteur\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"dept_destinataire\">Departement</label>\n            <select id=\"dept_destinataire\" v-model=\"selectedCourrier.dept_destinataire\">\n              <option v-for=\"dept in departements\" :key=\"dept.id\" :value=\"dept\">{{ dept.nom_departement }}</option>\n            </select>\n          </div>\n          <button type=\"submit\" class=\"btn btn-submit\" >Submit</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      courriersEnAttente: [],\n      table1: {\n        title: 'Table in Waiting for Registration',\n        subTitle: 'List of Couriers Awaiting Registration'\n      },\n      errors: null,\n      tableColumns: [\"Id\", \"Date of Reception\", \"Name\", \"Description\", \"Expeditor\", \"Departement\", \"Actions\"],\n      showForm: false,\n      selectedCourrier: {},\n      departements: []\n    };\n  },\n  mounted() {\n    this.getCourriersEnAttente();\n    this.getDepartements();\n  },\n  methods: {\n    async getCourriersEnAttente() {\n      try {\n        const response = await axios.get(\"http://localhost:8081/api/courriers_attente\");\n        console.log(response.data); \n        this.courriersEnAttente = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getDepartements() {\n      try {\n        const response = await axios.get(\"http://localhost:8081/api/departements\");\n        this.departements = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async confirmCourrier(courrier) {\n      try {\n        this.error = null;\n        const response = await axios.put('http://localhost:8081/api/confirm_courrier', courrier);\n        this.getCourriersEnAttente();\n      } catch (error) {\n        if (error.response && error.response.data && error.response.data.errors) {\n          this.errors = error.response.data.errors;\n        } else {\n          this.errors = [\"Une erreur est survenue\"];\n        }\n      }\n    },\n    showUpdateForm(courrier) {\n      console.log(\"showUpdateForm called with:\", courrier);\n      this.selectedCourrier = { ...courrier };\n      this.showForm = true;\n      console.log(\"showForm set to true\");\n    },\n    hideUpdateForm() {\n      this.showForm = false;\n    },\n    async submitUpdate() {\n      if (!this.selectedCourrier.date_reception || !this.selectedCourrier.nom_courrier || !this.selectedCourrier.expediteur || !this.selectedCourrier.dept_destinataire) {\n          this.errors = [\"Please fill in all fields\"];\n          return;\n      }\n      try {\n        const courrier = {\n          id_courrier: this.selectedCourrier.id_courrier,\n          date_reception: this.selectedCourrier.date_reception,\n          nom_courrier: this.selectedCourrier.nom_courrier,\n          description: this.selectedCourrier.description,\n          expediteur: this.selectedCourrier.expediteur,\n          statut:this.selectedCourrier.statut,\n          dept_destinataire: this.selectedCourrier.dept_destinataire\n        };\n        this.errors = null;\n        console.log(\"Données du formulaire :\", courrier);\n        const response = await axios.put(`http://localhost:8081/api/update_courrier/${this.selectedCourrier.id_courrier}`, courrier, {\n        });\n        console.log(response.data);\n        this.hideUpdateForm();\n        this.getCourriersEnAttente();\n      } catch (error) {\n            if (error.response && error.response.data && error.response.data.message) {\n              this.errors = [error.response.data.message];\n            } else if (error.response && error.response.data && error.response.data.errors) {\n              this.errors = error.response.data.errors;\n            } else {\n              this.errors = [\"An unknown error occurred. Please try again later.\"];\n            }\n      }\n    }\n  },\n  watch: {\n    showForm(newVal) {\n      console.log(\"showForm changed to:\", newVal);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.card {\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  margin-bottom: 20px;\n}\n.card-header {\n  background-color: #343a40;\n  color: white;\n  padding: 15px;\n  border-bottom: 1px solid #343a40;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n}\n.card-header h3 {\n  margin: 0;\n  color:black;\n}\n.card-header p {\n  margin: 0;\n  font-size: 16px;\n  color: #504e4e;\n}\n.table {\n  width: 100%;\n  border-collapse: collapse;\n}\n.table th, .table td {\n  border: 1px solid #ddd;\n  padding: 8px;\n  text-align: left;\n}\n.table th {\n  background-color: #f2f2f2;\n  font-weight: bold;\n}\n.table tbody tr:nth-child(even) {\n  background-color: #f9f9f9;\n}\n.table tbody tr:hover {\n  background-color: #f1f1f1;\n}\ntd {\n  word-wrap: break-word;\n  max-width: 200px; /* ajustez la largeur selon vos besoins */\n}\ntd.description {\n  word-wrap: break-word;\n  max-width: auto; /* ajustez la largeur selon vos besoins */\n}\n.btn-group {\n  display: flex;\n  gap: 10px;\n}\n.btn {\n  padding: 10px 15px;\n  font-size: 14px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n.btn-confirm {\n  background-color: #28a745;\n  color: white;\n}\n.btn-update {\n  background-color:  rgb(1, 31, 65);\n  color: white;\n}\n.btn-confirm:hover {\n  background-color: #218838;\n}\n.btn-update:hover {\n  background-color: #023c7a;\n}\n.modal {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: rgba(0, 0, 0, 0.4);\n}\n.modal-content {\n  background-color:  rgba(245, 243, 243, 0.9);\n  padding: 20px;\n  border: 1px solid #888;\n  width: 80%;\n  max-width: 600px;\n  border-radius: 5px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  position: relative;\n  overflow-y: auto;\n}\n.close {\n  color: #fff;\n  background-color: #dc3545;\n  border-radius: 50%;\n  padding: 5px 10px;\n  position: absolute;\n  top: 20px;\n  right: 10px;\n  font-size: 20px;\n  font-weight: bold;\n  cursor: pointer;\n}\n.close:hover,\n.close:focus {\n  background-color: #c82333;\n  text-decoration: none;\n}\n.update-form h3 {\n  margin-bottom: 20px;\n}\n.form-group {\n  margin-bottom: 15px;\n}\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n}\n.form-group input {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n}\n.btn-submit {\n  background-color: #28a745;\n  color: white;\n}\n.btn-cancel {\n  background-color: #dc3545;\n  color: white;\n  margin-left: 10px;\n}\n.btn-submit:hover {\n  background-color: #218838;\n}\n.btn-cancel:hover {\n  background-color: #c82333;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}