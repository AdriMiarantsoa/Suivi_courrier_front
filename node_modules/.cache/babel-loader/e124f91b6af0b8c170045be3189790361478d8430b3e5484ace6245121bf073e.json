{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      formData: {\n        nom_departement: '',\n        responsable: '',\n        dept_parent: ''\n      },\n      depts: [],\n      errors: null\n    };\n  },\n  mounted() {\n    axios.get('http://localhost:8081/api/departements').then(response => {\n      this.depts = response.data;\n    }).catch(error => {\n      console.error('Error fetching departments:', error);\n    });\n  },\n  methods: {\n    async submitForm() {\n      if (!this.formData.nom_departement || !this.formData.responsable) {\n        this.errors = [\"Please fill in all required fields\"];\n        return;\n      }\n      if (!this.formData.dept_parent) {\n        this.formData.dept_parent = null;\n      }\n      try {\n        await axios.post('http://localhost:8081/api/insert_departement', this.formData);\n        this.errors = null;\n        this.formData = {\n          nom_departement: '',\n          responsable: '',\n          dept_parent: ''\n        }; // Reset form data\n      } catch (error) {\n        console.error('Error response:', error.response);\n        if (error.response && error.response.data && error.response.data.message) {\n          this.errors = [error.response.data.message];\n        } else if (error.response && error.response.data && error.response.data.errors) {\n          this.errors = error.response.data.errors;\n        } else {\n          this.errors = [\"An unknown error occurred. Please try again later.\"];\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","formData","nom_departement","responsable","dept_parent","depts","errors","mounted","get","then","response","catch","error","console","methods","submitForm","post","message"],"sources":["src/pages/InsertDepartement.vue"],"sourcesContent":["<template>\n    <card class=\"card\" title=\"Insert Departement\">\n      <div>\n        <form @submit.prevent>\n          <div v-if=\"errors\" class=\"alert alert-danger\">\n            <ul>\n              <li v-for=\"error in errors\" :key=\"error\">{{ error }}</li>\n            </ul>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <fg-input\n                type=\"text\"\n                label=\"name\"\n                placeholder=\"Enter Departement name\"\n                v-model=\"formData.nom_departement\"\n              >\n              </fg-input>\n              <fg-input\n                type=\"text\"\n                label=\"responsable\"\n                placeholder=\"Enter Responsable name\"\n                v-model=\"formData.responsable\"\n              >\n              </fg-input>\n\n              <div class=\"form-group\">\n                <label for=\"dept\">Department parent</label>\n                <select v-model=\"formData.dept_parent\" id=\"dept\" class=\"form-control\" placeholder=\"Select a department\">\n                  <option v-for=\"dept in depts\" :key=\"dept.id_departement\" :value=\"dept\">\n                    {{ dept.nom_departement }}\n                  </option>\n                </select>\n              </div>\n            </div>\n          </div>\n  \n          <div class=\"text-center\">\n            <p-button style=\"background-color:  rgb(1, 31, 65);\" round @click.native.prevent=\"submitForm\">\n              Insert\n            </p-button>\n          </div>\n        </form>\n      </div>\n    </card>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n\n        formData: {\n          nom_departement: '',\n          responsable: '',\n          dept_parent: ''\n        },\n        depts: [],\n        errors: null,\n      };\n    },\n    mounted() {\n      axios.get('http://localhost:8081/api/departements')\n        .then(response => {\n          this.depts = response.data;\n        })\n        .catch(error => {\n          console.error('Error fetching departments:', error);\n        });\n    },\n    methods: {\n      async submitForm() {\n        if (!this.formData.nom_departement || !this.formData.responsable ) {\n          this.errors = [\"Please fill in all required fields\"];\n          return;\n        }\n\n        if (!this.formData.dept_parent) {\n          this.formData.dept_parent = null;\n        }\n\n        try {\n          await axios.post('http://localhost:8081/api/insert_departement', this.formData);\n          this.errors = null;\n\n          this.formData = { nom_departement: '',responsable:'',dept_parent:''}; // Reset form data\n        } catch (error) {\n          console.error('Error response:', error.response);\n            if (error.response && error.response.data && error.response.data.message) {\n              this.errors = [error.response.data.message];\n            } else if (error.response && error.response.data && error.response.data.errors) {\n              this.errors = error.response.data.errors;\n            } else {\n              this.errors = [\"An unknown error occurred. Please try again later.\"];\n            }\n        }\n\n      }\n    },\n  };\n  </script>\n  \n  <style>\n  </style>"],"mappings":"AAiDA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MAEAC,QAAA;QACAC,eAAA;QACAC,WAAA;QACAC,WAAA;MACA;MACAC,KAAA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACAR,KAAA,CAAAS,GAAA,2CACAC,IAAA,CAAAC,QAAA;MACA,KAAAL,KAAA,GAAAK,QAAA,CAAAV,IAAA;IACA,GACAW,KAAA,CAAAC,KAAA;MACAC,OAAA,CAAAD,KAAA,gCAAAA,KAAA;IACA;EACA;EACAE,OAAA;IACA,MAAAC,WAAA;MACA,UAAAd,QAAA,CAAAC,eAAA,UAAAD,QAAA,CAAAE,WAAA;QACA,KAAAG,MAAA;QACA;MACA;MAEA,UAAAL,QAAA,CAAAG,WAAA;QACA,KAAAH,QAAA,CAAAG,WAAA;MACA;MAEA;QACA,MAAAL,KAAA,CAAAiB,IAAA,sDAAAf,QAAA;QACA,KAAAK,MAAA;QAEA,KAAAL,QAAA;UAAAC,eAAA;UAAAC,WAAA;UAAAC,WAAA;QAAA;MACA,SAAAQ,KAAA;QACAC,OAAA,CAAAD,KAAA,oBAAAA,KAAA,CAAAF,QAAA;QACA,IAAAE,KAAA,CAAAF,QAAA,IAAAE,KAAA,CAAAF,QAAA,CAAAV,IAAA,IAAAY,KAAA,CAAAF,QAAA,CAAAV,IAAA,CAAAiB,OAAA;UACA,KAAAX,MAAA,IAAAM,KAAA,CAAAF,QAAA,CAAAV,IAAA,CAAAiB,OAAA;QACA,WAAAL,KAAA,CAAAF,QAAA,IAAAE,KAAA,CAAAF,QAAA,CAAAV,IAAA,IAAAY,KAAA,CAAAF,QAAA,CAAAV,IAAA,CAAAM,MAAA;UACA,KAAAA,MAAA,GAAAM,KAAA,CAAAF,QAAA,CAAAV,IAAA,CAAAM,MAAA;QACA;UACA,KAAAA,MAAA;QACA;MACA;IAEA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}