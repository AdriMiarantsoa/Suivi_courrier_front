{"ast":null,"code":"import _regeneratorRuntime from \"/home/adrienna/Documents/Stage/Suivi_courrier_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/adrienna/Documents/Stage/Suivi_courrier_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { PaperTable } from \"@/components\";\nimport axios from 'axios';\nexport default {\n  components: {\n    PaperTable: PaperTable\n  },\n  data: function data() {\n    return {\n      courriersEnAttente: [],\n      table1: {\n        title: 'Table in Waiting for Registration',\n        subTitle: 'List of Couriers Awaiting Registration'\n      },\n      tableColumns: [{\n        label: 'Id',\n        field: 'id'\n      }, {\n        label: 'Date of Reception',\n        field: 'dateOfReception'\n      }, {\n        label: 'Name',\n        field: 'name'\n      }, {\n        label: 'Description',\n        field: 'description'\n      }, {\n        label: 'Expeditor',\n        field: 'expeditor'\n      }, {\n        label: 'Departement',\n        field: 'departement'\n      }, {\n        label: 'Actions',\n        field: 'actions'\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.getCourriersEnAttente();\n  },\n  methods: {\n    getCourriersEnAttente: function getCourriersEnAttente() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"http://localhost:8081/api/courriers_attente\");\n            case 3:\n              response = _context.sent;\n              console.log(response.data);\n              _this.courriersEnAttente = response.data;\n              _context.next = 11;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 8]]);\n      }))();\n    },\n    confirmCourrier: function confirmCourrier(id) {\n      // Code pour confirmer le courrier\n    },\n    updateCourrier: function updateCourrier(id) {\n      // Code pour mettre à jour le courrier\n    }\n  }\n};","map":{"version":3,"names":["PaperTable","axios","components","data","courriersEnAttente","table1","title","subTitle","tableColumns","label","field","mounted","getCourriersEnAttente","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","sent","console","log","t0","error","stop","confirmCourrier","id","updateCourrier"],"sources":["src/pages/ValidationCourrier.vue"],"sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <card :title=\"table1.title\" :subTitle=\"table1.subTitle\">\n        <div slot=\"raw-content\" class=\"table-responsive\">\n          <paper-table :data=\"courriersEnAttente\" :columns=\"tableColumns\">\n            <template #actions=\"{ row }\">\n              <button @click=\"confirmCourrier(row.id)\">Confirm</button>\n              <button @click=\"updateCourrier(row.id)\">Update</button>\n            </template>\n          </paper-table>\n        </div>\n      </card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { PaperTable } from \"@/components\";\nimport axios from 'axios';\n  \nexport default {\n  components: {\n    PaperTable,\n  },\n  data() {\n    return {\n      courriersEnAttente: [],\n      table1: {\n        title: 'Table in Waiting for Registration',\n        subTitle: 'List of Couriers Awaiting Registration'\n      },\n      tableColumns: [\n        { label: 'Id', field: 'id' },\n        { label: 'Date of Reception', field: 'dateOfReception' },\n        { label: 'Name', field: 'name' },\n        { label: 'Description', field: 'description' },\n        { label: 'Expeditor', field: 'expeditor' },\n        { label: 'Departement', field: 'departement' },\n        { label: 'Actions', field: 'actions' }\n      ]\n    };\n  },\n  mounted() {\n    this.getCourriersEnAttente();\n  },\n  methods: {\n    async getCourriersEnAttente() {\n      try {\n        const response = await axios.get(\"http://localhost:8081/api/courriers_attente\");\n        console.log(response.data); \n        this.courriersEnAttente = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    confirmCourrier(id) {\n      // Code pour confirmer le courrier\n    },\n    updateCourrier(id) {\n      // Code pour mettre à jour le courrier\n    },\n  },\n};\n</script>"],"mappings":";;AAkBA,SAAAA,UAAA;AACA,OAAAC,KAAA;AAEA;EACAC,UAAA;IACAF,UAAA,EAAAA;EACA;EACAG,IAAA,WAAAA,KAAA;IACA;MACAC,kBAAA;MACAC,MAAA;QACAC,KAAA;QACAC,QAAA;MACA;MACAC,YAAA,GACA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA;IAEA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,qBAAA;EACA;EACAC,OAAA;IACAD,qBAAA,WAAAA,sBAAA;MAAA,IAAAE,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEAvB,KAAA,CAAAwB,GAAA;YAAA;cAAAN,QAAA,GAAAG,QAAA,CAAAI,IAAA;cACAC,OAAA,CAAAC,GAAA,CAAAT,QAAA,CAAAhB,IAAA;cACAW,KAAA,CAAAV,kBAAA,GAAAe,QAAA,CAAAhB,IAAA;cAAAmB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAO,EAAA,GAAAP,QAAA;cAEAK,OAAA,CAAAG,KAAA,CAAAR,QAAA,CAAAO,EAAA;YAAA;YAAA;cAAA,OAAAP,QAAA,CAAAS,IAAA;UAAA;QAAA,GAAAb,OAAA;MAAA;IAEA;IACAc,eAAA,WAAAA,gBAAAC,EAAA;MACA;IAAA,CACA;IACAC,cAAA,WAAAA,eAAAD,EAAA;MACA;IAAA;EAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}