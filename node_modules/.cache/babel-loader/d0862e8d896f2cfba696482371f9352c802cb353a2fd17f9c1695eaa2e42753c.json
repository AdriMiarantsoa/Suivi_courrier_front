{"ast":null,"code":"import _regeneratorRuntime from \"/home/adrienna/Documents/Stage/Suivi_courrier_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/adrienna/Documents/Stage/Suivi_courrier_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      formData: {\n        nom_courrier: '',\n        expediteur: '',\n        description: '',\n        dept_destinataire: ''\n      },\n      files: [],\n      depts: [],\n      errors: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    axios.get('http://localhost:8081/api/departements').then(function (response) {\n      _this.depts = response.data;\n    }).catch(function (error) {\n      console.error('Error fetching departments:', error);\n    });\n  },\n  methods: {\n    handleFileUpload: function handleFileUpload(event) {\n      this.files = Array.from(event.target.files); // Convertir FileList en tableau\n    },\n    submitForm: function submitForm() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var formDataToSend, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!_this2.formData.nom_courrier || !_this2.formData.expediteur || !_this2.formData.dept_destinataire)) {\n                _context.next = 3;\n                break;\n              }\n              _this2.errors = [\"Veuillez remplir les champs nécessaires\"];\n              return _context.abrupt(\"return\");\n            case 3:\n              // Créer un nouvel objet FormData\n              formDataToSend = new FormData(); // Ajouter les champs du formulaire à FormData\n              formDataToSend.append('nom_courrier', _this2.formData.nom_courrier);\n              formDataToSend.append('expediteur', _this2.formData.expediteur);\n              formDataToSend.append('description', _this2.formData.description);\n\n              // Vérifier la valeur de dept_destinataire\n              console.log('dept_destinataire:', _this2.formData.dept_destinataire);\n\n              // Assurez-vous que dept_destinataire est un objet avec un ID valide\n              if (!(_this2.formData.dept_destinataire && _this2.formData.dept_destinataire.id_departement)) {\n                _context.next = 12;\n                break;\n              }\n              formDataToSend.append('dept_destinataire', JSON.stringify(_this2.formData.dept_destinataire));\n              _context.next = 14;\n              break;\n            case 12:\n              _this2.errors = [\"Le département sélectionné est invalide\"];\n              return _context.abrupt(\"return\");\n            case 14:\n              // Ajouter les fichiers à FormData\n              _this2.files.forEach(function (file) {\n                formDataToSend.append('files', file);\n              });\n              _context.prev = 15;\n              _context.next = 18;\n              return axios.post('http://localhost:8081/api/insert_courrier', formDataToSend, {\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                }\n              });\n            case 18:\n              response = _context.sent;\n              _this2.errors = null;\n              // Réinitialiser les données du formulaire\n              _this2.formData = {\n                nom_courrier: '',\n                expediteur: '',\n                description: '',\n                dept_destinataire: ''\n              };\n              _this2.files = []; // Réinitialiser les fichiers\n              _context.next = 28;\n              break;\n            case 24:\n              _context.prev = 24;\n              _context.t0 = _context[\"catch\"](15);\n              console.error('Error response:', _context.t0.response);\n              if (_context.t0.response && _context.t0.response.data && _context.t0.response.data.message) {\n                _this2.errors = [_context.t0.response.data.message];\n              } else if (_context.t0.response && _context.t0.response.data && _context.t0.response.data.errors) {\n                _this2.errors = _context.t0.response.data.errors;\n              } else {\n                _this2.errors = [\"Une erreur est survenue\"];\n              }\n            case 28:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[15, 24]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","formData","nom_courrier","expediteur","description","dept_destinataire","files","depts","errors","mounted","_this","get","then","response","catch","error","console","methods","handleFileUpload","event","Array","from","target","submitForm","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formDataToSend","wrap","_callee$","_context","prev","next","abrupt","FormData","append","log","id_departement","JSON","stringify","forEach","file","post","headers","sent","t0","message","stop"],"sources":["src/pages/InsertCourrier.vue"],"sourcesContent":["<template>\n    <card class=\"card\" title=\"Insertion Courrier\">\n      <div>\n        <form @submit.prevent>\n          <div v-if=\"errors\" class=\"alert alert-danger\">\n            <ul>\n              <li v-for=\"error in errors\" :key=\"error\">{{ error }}</li>\n            </ul>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <fg-input\n                type=\"text\"\n                label=\"nom\"\n                placeholder=\"Entre le nom du courrier\"\n                class=\"form-input\"\n                v-model=\"formData.nom_courrier\"\n              >\n              </fg-input>\n              <fg-input\n                type=\"text\"\n                label=\"expediteur\"\n                placeholder=\"Entre le nom de l'expediteur\"\n                class=\"form-input\"\n                v-model=\"formData.expediteur\"\n              >\n              </fg-input>\n              <textarea name=\"description\" \n                label=\"description\"\n                placeholder=\"Entre la description\" \n                rows=\"5\"\n                class=\"form-control border-input\"\n                v-model=\"formData.description\"\n              >\n              </textarea>\n              <!-- dropdown dept -->\n            <br>\n              <div class=\"form-group\">\n                <label for=\"dept\">Department</label>\n                <select v-model=\"formData.dept_destinataire\" id=\"dept-courrier\" class=\"form-control\" placeholder=\"Select a department\">\n                  <option v-for=\"dept in depts\" :key=\"dept.id_departement\" :value=\"dept\">\n                    {{ dept.nom_departement }}\n                  </option>\n                </select>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"files\">Aperçu du courrier</label>\n                <input type=\"file\" id=\"files\" multiple @change=\"handleFileUpload\" />\n              </div>\n\n            </div>\n          </div>\n          <div class=\"text-center\">\n            <p-button style=\"background-color:#007BFF\" round @click.native.prevent=\"submitForm\">\n              Insert\n            </p-button>\n          </div>\n          <div class=\"clearfix\"></div>\n        </form>\n      </div>\n    </card>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        formData: {\n          nom_courrier: '',\n          expediteur: '',\n          description: '',\n          dept_destinataire: '',\n        },\n        files: [],\n        depts: [],\n        errors: null,\n      };\n    },\n    mounted() {\n      axios.get('http://localhost:8081/api/departements')\n        .then(response => {\n          this.depts = response.data;\n        })\n        .catch(error => {\n          console.error('Error fetching departments:', error);\n        });\n      },\n    methods: {\n      handleFileUpload(event) {\n        this.files = Array.from(event.target.files); // Convertir FileList en tableau\n      },async submitForm() {\n  // Vérifiez que tous les champs nécessaires sont remplis\n  if (!this.formData.nom_courrier || !this.formData.expediteur || !this.formData.dept_destinataire) {\n    this.errors = [\"Veuillez remplir les champs nécessaires\"];\n    return;\n  }\n\n  // Créer un nouvel objet FormData\n  const formDataToSend = new FormData();\n\n  // Ajouter les champs du formulaire à FormData\n  formDataToSend.append('nom_courrier', this.formData.nom_courrier);\n  formDataToSend.append('expediteur', this.formData.expediteur);\n  formDataToSend.append('description', this.formData.description);\n\n  // Vérifier la valeur de dept_destinataire\n  console.log('dept_destinataire:', this.formData.dept_destinataire);\n\n  // Assurez-vous que dept_destinataire est un objet avec un ID valide\n  if (this.formData.dept_destinataire && this.formData.dept_destinataire.id_departement) {\n    formDataToSend.append('dept_destinataire', JSON.stringify(this.formData.dept_destinataire));\n  } else {\n    this.errors = [\"Le département sélectionné est invalide\"];\n    return;\n  }\n\n  // Ajouter les fichiers à FormData\n  this.files.forEach(file => {\n    formDataToSend.append('files', file);\n  });\n\n  try {\n    const response = await axios.post('http://localhost:8081/api/insert_courrier', formDataToSend, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n\n    this.errors = null;\n    // Réinitialiser les données du formulaire\n    this.formData = { nom_courrier: '', expediteur: '', description: '', dept_destinataire: '' }; \n    this.files = []; // Réinitialiser les fichiers\n  } catch (error) {\n    console.error('Error response:', error.response);\n    if (error.response && error.response.data && error.response.data.message) {\n      this.errors = [error.response.data.message];\n    } else if (error.response && error.response.data && error.response.data.errors) {\n      this.errors = error.response.data.errors;\n    } else {\n      this.errors = [\"Une erreur est survenue\"];\n    }\n  }\n},\n    },\n  };\n  </script>\n  \n  <style>\n  .card {\n    border: 1px solid #b1abab;\n    border-radius: 5px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n    margin-bottom: 20px;\n    max-height: max-content; \n    overflow-y: auto; \n    overflow-x: hidden; \n  }\n  \n  form {\n    max-height: 100%;\n  }\n  .form-input, .form-select, .form-textarea {\n    width: 100%; \n    padding: 12px;\n    border: 1px solid #a3a3a3; \n    border-radius: 5px; \n    margin-bottom: 15px; \n    font-size: 16px; \n    transition: border-color 0.3s; \n  }\n  #dept-courrier{\n    width: 100%; \n    padding: 12px;\n    border: 1px solid #a3a3a3; \n    border-radius: 5px; \n    margin-bottom: 15px; \n    font-size: 12px; \n    transition: border-color 0.3s; \n  }\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}