{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      courriersEnAttente: [],\n      table1: {\n        title: 'Tableau des courriers non enregistrés',\n        subTitle: 'Listes des courriers en attente de confirmation'\n      },\n      errors: null,\n      tableColumns: [\"Id\", \"Date de reception\", \"Nom\", \"Description\", \"Expediteur\", \"Departement\", \"Actions\"],\n      showForm: false,\n      selectedCourrier: {},\n      departements: [],\n      currentPage: 1,\n      itemsPerPage: 5,\n      totalItems: 0\n    };\n  },\n  mounted() {\n    this.getCourriersEnAttente();\n    this.getDepartements();\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.totalItems / this.itemsPerPage);\n    },\n    currentItems() {\n      if (!this.courriersEnAttente) return [];\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      return this.courriersEnAttente.slice(start, start + this.itemsPerPage);\n    }\n  },\n  methods: {\n    async getCourriersEnAttente() {\n      try {\n        const params = new URLSearchParams({\n          page: this.currentPage,\n          limit: this.itemsPerPage\n        });\n        const response = await axios.get(`http://localhost:8081/api/courriers_attente?${params}`);\n        if (response.data) {\n          this.courriersEnAttente = response.data;\n          this.totalItems = response.data.length;\n          console.log(\"Courriers chargés :\", this.courriersEnAttente);\n        } else {\n          this.courriersEnAttente = [];\n          this.totalItems = 0;\n          console.log(\"Aucun courrier trouvé\");\n        }\n      } catch (error) {\n        console.error(\"Erreur lors du chargement des courriers :\", error);\n        this.courriersEnAttente = [];\n        this.totalItems = 0;\n        this.errors = [\"Erreur lors du chargement des courriers\"];\n      }\n    },\n    async getDepartements() {\n      try {\n        const response = await axios.get(\"http://localhost:8081/api/departements\");\n        this.departements = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async confirmCourrier(courrier) {\n      try {\n        this.error = null;\n        const response = await axios.put('http://localhost:8081/api/confirm_courrier', courrier);\n        this.getCourriersEnAttente();\n      } catch (error) {\n        if (error.response && error.response.data && error.response.data.errors) {\n          this.errors = error.response.data.errors;\n        } else {\n          this.errors = [\"Une erreur est survenue\"];\n        }\n      }\n    },\n    showUpdateForm(courrier) {\n      console.log(\"showUpdateForm called with:\", courrier);\n      this.selectedCourrier = {\n        ...courrier\n      };\n      this.showForm = true;\n      console.log(\"showForm set to true\");\n    },\n    hideUpdateForm() {\n      this.showForm = false;\n    },\n    async submitUpdate() {\n      if (!this.selectedCourrier.date_reception || !this.selectedCourrier.nom_courrier || !this.selectedCourrier.expediteur || !this.selectedCourrier.dept_destinataire) {\n        this.errors = [\"Veuillez remplir les champs nécessaires\"];\n        return;\n      }\n      try {\n        const courrier = {\n          id_courrier: this.selectedCourrier.id_courrier,\n          date_reception: this.selectedCourrier.date_reception,\n          nom_courrier: this.selectedCourrier.nom_courrier,\n          description: this.selectedCourrier.description,\n          expediteur: this.selectedCourrier.expediteur,\n          statut: this.selectedCourrier.statut,\n          dept_destinataire: this.selectedCourrier.dept_destinataire\n        };\n        this.errors = null;\n        console.log(\"Données du formulaire :\", courrier);\n        const response = await axios.put(`http://localhost:8081/api/update_courrier/${this.selectedCourrier.id_courrier}`, courrier, {});\n        console.log(response.data);\n        this.hideUpdateForm();\n        this.getCourriersEnAttente();\n      } catch (error) {\n        if (error.response && error.response.data && error.response.data.message) {\n          this.errors = [error.response.data.message];\n        } else if (error.response && error.response.data && error.response.data.errors) {\n          this.errors = error.response.data.errors;\n        } else {\n          this.errors = [\"une erreur a survenue\"];\n        }\n      }\n    },\n    changePage(page) {\n      if (page < 1 || page > this.totalPages) return; // Vérifier les limites\n      this.currentPage = page;\n      this.getCourriersEnAttente();\n    }\n  },\n  watch: {\n    showForm(newVal) {\n      console.log(\"showForm changed to:\", newVal);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","courriersEnAttente","table1","title","subTitle","errors","tableColumns","showForm","selectedCourrier","departements","currentPage","itemsPerPage","totalItems","mounted","getCourriersEnAttente","getDepartements","computed","totalPages","Math","ceil","currentItems","start","slice","methods","params","URLSearchParams","page","limit","response","get","length","console","log","error","confirmCourrier","courrier","put","showUpdateForm","hideUpdateForm","submitUpdate","date_reception","nom_courrier","expediteur","dept_destinataire","id_courrier","description","statut","message","changePage","watch","newVal"],"sources":["src/pages/ValidationCourrier.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"card\">\n          <div v-if=\"courriersEnAttente.length > 0\" class=\"card-header\">\n            <h3>{{ table1.title }}</h3>\n            <p>{{ table1.subTitle }}</p>\n          </div>\n\n          <div v-if=\"errors\" class=\"alert alert-danger\">\n            <ul>\n              <li v-for=\"error in errors\" :key=\"error\">{{ error }}</li>\n            </ul>\n          </div>\n\n          <div class=\"card-body table-responsive\">\n            <table class=\"table\" v-if=\"courriersEnAttente.length > 0\">\n              <thead>\n                <tr>\n                  <th v-for=\"column in tableColumns\" :key=\"column\">{{ column }}</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"courrier in currentItems\" :key=\"courrier.id_courrier\">\n                  <td>{{ courrier.id_courrier }}</td>\n                  <td>{{ courrier.date_reception }}</td>\n                  <td>{{ courrier.nom_courrier }}</td>\n                  <td class=\"description\">{{ courrier.description }}</td>\n                  <td>{{ courrier.expediteur }}</td>\n                  <td>\n                    <span v-if=\"courrier.dept_destinataire && courrier.dept_destinataire.nom_departement\">\n                      {{ courrier.dept_destinataire.nom_departement }}\n                    </span>\n                  </td>\n                  <td>\n                    <div class=\"btn-group\">\n                      <button class=\"btn btn-confirm\" @click=\"confirmCourrier(courrier)\"><i class=\"ti-check\"></i></button>\n                      <button class=\"btn btn-update\" @click=\"showUpdateForm(courrier)\"><i class=\"ti-pencil\"></i></button>\n                    </div>\n                  </td>\n                </tr>\n                </tbody>\n            </table>\n\n            <div v-else class=\"empty-state\">\n              <i class=\"ti-clipboard  empty-icon\"></i>\n                <p>Plus de courrier en attente d'enregistrement</p>\n            </div>\n\n            <div class=\"pagination\" v-if=\"courriersEnAttente && courriersEnAttente.length > 0\">\n              <button @click=\"changePage(currentPage - 1)\" :disabled=\"currentPage === 1\">Précédent</button>\n              <span>Page {{ currentPage }} sur {{ totalPages }}</span>\n              <button @click=\"changePage(currentPage + 1)\" :disabled=\"currentPage === totalPages\">Suivant</button>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Formulaire de mise à jour en tant que modal -->\n    <div v-if=\"showForm\" class=\"modal\">\n      <div class=\"modal-content\">\n        <span class=\"close\" @click=\"hideUpdateForm\">&times;</span>\n        <h3 style=\"color: #FF5733;\">Rectification du Courrier</h3>\n        <form @submit.prevent=\"submitUpdate\">\n          <div v-if=\"errors\" class=\"alert alert-danger\">\n            <ul>\n              <li v-for=\"error in errors\" :key=\"error\">{{ error }}</li>\n            </ul>\n          </div>\n          \n          <div class=\"form-group\">\n            <label for=\"date_reception\">Date de reception</label>\n            <input type=\"date\" id=\"date_reception\" v-model=\"selectedCourrier.date_reception\" required>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"nom_courrier\">Nom</label>\n            <input type=\"text\" id=\"nom_courrier\" v-model=\"selectedCourrier.nom_courrier\" required>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"description\">Description</label>\n            <textarea id=\"description\" v-model=\"selectedCourrier.description\" rows=\"5\" required></textarea>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"expediteur\">Expediteur</label>\n            <input type=\"text\" id=\"expediteur\" v-model=\"selectedCourrier.expediteur\" required>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"dept_destinataire\">Departement</label>\n            <select id=\"dept_destinataire\" v-model=\"selectedCourrier.dept_destinataire\" required>\n              <option value=\"\" disabled selected>Select le department</option>\n              <option v-for=\"dept in departements\" :key=\"dept.id\" :value=\"dept\">{{ dept.nom_departement }}</option>\n            </select>\n          </div>\n          <button type=\"submit\" class=\"btn btn-submit\">Valider</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      courriersEnAttente: [],\n      table1: {\n        title: 'Tableau des courriers non enregistrés',\n        subTitle: 'Listes des courriers en attente de confirmation'\n      },\n      errors: null,\n      tableColumns: [\"Id\", \"Date de reception\", \"Nom\", \"Description\", \"Expediteur\", \"Departement\", \"Actions\"],\n      showForm: false,\n      selectedCourrier: {},\n      departements: [],\n\n      currentPage: 1,\n        itemsPerPage: 5,\n        totalItems: 0\n    };\n  },\n  mounted() {\n    this.getCourriersEnAttente();\n    this.getDepartements();\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.totalItems / this.itemsPerPage);\n    },\n    currentItems() {\n      if (!this.courriersEnAttente) return [];\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      return this.courriersEnAttente.slice(start, start + this.itemsPerPage);\n    }\n  },\n  methods: {\n    async getCourriersEnAttente() {\n      try {\n        const params = new URLSearchParams({\n          page: this.currentPage,\n          limit: this.itemsPerPage\n        });\n\n        const response = await axios.get(`http://localhost:8081/api/courriers_attente?${params}`);\n        \n        if (response.data) {\n          this.courriersEnAttente = response.data;\n          this.totalItems = response.data.length;\n          console.log(\"Courriers chargés :\", this.courriersEnAttente);\n        } else {\n          this.courriersEnAttente = [];\n          this.totalItems = 0;\n          console.log(\"Aucun courrier trouvé\");\n        }\n\n      } catch (error) {\n        console.error(\"Erreur lors du chargement des courriers :\", error);\n        this.courriersEnAttente = [];\n        this.totalItems = 0;\n        this.errors = [\"Erreur lors du chargement des courriers\"];\n      }\n    },\n    async getDepartements() {\n      try {\n        const response = await axios.get(\"http://localhost:8081/api/departements\");\n        this.departements = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async confirmCourrier(courrier) {\n      try {\n        this.error = null;\n        const response = await axios.put('http://localhost:8081/api/confirm_courrier', courrier);\n        this.getCourriersEnAttente();\n      } catch (error) {\n        if (error.response && error.response.data && error.response.data.errors) {\n          this.errors = error.response.data.errors;\n        } else {\n          this.errors = [\"Une erreur est survenue\"];\n        }\n      }\n    },\n    showUpdateForm(courrier) {\n      console.log(\"showUpdateForm called with:\", courrier);\n      this.selectedCourrier = { ...courrier };\n      this.showForm = true;\n      console.log(\"showForm set to true\");\n    },\n    hideUpdateForm() {\n      this.showForm = false;\n    },\n    async submitUpdate() {\n      if (!this.selectedCourrier.date_reception || !this.selectedCourrier.nom_courrier || !this.selectedCourrier.expediteur || !this.selectedCourrier.dept_destinataire) {\n          this.errors = [\"Veuillez remplir les champs nécessaires\"];\n          return;\n      }\n      try {\n        const courrier = {\n          id_courrier: this.selectedCourrier.id_courrier,\n          date_reception: this.selectedCourrier.date_reception,\n          nom_courrier: this.selectedCourrier.nom_courrier,\n          description: this.selectedCourrier.description,\n          expediteur: this.selectedCourrier.expediteur,\n          statut:this.selectedCourrier.statut,\n          dept_destinataire: this.selectedCourrier.dept_destinataire\n        };\n        this.errors = null;\n        console.log(\"Données du formulaire :\", courrier);\n        const response = await axios.put(`http://localhost:8081/api/update_courrier/${this.selectedCourrier.id_courrier}`, courrier, {\n        });\n        console.log(response.data);\n        this.hideUpdateForm();\n        this.getCourriersEnAttente();\n      } catch (error) {\n            if (error.response && error.response.data && error.response.data.message) {\n              this.errors = [error.response.data.message];\n            } else if (error.response && error.response.data && error.response.data.errors) {\n              this.errors = error.response.data.errors;\n            } else {\n              this.errors = [\"une erreur a survenue\"];\n            }\n      }\n    },\n    changePage(page) {\n      if (page < 1 || page > this.totalPages) return; // Vérifier les limites\n      this.currentPage = page;\n      this.getCourriersEnAttente();\n    }\n  },\n  watch: {\n    showForm(newVal) {\n      console.log(\"showForm changed to:\", newVal);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.empty-state {\n  text-align: center;\n  padding: 100px 80px;\n  color: #6c757d;\n}\n.empty-icon {\n  font-size: 100px;\n  margin-bottom: 40px;\n}\n.card {\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  box-shadow: 0 2px 5px rgba(0,  0, 0.1);\n  margin-bottom: 20px;\n  padding: 15px; /* Ajout de padding pour un meilleur espacement */\n}\n\n.card-header {\n  background-color: #343a40;\n  color: rgb(17, 17, 17);\n  padding: 15px;\n  border-bottom: 1px solid #343a40;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n}\n.card-header h3 {\n  margin: 0;\n  color: rgb(5, 5, 5); \n}\n\n.card-header p {\n  margin: 0;\n  font-size: 16px;\n  color: #4c4c4d;\n}\n\n.table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.table th, .table td {\n  border: 1px solid #ddd;\n  padding: 12px; \n  text-align: left;\n}\n\n.table th {\n  background-color: #f2f2f2;\n  font-weight: bold;\n}\n\n.table tbody tr:nth-child(even) {\n  background-color: #f9f9f9;\n}\n\n.table tbody tr:hover {\n  background-color: #f1f1f1;\n}\n\ntd {\n  word-wrap: break-word;\n  max-width: 200px;\n}\n\ntd.description {\n  word-wrap: break-word;\n  max-width: auto;\n}\n\n.btn-group {\n  display: flex;\n  gap: 10px;\n}\n\n.btn {\n  padding: 10px 15px;\n  font-size: 14px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.btn-confirm {\n  background-color: #28a745;\n  color: white;\n}\n\n.btn-update {\n  background-color: #007BFF;\n  color: white;\n}\n\n.btn-confirm:hover {\n  background-color: #218838;\n}\n\n.btn-update:hover {\n  background-color: #023c7a;\n}\n\n.modal {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: rgba(0, 0, 0, 0.4);\n}\n\n.modal-content {\n  background-color: rgba(245, 243, 243, 0.9);\n  padding: 20px;\n  border: 1px solid #888;\n  width: 80%;\n  max-width: 600px;\n  border-radius: 5px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  position: relative;\n  height:400px;\n  overflow-y: auto;\n}\n\n.close {\n  color: #fff;\n  background-color: #dc3545;\n  border-radius: 50%;\n  padding: 5px 10px;\n  position: absolute;\n  top: 20px;\n  right: 10px;\n  font-size: 20px;\n  font-weight: bold;\n  cursor: pointer;\n}\n\n.close:hover,\n.close:focus {\n  background-color: #c82333;\n  text-decoration: none;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n}\n\n.form-group input, .form-group select, .form-group textarea {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n}\n\n.btn-submit {\n  background-color: #28a745;\n  color: white;\n}\n\n.btn-submit:hover {\n  background-color: #218838;\n}\n/* Styles pour la pagination */\n.pagination {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n.pagination button {\n  margin: 0 5px;\n  padding: 5px 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #007BFF;\n  color: white;\n  cursor: pointer;\n}\n.pagination button:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\n.pagination span {\n  align-self: center;\n  margin: 0 10px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}