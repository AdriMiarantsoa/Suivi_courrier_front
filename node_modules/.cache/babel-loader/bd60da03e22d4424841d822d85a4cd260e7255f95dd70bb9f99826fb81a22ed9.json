{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      courriersDepartement: [],\n      departementName: '',\n      departementId: '',\n      recu_par: null,\n      showForm: false,\n      id_courrier: {},\n      showTransferForm: false,\n      selectedDepartement: null,\n      departements: []\n    };\n  },\n  mounted() {\n    this.getCourriersDepartement();\n  },\n  methods: {\n    async getCourriersDepartement() {\n      try {\n        const userresponse = await axios.get('http://localhost:8081/api/utilisateur', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        this.recu_par = userresponse.data;\n        if (!this.recu_par) {\n          console.error(\"User data is missing\");\n          return;\n        }\n        const responsedept = await axios.get(`http://localhost:8081/api/departement/utilisateur/${this.recu_par.id_utilisateur}`);\n        this.departementId = responsedept.data;\n        console.log('id_departement:', this.departementId);\n        const deptresponse = await axios.get(`http://localhost:8081/api/departement/${this.departementId}`);\n        this.departementName = deptresponse.data;\n        console.log('nom_departement:', this.departementName);\n        const response = await axios.get(`http://localhost:8081/api/departement/${this.departementId}/courriers`);\n        console.log(response.data);\n        this.courriersDepartement = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    ShowCourrier(courrier) {\n      console.log(\"showUpdateForm called with:\", courrier);\n      this.id_courrier = {\n        ...courrier\n      };\n      this.showForm = true;\n      console.log(\"showForm set to true\");\n    },\n    hideDetails() {\n      this.showForm = false;\n    },\n    async submitForm() {\n      console.log(this.id_courrier);\n      console.log(this.recu_par);\n      try {\n        const response = await axios.get('http://localhost:8081/api/utilisateur', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        this.recu_par = response.data;\n        if (!this.recu_par) {\n          console.error(\"User data is missing\");\n          return;\n        }\n        const receptionData = {\n          id_courrier: this.id_courrier,\n          recu_par: this.recu_par,\n          date_traitement: new Date()\n        };\n        console.log(\"Sending Reception Data:\", receptionData);\n        await axios.post('http://localhost:8081/api/insert_reception', receptionData, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        this.hideDetails();\n        this.getCourriersDepartement();\n      } catch (error) {\n        console.error(\"Error during form submission:\", error.response ? error.response.data : error.message);\n      }\n    },\n    //transfer de courrier\n    async ShowTransferForm(courrier) {\n      console.log(\"ShowTransferForm called with:\", courrier);\n      this.id_courrier = {\n        ...courrier\n      };\n      this.showTransferForm = true;\n      console.log(\"showTransferForm set to true\");\n      try {\n        const response = await axios.get('http://localhost:8081/api/departements');\n        this.departements = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    hideTransferForm() {\n      this.showTransferForm = false;\n    },\n    async submitTransferForm() {\n      console.log(this.id_courrier);\n      console.log(this.selectedDepartement);\n      try {\n        const transferData = {\n          id_courrier: this.id_courrier.id_courrier,\n          dept_destinataire: this.selectedDepartement\n        };\n        console.log(\"Sending Transfer Data:\", transferData);\n        await axios.put(`http://localhost:8081/api/transfer_courrier?id_courrier=${transferData.id_courrier}&dept_destinataire=${transferData.dept_destinataire.id_departement}`, null, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        this.hideTransferForm();\n        this.getCourriersDepartement();\n      } catch (error) {\n        console.error(\"Error during form submission:\", error.response ? error.response.data : error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","courriersDepartement","departementName","departementId","recu_par","showForm","id_courrier","showTransferForm","selectedDepartement","departements","mounted","getCourriersDepartement","methods","userresponse","get","headers","Authorization","localStorage","getItem","console","error","responsedept","id_utilisateur","log","deptresponse","response","ShowCourrier","courrier","hideDetails","submitForm","receptionData","date_traitement","Date","post","message","ShowTransferForm","hideTransferForm","submitTransferForm","transferData","dept_destinataire","put","id_departement"],"sources":["src/pages/CourriersDepartement.vue"],"sourcesContent":["<template>\n    <div>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h3 style=\"color:#003366;\">{{ this.departementName }}</h3>\n            </div>  \n            <div class=\"card-body table-responsive\">\n              <table class=\"table\">\n                <thead>\n                  <tr>\n                    <th>Status</th>\n                    <th>Name</th>\n                    <th>Expeditor</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"courrier in courriersDepartement\" :key=\"courrier.id_courrier\">\n                    <td>{{ courrier.statut === 'enregistre' ? 'awaiting processing' : courrier.statut }}</td>\n                    <td>{{ courrier.nom_courrier }}</td>\n                    <td>{{ courrier.expediteur }}</td>\n                    <td>\n                    <div class=\"btn-group\">\n                          <button class=\"btn btn-show\" @click=\"ShowCourrier(courrier)\">see details</button>\n                          <button v-if=\"departementName === 'direction'\" class=\"btn btn-transfer\" @click=\"ShowTransferForm(courrier)\">Transfer</button>    \n                    </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Formulaire de mise Ã  jour en tant que modal -->\n      <div v-if=\"showForm\" class=\"modal\">\n        <div class=\"modal-content\">\n          <span class=\"close\" @click=\"hideDetails\">&times;</span>\n          <h2>Document Details</h2>\n          <h3>Courier Information</h3>\n          <form @submit.prevent>\n            <section>\n              <div class=\"form-group\">\n                <label for=\"id\">ID</label>\n                <input type=\"text\" v-model=\"id_courrier.id_courrier\" readonly>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"nom_courrier\">Courier Name</label>\n                <input type=\"text\" v-model=\"id_courrier.nom_courrier\" readonly>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"expediteur\">Expeditor</label>\n                <input type=\"text\" v-model=\"id_courrier.expediteur\" readonly>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"description\">Description</label>\n                <textarea id=\"description\" v-model=\"id_courrier.description\" rows=\"5\" readonly/>\n              </div>    \n            </section>\n            <div class=\"text-center\">\n              <p-button style=\"background-color:  rgb(1, 31, 65);\" round @click.native.prevent=\"submitForm\">\n                Received\n              </p-button>\n            </div>\n          </form>\n        </div>\n      </div>\n\n      <!-- Formulaire de transfert en tant que modal -->\n      <div v-if=\"showTransferForm\" class=\"modal\">\n        <div class=\"modal-content\">\n          <span class=\"close\" @click=\"hideTransferForm\">&times;</span>\n          <h2>Transfer document</h2>\n          <form @submit.prevent>\n            <section>\n              <div class=\"form-group\">\n                <label for=\"id\">ID</label>\n                <input type=\"text\" v-model=\"id_courrier.id_courrier\" readonly>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"nom_courrier\">Name</label>\n                <input type=\"text\" v-model=\"id_courrier.nom_courrier\" readonly>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"departement\">Departement</label>\n                <select v-model=\"selectedDepartement\">\n                  <option v-for=\"departement in departements\" :key=\"departement.id_departement\" :value=\"departement\">{{ departement.nom_departement }}</option>\n                </select>\n              </div>\n            </section>\n            <div class=\"text-center\">\n              <p-button style=\"background-color:  rgb(231, 21, 21);\" round @click.native.prevent=\"submitTransferForm\">\n                Submit\n              </p-button>\n            </div>\n\n          </form>\n        </div>\n      </div>\n      \n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        courriersDepartement: [],\n        departementName: '',\n        departementId: '',\n        recu_par:null,\n        showForm: false,\n        id_courrier: {},\n        showTransferForm: false,\n\n        selectedDepartement: null,\n        departements: []\n      \n      };\n    },\n    mounted() {\n      this.getCourriersDepartement();\n    },\n    methods: {\n        async getCourriersDepartement() {\n            try {\n              const userresponse = await axios.get('http://localhost:8081/api/utilisateur', {\n                headers: {\n                  Authorization: `Bearer ${localStorage.getItem('authToken')}`, \n                },\n              });\n              this.recu_par = userresponse.data; \n              if (!this.recu_par) {\n                console.error(\"User data is missing\");\n                return;\n              }\n              const responsedept = await axios.get(`http://localhost:8081/api/departement/utilisateur/${this.recu_par.id_utilisateur}`);\n                this.departementId = responsedept.data;\n                console.log('id_departement:', this.departementId);\n\n              const deptresponse = await axios.get(`http://localhost:8081/api/departement/${this.departementId}`);\n              this.departementName = deptresponse.data;\n              console.log('nom_departement:', this.departementName)\n            \n              const response = await axios.get(`http://localhost:8081/api/departement/${this.departementId}/courriers`);\n              console.log(response.data);\n              this.courriersDepartement = response.data;\n            \n            } catch (error) {\n            console.error(error);\n            }\n        },\n        ShowCourrier(courrier) {\n            console.log(\"showUpdateForm called with:\", courrier);\n            this.id_courrier = { ...courrier };\n            this.showForm = true;\n            console.log(\"showForm set to true\");\n        },\n        hideDetails() {\n        this.showForm = false;\n        },\n      async submitForm() {\n        console.log(this.id_courrier);\n        console.log(this.recu_par);\n\n        try {\n          const response = await axios.get('http://localhost:8081/api/utilisateur', {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('authToken')}`, \n            },\n          });\n          this.recu_par = response.data; \n          if (!this.recu_par) {\n            console.error(\"User data is missing\");\n            return;\n          }\n\n          const receptionData = {\n            id_courrier : this.id_courrier , \n            recu_par: this.recu_par, \n            date_traitement: new Date(), \n          };\n\n          console.log(\"Sending Reception Data:\", receptionData);\n\n          await axios.post('http://localhost:8081/api/insert_reception', receptionData, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('authToken')}`, \n            },\n          });\n\n          this.hideDetails();\n          this.getCourriersDepartement();\n        } catch (error) {\n          console.error(\"Error during form submission:\", error.response ? error.response.data : error.message);\n        }\n      },\n      //transfer de courrier\n      async ShowTransferForm(courrier) {\n          console.log(\"ShowTransferForm called with:\", courrier);\n          this.id_courrier = { ...courrier };\n          this.showTransferForm = true;\n          console.log(\"showTransferForm set to true\");\n          try {\n            const response = await axios.get('http://localhost:8081/api/departements');\n            this.departements = response.data;\n          } catch (error) {\n            console.error(error);\n          }\n      },\n        hideTransferForm() {\n          this.showTransferForm = false;\n        },\n        async submitTransferForm() {\n          console.log(this.id_courrier);\n          console.log(this.selectedDepartement);\n          try {\n            const transferData = {\n              id_courrier: this.id_courrier.id_courrier,\n              dept_destinataire: this.selectedDepartement,\n            };\n            console.log(\"Sending Transfer Data:\", transferData);\n            \n            await axios.put(`http://localhost:8081/api/transfer_courrier?id_courrier=${transferData.id_courrier}&dept_destinataire=${transferData.dept_destinataire.id_departement}`, null, {\n              headers: {\n                Authorization: `Bearer ${localStorage.getItem('authToken')}`, \n              },\n            });\n\n            this.hideTransferForm();\n            this.getCourriersDepartement();\n          } catch (error) {\n            console.error(\"Error during form submission:\", error.response ? error.response.data : error.message);\n          }\n        },\n\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .card {\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n    margin-bottom: 20px;\n  }\n  .card-header {\n    background-color: #343a40;\n    color: white;\n    padding: 15px;\n    border-bottom: 1px solid #343a40;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n  }\n  .card-header h3 {\n    margin: 0;\n    color:rgb(12, 12, 12);\n    font-size: medium;\n  }\n  .card-body {\n    padding: 20px;\n  }\n  .table {\n    width: 100%;\n    border-collapse: collapse;\n  }\n  .table th, .table td {\n    border: 1px solid #ddd;\n    padding: 8px;\n    text-align: left;\n  }\n  .table th {\n    background-color: #f2f2f2;\n    font-weight: bold;\n  }\n  .table tbody tr:nth-child(even) {\n    background-color: #f9f9f9;\n  }\n  .table tbody tr:hover {\n    background-color: #f1f1f1;\n  }\n  .btn {\n    padding: 10px 15px;\n    font-size: 14px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n    \n  }\n  .btn-show {\n    display: block;\n    width: 100%;\n    background-color:rgb(1, 31, 65);\n    color: white;\n  }\n  .btn-transfer {\n    display: block;\n    width: 100%;\n    background-color:rgb(87, 3, 8);\n    color: white;\n  }\n  .btn-show:hover {\n    background-color:  #023c7a;\n    transition: background-color 1s ease;\n  }\n  .modal {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgba(0, 0, 0, 0.4);\n  }\n  .close {\n    color: #fff;\n    background-color: #dc3545;\n    border-radius: 50%;\n    padding: 5px 10px;\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    font-size: 20px;\n    font-weight: bold;\n    cursor: pointer;\n  }\n  .close:hover,\n  .close:focus {\n    background-color: #c82333;\n    text-decoration: none;\n  }\n  .modal-content {\n    background-color: rgba(245, 243, 243, 0.9);\n    padding: 20px;\n    border: 1px solid #888;\n    width: 80%;\n    max-width: 600px;\n    border-radius: 5px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n    position: relative;\n    overflow-y: auto;\n    max-height: 80vh;\n  }\n  \n  .modal-content h2 {\n    font-size: 24px;\n    font-weight: bold;\n    margin-bottom: 10px;\n    color: #FF5733;\n  }\n  \n  .modal-content h3 {\n    font-size: 18px;\n    font-weight: bold;\n    margin-bottom: 10px;\n  }\n  \n  .form-group {\n    margin-bottom: 20px;\n  }\n  \n  .form-group label {\n    font-size: 16px;\n    font-weight: bold;\n    margin-bottom: 5px;\n  }\n  \n  .form-group input, .form-group textarea {\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n  }\n  \n  .btn-submit {\n    background-color:rgb(1, 31, 65);\n    color: #fff;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n  \n  .btn-submit:hover {\n    background-color:#023c7a;\n  }\n  \n  .btn-group {\n    display: flex;\n    gap: 10px;\n  }\n  \n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}