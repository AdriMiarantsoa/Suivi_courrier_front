{"ast":null,"code":"import _objectSpread from \"/home/adrienna/Documents/Stage/Suivi_courrier_front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/home/adrienna/Documents/Stage/Suivi_courrier_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/adrienna/Documents/Stage/Suivi_courrier_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.ends-with.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\nimport ImageModal from './ImageModal.vue';\nexport default {\n  components: {\n    ImageModal: ImageModal\n  },\n  data: function data() {\n    return {\n      isModalOpen: false,\n      currentContentUrl: '',\n      courriersEnAttente: [],\n      table1: {\n        title: 'Tableau des courriers non enregistrés',\n        subTitle: 'Listes des courriers en attente de confirmation'\n      },\n      errors: null,\n      error_upload: null,\n      tableColumns: [\"Id\", \"Date de reception\", \"Nom\", \"Description\", \"Expediteur\", \"Departement\", \"Actions\"],\n      showForm: false,\n      selectedCourrier: {},\n      departements: [],\n      fichiers: [],\n      currentPage: 1,\n      itemsPerPage: 5,\n      totalItems: 0\n    };\n  },\n  mounted: function mounted() {\n    this.getCourriersEnAttente();\n    this.getDepartements();\n  },\n  computed: {\n    totalPages: function totalPages() {\n      return Math.ceil(this.totalItems / this.itemsPerPage);\n    },\n    currentItems: function currentItems() {\n      if (!this.courriersEnAttente) return [];\n      var start = (this.currentPage - 1) * this.itemsPerPage;\n      return this.courriersEnAttente.slice(start, start + this.itemsPerPage);\n    }\n  },\n  methods: {\n    getFileUrl: function getFileUrl(chemin) {\n      console.log('chemin', chemin);\n      return \"http://localhost:8081/uploads/\".concat(chemin.split('/').pop());\n    },\n    openModal: function openModal(contentUrl) {\n      this.currentContentUrl = contentUrl;\n      this.isModalOpen = true;\n    },\n    closeModal: function closeModal() {\n      this.isModalOpen = false;\n    },\n    isImage: function isImage(fichier) {\n      return fichier.chemin.endsWith('.png') || fichier.chemin.endsWith('.jpg') || fichier.chemin.endsWith('.jpeg') || fichier.chemin.endsWith('.gif');\n    },\n    isPdf: function isPdf(fichier) {\n      return fichier.chemin.endsWith('.pdf');\n    },\n    getCourriersEnAttente: function getCourriersEnAttente() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var params, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              params = new URLSearchParams({\n                page: _this.currentPage,\n                limit: _this.itemsPerPage\n              });\n              _context.next = 4;\n              return axios.get(\"http://localhost:8081/api/courriers_attente?\".concat(params));\n            case 4:\n              response = _context.sent;\n              if (response.data) {\n                _this.courriersEnAttente = response.data;\n                _this.totalItems = response.data.length;\n                console.log(\"Courriers chargés :\", _this.courriersEnAttente);\n              } else {\n                _this.courriersEnAttente = [];\n                _this.totalItems = 0;\n                console.log(\"Aucun courrier trouvé\");\n              }\n              _context.next = 14;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(\"Erreur lors du chargement des courriers :\", _context.t0);\n              _this.courriersEnAttente = [];\n              _this.totalItems = 0;\n              _this.errors = [\"Erreur lors du chargement des courriers\"];\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 8]]);\n      }))();\n    },\n    getDepartements: function getDepartements() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.get(\"http://localhost:8081/api/departements\");\n            case 3:\n              response = _context2.sent;\n              _this2.departements = response.data;\n              _context2.next = 10;\n              break;\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error(_context2.t0);\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 7]]);\n      }))();\n    },\n    confirmCourrier: function confirmCourrier(courrier) {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _this3.error = null;\n              _context3.next = 4;\n              return axios.put('http://localhost:8081/api/confirm_courrier', courrier);\n            case 4:\n              response = _context3.sent;\n              _this3.getCourriersEnAttente();\n              _context3.next = 11;\n              break;\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              if (_context3.t0.response && _context3.t0.response.data && _context3.t0.response.data.errors) {\n                _this3.errors = _context3.t0.response.data.errors;\n              } else {\n                _this3.errors = [\"Une erreur est survenue\"];\n              }\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 8]]);\n      }))();\n    },\n    showUpdateForm: function showUpdateForm(courrier) {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              console.log(\"showUpdateForm called with:\", courrier);\n              _this4.selectedCourrier = _objectSpread({}, courrier);\n              _this4.showForm = true;\n              console.log(\"showForm set to true\");\n\n              // Récupérer les fichiers associés à ce courrier\n              _context4.prev = 4;\n              _context4.next = 7;\n              return axios.get(\"http://localhost:8081/api/courriers/\".concat(courrier.id_courrier, \"/fichiers\"));\n            case 7:\n              response = _context4.sent;\n              _this4.fichiers = response.data;\n              console.log(\"Fichiers associés récupérés :\", _this4.fichiers);\n              _context4.next = 17;\n              break;\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](4);\n              console.error(\"Erreur lors de la récupération des fichiers :\", _context4.t0);\n              _this4.error_upload = [\"Erreur lors de la récupération des fichiers\"];\n              _this4.selectedCourrier.fichiers = [];\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[4, 12]]);\n      }))();\n    },\n    hideUpdateForm: function hideUpdateForm() {\n      this.showForm = false;\n    },\n    submitUpdate: function submitUpdate() {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var courrier, response;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(!_this5.selectedCourrier.date_reception || !_this5.selectedCourrier.nom_courrier || !_this5.selectedCourrier.expediteur || !_this5.selectedCourrier.dept_destinataire)) {\n                _context5.next = 3;\n                break;\n              }\n              _this5.errors = [\"Veuillez remplir les champs nécessaires\"];\n              return _context5.abrupt(\"return\");\n            case 3:\n              _context5.prev = 3;\n              courrier = {\n                id_courrier: _this5.selectedCourrier.id_courrier,\n                date_reception: _this5.selectedCourrier.date_reception,\n                nom_courrier: _this5.selectedCourrier.nom_courrier,\n                description: _this5.selectedCourrier.description,\n                expediteur: _this5.selectedCourrier.expediteur,\n                statut: _this5.selectedCourrier.statut,\n                dept_destinataire: _this5.selectedCourrier.dept_destinataire\n              };\n              _this5.errors = null;\n              console.log(\"Données du formulaire :\", courrier);\n              _context5.next = 9;\n              return axios.put(\"http://localhost:8081/api/update_courrier/\".concat(_this5.selectedCourrier.id_courrier), courrier, {});\n            case 9:\n              response = _context5.sent;\n              console.log(response.data);\n              _this5.hideUpdateForm();\n              _this5.getCourriersEnAttente();\n              _context5.next = 18;\n              break;\n            case 15:\n              _context5.prev = 15;\n              _context5.t0 = _context5[\"catch\"](3);\n              if (_context5.t0.response && _context5.t0.response.data && _context5.t0.response.data.message) {\n                _this5.errors = [_context5.t0.response.data.message];\n              } else if (_context5.t0.response && _context5.t0.response.data && _context5.t0.response.data.errors) {\n                _this5.errors = _context5.t0.response.data.errors;\n              } else {\n                _this5.errors = [\"une erreur a survenue\"];\n              }\n            case 18:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[3, 15]]);\n      }))();\n    },\n    changePage: function changePage(page) {\n      if (page < 1 || page > this.totalPages) return; // Vérifier les limites\n      this.currentPage = page;\n      this.getCourriersEnAttente();\n    }\n  },\n  watch: {\n    showForm: function showForm(newVal) {\n      console.log(\"showForm changed to:\", newVal);\n    }\n  }\n};","map":{"version":3,"names":["axios","ImageModal","components","data","isModalOpen","currentContentUrl","courriersEnAttente","table1","title","subTitle","errors","error_upload","tableColumns","showForm","selectedCourrier","departements","fichiers","currentPage","itemsPerPage","totalItems","mounted","getCourriersEnAttente","getDepartements","computed","totalPages","Math","ceil","currentItems","start","slice","methods","getFileUrl","chemin","console","log","concat","split","pop","openModal","contentUrl","closeModal","isImage","fichier","endsWith","isPdf","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","response","wrap","_callee$","_context","prev","next","URLSearchParams","page","limit","get","sent","length","t0","error","stop","_this2","_callee2","_callee2$","_context2","confirmCourrier","courrier","_this3","_callee3","_callee3$","_context3","put","showUpdateForm","_this4","_callee4","_callee4$","_context4","_objectSpread","id_courrier","hideUpdateForm","submitUpdate","_this5","_callee5","_callee5$","_context5","date_reception","nom_courrier","expediteur","dept_destinataire","abrupt","description","statut","message","changePage","watch","newVal"],"sources":["src/pages/ValidationCourrier.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"card\">\n          <div v-if=\"courriersEnAttente.length > 0\" class=\"card-header\">\n            <h3>{{ table1.title }}</h3>\n            <p>{{ table1.subTitle }}</p>\n          </div>\n\n          <div v-if=\"errors\" class=\"alert alert-danger\">\n            <ul>\n              <li v-for=\"error in errors\" :key=\"error\">{{ error }}</li>\n            </ul>\n          </div>\n\n          <div class=\"card-body table-responsive\">\n            <table class=\"table\" v-if=\"courriersEnAttente.length > 0\">\n              <thead>\n                <tr>\n                  <th v-for=\"column in tableColumns\" :key=\"column\">{{ column }}</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"courrier in currentItems\" :key=\"courrier.id_courrier\">\n                  <td>{{ courrier.id_courrier }}</td>\n                  <td>{{ courrier.date_reception }}</td>\n                  <td>{{ courrier.nom_courrier }}</td>\n                  <td class=\"description\">{{ courrier.description }}</td>\n                  <td>{{ courrier.expediteur }}</td>\n                  <td>\n                    <span v-if=\"courrier.dept_destinataire && courrier.dept_destinataire.nom_departement\">\n                      {{ courrier.dept_destinataire.nom_departement }}\n                    </span>\n                  </td>\n                  <td>\n                    <div class=\"btn-group\">\n                      <button class=\"btn btn-confirm\" @click=\"confirmCourrier(courrier)\"><i class=\"ti-check\"></i></button>\n                      <button class=\"btn btn-update\" @click=\"showUpdateForm(courrier)\"><i class=\"ti-pencil\"></i></button>\n                    </div>\n                  </td>\n                </tr>\n                </tbody>\n            </table>\n\n            <div v-else class=\"empty-state\">\n              <i class=\"ti-clipboard  empty-icon\"></i>\n                <p>Plus de courrier en attente d'enregistrement</p>\n            </div>\n\n            <div class=\"pagination\" v-if=\"courriersEnAttente && courriersEnAttente.length > 0\">\n              <button @click=\"changePage(currentPage - 1)\" :disabled=\"currentPage === 1\">Précédent</button>\n              <span>Page {{ currentPage }} sur {{ totalPages }}</span>\n              <button @click=\"changePage(currentPage + 1)\" :disabled=\"currentPage === totalPages\">Suivant</button>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Formulaire de mise à jour en tant que modal -->\n    <div v-if=\"showForm\" class=\"modal\">\n      <div class=\"modal-content\">\n        <span class=\"close\" @click=\"hideUpdateForm\">&times;</span>\n        <h3 style=\"color: #FF5733;\">Rectification du Courrier</h3>\n        <form @submit.prevent=\"submitUpdate\">\n          <div v-if=\"error_upload\" class=\"alert alert-danger\">\n            <ul>\n              <li v-for=\"error in error_upload\" :key=\"error\">{{ error }}</li>\n            </ul>\n          </div>\n          \n          <div class=\"form-group\">\n            <label for=\"date_reception\">Date de reception</label>\n            <input type=\"date\" id=\"date_reception\" v-model=\"selectedCourrier.date_reception\" required>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"nom_courrier\">Nom</label>\n            <input type=\"text\" id=\"nom_courrier\" v-model=\"selectedCourrier.nom_courrier\" required>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"description\">Description</label>\n            <textarea id=\"description\" v-model=\"selectedCourrier.description\" rows=\"5\" required></textarea>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"expediteur\">Expediteur</label>\n            <input type=\"text\" id=\"expediteur\" v-model=\"selectedCourrier.expediteur\" required>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"dept_destinataire\">Departement</label>\n            <select id=\"dept_destinataire\" v-model=\"selectedCourrier.dept_destinataire\" required>\n              <option value=\"\" disabled selected>Select le department</option>\n              <option v-for=\"dept in departements\" :key=\"dept.id\" :value=\"dept\">{{ dept.nom_departement }}</option>\n            </select>\n          </div>\n          <div class=\"form-group\" v-if=\"fichiers && fichiers.length > 0\">\n            <label for=\"fichiers\">Fichiers associés</label>\n            <div v-if=\"fichiers && fichiers.length > 0\">\n              <div v-for=\"fichier in fichiers\" :key=\"fichier.id\">\n                <div v-if=\"isImage(fichier)\">\n                  <p>{{ fichier.chemin.split('/').pop() }}</p>\n                  <img \n                    :src=\"getFileUrl(fichier.chemin)\" \n                    alt=\"Image\" \n                    style=\"max-width: 200px; max-height: 200px;\" \n                    @click=\"openModal(getFileUrl(fichier.chemin))\"\n                  />\n                </div>\n                <div v-else-if=\"isPdf(fichier)\">\n                  <p>{{ fichier.chemin.split('/').pop() }}</p>\n                  <a @click.prevent=\"openModal(getFileUrl(fichier.chemin))\">Voir le PDF</a>\n                </div>\n                <div v-else>\n                  <p>{{ fichier.chemin.split('/').pop() }}</p> <!-- Affiche le nom du fichier -->\n                  <a :href=\"getFileUrl(fichier.chemin)\" target=\"_blank\">Télécharger</a>\n                </div>\n              </div>\n            </div>\n            <div v-else>\n              <p>Aucun fichier associé.</p>\n            </div>\n          </div>\n          \n          <button type=\"submit\" class=\"btn btn-submit\">Valider</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport ImageModal from './ImageModal.vue';\n\nexport default {\n  components: {\n    ImageModal,\n  },\n  data() {\n    return {\n      isModalOpen: false,\n      currentContentUrl: '',\n\n      courriersEnAttente: [],\n      table1: {\n        title: 'Tableau des courriers non enregistrés',\n        subTitle: 'Listes des courriers en attente de confirmation'\n      },\n      errors: null,\n      error_upload: null,\n      tableColumns: [\"Id\", \"Date de reception\", \"Nom\", \"Description\", \"Expediteur\", \"Departement\", \"Actions\"],\n      showForm: false,\n      selectedCourrier: {},\n      departements: [],\n      fichiers: [],\n\n      currentPage: 1,\n        itemsPerPage: 5,\n        totalItems: 0\n    };\n  },\n  mounted() {\n    this.getCourriersEnAttente();\n    this.getDepartements();\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.totalItems / this.itemsPerPage);\n    },\n    currentItems() {\n      if (!this.courriersEnAttente) return [];\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      return this.courriersEnAttente.slice(start, start + this.itemsPerPage);\n    }\n  },\n  methods: {\n    getFileUrl(chemin) {\n      console.log('chemin',chemin);\n      return `http://localhost:8081/uploads/${chemin.split('/').pop()}`;\n    }\n    ,openModal(contentUrl) {\n      this.currentContentUrl = contentUrl;\n      this.isModalOpen = true;\n    },\n    closeModal() {\n      this.isModalOpen = false;\n    },\n    isImage(fichier) {\n      return fichier.chemin.endsWith('.png') || \n             fichier.chemin.endsWith('.jpg') || \n             fichier.chemin.endsWith('.jpeg') || \n             fichier.chemin.endsWith('.gif');\n    },\n    isPdf(fichier) {\n      return fichier.chemin.endsWith('.pdf');\n    },\n    async getCourriersEnAttente() {\n      try {\n        const params = new URLSearchParams({\n          page: this.currentPage,\n          limit: this.itemsPerPage\n        });\n\n        const response = await axios.get(`http://localhost:8081/api/courriers_attente?${params}`);\n        \n        if (response.data) {\n          this.courriersEnAttente = response.data;\n          this.totalItems = response.data.length;\n          console.log(\"Courriers chargés :\", this.courriersEnAttente);\n        } else {\n          this.courriersEnAttente = [];\n          this.totalItems = 0;\n          console.log(\"Aucun courrier trouvé\");\n        }\n\n      } catch (error) {\n        console.error(\"Erreur lors du chargement des courriers :\", error);\n        this.courriersEnAttente = [];\n        this.totalItems = 0;\n        this.errors = [\"Erreur lors du chargement des courriers\"];\n      }\n    },\n    async getDepartements() {\n      try {\n        const response = await axios.get(\"http://localhost:8081/api/departements\");\n        this.departements = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async confirmCourrier(courrier) {\n      try {\n        this.error = null;\n        const response = await axios.put('http://localhost:8081/api/confirm_courrier', courrier);\n        this.getCourriersEnAttente();\n      } catch (error) {\n        if (error.response && error.response.data && error.response.data.errors) {\n          this.errors = error.response.data.errors;\n        } else {\n          this.errors = [\"Une erreur est survenue\"];\n        }\n      }\n    },\n    async showUpdateForm(courrier) {\n      console.log(\"showUpdateForm called with:\", courrier);\n      this.selectedCourrier = { ...courrier };\n      this.showForm = true;\n      console.log(\"showForm set to true\");\n\n      // Récupérer les fichiers associés à ce courrier\n      try {\n        const response = await axios.get(`http://localhost:8081/api/courriers/${courrier.id_courrier}/fichiers`);\n        this.fichiers = response.data; \n\n        console.log(\"Fichiers associés récupérés :\", this.fichiers);\n\n        } catch (error) {\n        console.error(\"Erreur lors de la récupération des fichiers :\", error);\n        this.error_upload = [\"Erreur lors de la récupération des fichiers\"];\n        this.selectedCourrier.fichiers = [];\n      }\n    },\n    hideUpdateForm() {\n      this.showForm = false;\n    },\n    async submitUpdate() {\n      if (!this.selectedCourrier.date_reception || !this.selectedCourrier.nom_courrier || !this.selectedCourrier.expediteur || !this.selectedCourrier.dept_destinataire) {\n          this.errors = [\"Veuillez remplir les champs nécessaires\"];\n          return;\n      }\n      try {\n        const courrier = {\n          id_courrier: this.selectedCourrier.id_courrier,\n          date_reception: this.selectedCourrier.date_reception,\n          nom_courrier: this.selectedCourrier.nom_courrier,\n          description: this.selectedCourrier.description,\n          expediteur: this.selectedCourrier.expediteur,\n          statut:this.selectedCourrier.statut,\n          dept_destinataire: this.selectedCourrier.dept_destinataire\n        };\n        this.errors = null;\n        console.log(\"Données du formulaire :\", courrier);\n        const response = await axios.put(`http://localhost:8081/api/update_courrier/${this.selectedCourrier.id_courrier}`, courrier, {\n        });\n        console.log(response.data);\n        this.hideUpdateForm();\n        this.getCourriersEnAttente();\n      } catch (error) {\n            if (error.response && error.response.data && error.response.data.message) {\n              this.errors = [error.response.data.message];\n            } else if (error.response && error.response.data && error.response.data.errors) {\n              this.errors = error.response.data.errors;\n            } else {\n              this.errors = [\"une erreur a survenue\"];\n            }\n      }\n    },\n    changePage(page) {\n      if (page < 1 || page > this.totalPages) return; // Vérifier les limites\n      this.currentPage = page;\n      this.getCourriersEnAttente();\n    }\n  },\n  watch: {\n    showForm(newVal) {\n      console.log(\"showForm changed to:\", newVal);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.empty-state {\n  text-align: center;\n  padding: 100px 80px;\n  color: #6c757d;\n}\n.empty-icon {\n  font-size: 100px;\n  margin-bottom: 40px;\n}\n.card {\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  box-shadow: 0 2px 5px rgba(0,  0, 0.1);\n  margin-bottom: 20px;\n  padding: 15px; /* Ajout de padding pour un meilleur espacement */\n}\n\n.card-header {\n  background-color: #343a40;\n  color: rgb(17, 17, 17);\n  padding: 15px;\n  border-bottom: 1px solid #343a40;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n}\n.card-header h3 {\n  margin: 0;\n  color: rgb(5, 5, 5); \n}\n\n.card-header p {\n  margin: 0;\n  font-size: 16px;\n  color: #4c4c4d;\n}\n\n.table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.table th, .table td {\n  border: 1px solid #ddd;\n  padding: 12px; \n  text-align: left;\n}\n\n.table th {\n  background-color: #f2f2f2;\n  font-weight: bold;\n}\n\n.table tbody tr:nth-child(even) {\n  background-color: #f9f9f9;\n}\n\n.table tbody tr:hover {\n  background-color: #f1f1f1;\n}\n\ntd {\n  word-wrap: break-word;\n  max-width: 200px;\n}\n\ntd.description {\n  word-wrap: break-word;\n  max-width: auto;\n}\n\n.btn-group {\n  display: flex;\n  gap: 10px;\n}\n\n.btn {\n  padding: 10px 15px;\n  font-size: 14px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.btn-confirm {\n  background-color: #28a745;\n  color: white;\n}\n\n.btn-update {\n  background-color: #007BFF;\n  color: white;\n}\n\n.btn-confirm:hover {\n  background-color: #218838;\n}\n\n.btn-update:hover {\n  background-color: #023c7a;\n}\n\n.modal {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: rgba(0, 0, 0, 0.4);\n}\n\n.modal-content {\n  background-color: rgba(245, 243, 243, 0.9);\n  padding: 20px;\n  border: 1px solid #888;\n  width: 80%;\n  max-width: 600px;\n  border-radius: 5px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  position: relative;\n  height:400px;\n  overflow-y: auto;\n}\n\n.close {\n  color: #fff;\n  background-color: #dc3545;\n  border-radius: 50%;\n  padding: 5px 10px;\n  position: absolute;\n  top: 20px;\n  right: 10px;\n  font-size: 20px;\n  font-weight: bold;\n  cursor: pointer;\n}\n\n.close:hover,\n.close:focus {\n  background-color: #c82333;\n  text-decoration: none;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n}\n\n.form-group input, .form-group select, .form-group textarea {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n}\n\n.btn-submit {\n  background-color: #28a745;\n  color: white;\n}\n\n.btn-submit:hover {\n  background-color: #218838;\n}\n/* Styles pour la pagination */\n.pagination {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n.pagination button {\n  margin: 0 5px;\n  padding: 5px 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #007BFF;\n  color: white;\n  cursor: pointer;\n}\n.pagination button:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\n.pagination span {\n  align-self: center;\n  margin: 0 10px;\n}\n</style>"],"mappings":";;;;;;;;;;;;;;AAoIA,OAAAA,KAAA;AACA,OAAAC,UAAA;AAEA;EACAC,UAAA;IACAD,UAAA,EAAAA;EACA;EACAE,IAAA,WAAAA,KAAA;IACA;MACAC,WAAA;MACAC,iBAAA;MAEAC,kBAAA;MACAC,MAAA;QACAC,KAAA;QACAC,QAAA;MACA;MACAC,MAAA;MACAC,YAAA;MACAC,YAAA;MACAC,QAAA;MACAC,gBAAA;MACAC,YAAA;MACAC,QAAA;MAEAC,WAAA;MACAC,YAAA;MACAC,UAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,qBAAA;IACA,KAAAC,eAAA;EACA;EACAC,QAAA;IACAC,UAAA,WAAAA,WAAA;MACA,OAAAC,IAAA,CAAAC,IAAA,MAAAP,UAAA,QAAAD,YAAA;IACA;IACAS,YAAA,WAAAA,aAAA;MACA,UAAArB,kBAAA;MACA,IAAAsB,KAAA,SAAAX,WAAA,aAAAC,YAAA;MACA,YAAAZ,kBAAA,CAAAuB,KAAA,CAAAD,KAAA,EAAAA,KAAA,QAAAV,YAAA;IACA;EACA;EACAY,OAAA;IACAC,UAAA,WAAAA,WAAAC,MAAA;MACAC,OAAA,CAAAC,GAAA,WAAAF,MAAA;MACA,wCAAAG,MAAA,CAAAH,MAAA,CAAAI,KAAA,MAAAC,GAAA;IACA;IACAC,SAAA,WAAAA,UAAAC,UAAA;MACA,KAAAlC,iBAAA,GAAAkC,UAAA;MACA,KAAAnC,WAAA;IACA;IACAoC,UAAA,WAAAA,WAAA;MACA,KAAApC,WAAA;IACA;IACAqC,OAAA,WAAAA,QAAAC,OAAA;MACA,OAAAA,OAAA,CAAAV,MAAA,CAAAW,QAAA,YACAD,OAAA,CAAAV,MAAA,CAAAW,QAAA,YACAD,OAAA,CAAAV,MAAA,CAAAW,QAAA,aACAD,OAAA,CAAAV,MAAA,CAAAW,QAAA;IACA;IACAC,KAAA,WAAAA,MAAAF,OAAA;MACA,OAAAA,OAAA,CAAAV,MAAA,CAAAW,QAAA;IACA;IACAtB,qBAAA,WAAAA,sBAAA;MAAA,IAAAwB,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,MAAA,EAAAC,QAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAEAL,MAAA,OAAAO,eAAA;gBACAC,IAAA,EAAAb,KAAA,CAAA5B,WAAA;gBACA0C,KAAA,EAAAd,KAAA,CAAA3B;cACA;cAAAoC,QAAA,CAAAE,IAAA;cAAA,OAEAxD,KAAA,CAAA4D,GAAA,gDAAAzB,MAAA,CAAAe,MAAA;YAAA;cAAAC,QAAA,GAAAG,QAAA,CAAAO,IAAA;cAEA,IAAAV,QAAA,CAAAhD,IAAA;gBACA0C,KAAA,CAAAvC,kBAAA,GAAA6C,QAAA,CAAAhD,IAAA;gBACA0C,KAAA,CAAA1B,UAAA,GAAAgC,QAAA,CAAAhD,IAAA,CAAA2D,MAAA;gBACA7B,OAAA,CAAAC,GAAA,wBAAAW,KAAA,CAAAvC,kBAAA;cACA;gBACAuC,KAAA,CAAAvC,kBAAA;gBACAuC,KAAA,CAAA1B,UAAA;gBACAc,OAAA,CAAAC,GAAA;cACA;cAAAoB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAS,EAAA,GAAAT,QAAA;cAGArB,OAAA,CAAA+B,KAAA,8CAAAV,QAAA,CAAAS,EAAA;cACAlB,KAAA,CAAAvC,kBAAA;cACAuC,KAAA,CAAA1B,UAAA;cACA0B,KAAA,CAAAnC,MAAA;YAAA;YAAA;cAAA,OAAA4C,QAAA,CAAAW,IAAA;UAAA;QAAA,GAAAhB,OAAA;MAAA;IAEA;IACA3B,eAAA,WAAAA,gBAAA;MAAA,IAAA4C,MAAA;MAAA,OAAApB,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAmB,SAAA;QAAA,IAAAhB,QAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAgB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAd,IAAA,GAAAc,SAAA,CAAAb,IAAA;YAAA;cAAAa,SAAA,CAAAd,IAAA;cAAAc,SAAA,CAAAb,IAAA;cAAA,OAEAxD,KAAA,CAAA4D,GAAA;YAAA;cAAAT,QAAA,GAAAkB,SAAA,CAAAR,IAAA;cACAK,MAAA,CAAAnD,YAAA,GAAAoC,QAAA,CAAAhD,IAAA;cAAAkE,SAAA,CAAAb,IAAA;cAAA;YAAA;cAAAa,SAAA,CAAAd,IAAA;cAAAc,SAAA,CAAAN,EAAA,GAAAM,SAAA;cAEApC,OAAA,CAAA+B,KAAA,CAAAK,SAAA,CAAAN,EAAA;YAAA;YAAA;cAAA,OAAAM,SAAA,CAAAJ,IAAA;UAAA;QAAA,GAAAE,QAAA;MAAA;IAEA;IACAG,eAAA,WAAAA,gBAAAC,QAAA;MAAA,IAAAC,MAAA;MAAA,OAAA1B,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAyB,SAAA;QAAA,IAAAtB,QAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAsB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAApB,IAAA,GAAAoB,SAAA,CAAAnB,IAAA;YAAA;cAAAmB,SAAA,CAAApB,IAAA;cAEAiB,MAAA,CAAAR,KAAA;cAAAW,SAAA,CAAAnB,IAAA;cAAA,OACAxD,KAAA,CAAA4E,GAAA,+CAAAL,QAAA;YAAA;cAAApB,QAAA,GAAAwB,SAAA,CAAAd,IAAA;cACAW,MAAA,CAAAnD,qBAAA;cAAAsD,SAAA,CAAAnB,IAAA;cAAA;YAAA;cAAAmB,SAAA,CAAApB,IAAA;cAAAoB,SAAA,CAAAZ,EAAA,GAAAY,SAAA;cAEA,IAAAA,SAAA,CAAAZ,EAAA,CAAAZ,QAAA,IAAAwB,SAAA,CAAAZ,EAAA,CAAAZ,QAAA,CAAAhD,IAAA,IAAAwE,SAAA,CAAAZ,EAAA,CAAAZ,QAAA,CAAAhD,IAAA,CAAAO,MAAA;gBACA8D,MAAA,CAAA9D,MAAA,GAAAiE,SAAA,CAAAZ,EAAA,CAAAZ,QAAA,CAAAhD,IAAA,CAAAO,MAAA;cACA;gBACA8D,MAAA,CAAA9D,MAAA;cACA;YAAA;YAAA;cAAA,OAAAiE,SAAA,CAAAV,IAAA;UAAA;QAAA,GAAAQ,QAAA;MAAA;IAEA;IACAI,cAAA,WAAAA,eAAAN,QAAA;MAAA,IAAAO,MAAA;MAAA,OAAAhC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAA+B,SAAA;QAAA,IAAA5B,QAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAA4B,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA1B,IAAA,GAAA0B,SAAA,CAAAzB,IAAA;YAAA;cACAvB,OAAA,CAAAC,GAAA,gCAAAqC,QAAA;cACAO,MAAA,CAAAhE,gBAAA,GAAAoE,aAAA,KAAAX,QAAA;cACAO,MAAA,CAAAjE,QAAA;cACAoB,OAAA,CAAAC,GAAA;;cAEA;cAAA+C,SAAA,CAAA1B,IAAA;cAAA0B,SAAA,CAAAzB,IAAA;cAAA,OAEAxD,KAAA,CAAA4D,GAAA,wCAAAzB,MAAA,CAAAoC,QAAA,CAAAY,WAAA;YAAA;cAAAhC,QAAA,GAAA8B,SAAA,CAAApB,IAAA;cACAiB,MAAA,CAAA9D,QAAA,GAAAmC,QAAA,CAAAhD,IAAA;cAEA8B,OAAA,CAAAC,GAAA,kCAAA4C,MAAA,CAAA9D,QAAA;cAAAiE,SAAA,CAAAzB,IAAA;cAAA;YAAA;cAAAyB,SAAA,CAAA1B,IAAA;cAAA0B,SAAA,CAAAlB,EAAA,GAAAkB,SAAA;cAGAhD,OAAA,CAAA+B,KAAA,kDAAAiB,SAAA,CAAAlB,EAAA;cACAe,MAAA,CAAAnE,YAAA;cACAmE,MAAA,CAAAhE,gBAAA,CAAAE,QAAA;YAAA;YAAA;cAAA,OAAAiE,SAAA,CAAAhB,IAAA;UAAA;QAAA,GAAAc,QAAA;MAAA;IAEA;IACAK,cAAA,WAAAA,eAAA;MACA,KAAAvE,QAAA;IACA;IACAwE,YAAA,WAAAA,aAAA;MAAA,IAAAC,MAAA;MAAA,OAAAxC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAuC,SAAA;QAAA,IAAAhB,QAAA,EAAApB,QAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAoC,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAlC,IAAA,GAAAkC,SAAA,CAAAjC,IAAA;YAAA;cAAA,MACA,CAAA8B,MAAA,CAAAxE,gBAAA,CAAA4E,cAAA,KAAAJ,MAAA,CAAAxE,gBAAA,CAAA6E,YAAA,KAAAL,MAAA,CAAAxE,gBAAA,CAAA8E,UAAA,KAAAN,MAAA,CAAAxE,gBAAA,CAAA+E,iBAAA;gBAAAJ,SAAA,CAAAjC,IAAA;gBAAA;cAAA;cACA8B,MAAA,CAAA5E,MAAA;cAAA,OAAA+E,SAAA,CAAAK,MAAA;YAAA;cAAAL,SAAA,CAAAlC,IAAA;cAIAgB,QAAA;gBACAY,WAAA,EAAAG,MAAA,CAAAxE,gBAAA,CAAAqE,WAAA;gBACAO,cAAA,EAAAJ,MAAA,CAAAxE,gBAAA,CAAA4E,cAAA;gBACAC,YAAA,EAAAL,MAAA,CAAAxE,gBAAA,CAAA6E,YAAA;gBACAI,WAAA,EAAAT,MAAA,CAAAxE,gBAAA,CAAAiF,WAAA;gBACAH,UAAA,EAAAN,MAAA,CAAAxE,gBAAA,CAAA8E,UAAA;gBACAI,MAAA,EAAAV,MAAA,CAAAxE,gBAAA,CAAAkF,MAAA;gBACAH,iBAAA,EAAAP,MAAA,CAAAxE,gBAAA,CAAA+E;cACA;cACAP,MAAA,CAAA5E,MAAA;cACAuB,OAAA,CAAAC,GAAA,4BAAAqC,QAAA;cAAAkB,SAAA,CAAAjC,IAAA;cAAA,OACAxD,KAAA,CAAA4E,GAAA,8CAAAzC,MAAA,CAAAmD,MAAA,CAAAxE,gBAAA,CAAAqE,WAAA,GAAAZ,QAAA,GACA;YAAA;cADApB,QAAA,GAAAsC,SAAA,CAAA5B,IAAA;cAEA5B,OAAA,CAAAC,GAAA,CAAAiB,QAAA,CAAAhD,IAAA;cACAmF,MAAA,CAAAF,cAAA;cACAE,MAAA,CAAAjE,qBAAA;cAAAoE,SAAA,CAAAjC,IAAA;cAAA;YAAA;cAAAiC,SAAA,CAAAlC,IAAA;cAAAkC,SAAA,CAAA1B,EAAA,GAAA0B,SAAA;cAEA,IAAAA,SAAA,CAAA1B,EAAA,CAAAZ,QAAA,IAAAsC,SAAA,CAAA1B,EAAA,CAAAZ,QAAA,CAAAhD,IAAA,IAAAsF,SAAA,CAAA1B,EAAA,CAAAZ,QAAA,CAAAhD,IAAA,CAAA8F,OAAA;gBACAX,MAAA,CAAA5E,MAAA,IAAA+E,SAAA,CAAA1B,EAAA,CAAAZ,QAAA,CAAAhD,IAAA,CAAA8F,OAAA;cACA,WAAAR,SAAA,CAAA1B,EAAA,CAAAZ,QAAA,IAAAsC,SAAA,CAAA1B,EAAA,CAAAZ,QAAA,CAAAhD,IAAA,IAAAsF,SAAA,CAAA1B,EAAA,CAAAZ,QAAA,CAAAhD,IAAA,CAAAO,MAAA;gBACA4E,MAAA,CAAA5E,MAAA,GAAA+E,SAAA,CAAA1B,EAAA,CAAAZ,QAAA,CAAAhD,IAAA,CAAAO,MAAA;cACA;gBACA4E,MAAA,CAAA5E,MAAA;cACA;YAAA;YAAA;cAAA,OAAA+E,SAAA,CAAAxB,IAAA;UAAA;QAAA,GAAAsB,QAAA;MAAA;IAEA;IACAW,UAAA,WAAAA,WAAAxC,IAAA;MACA,IAAAA,IAAA,QAAAA,IAAA,QAAAlC,UAAA;MACA,KAAAP,WAAA,GAAAyC,IAAA;MACA,KAAArC,qBAAA;IACA;EACA;EACA8E,KAAA;IACAtF,QAAA,WAAAA,SAAAuF,MAAA;MACAnE,OAAA,CAAAC,GAAA,yBAAAkE,MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}