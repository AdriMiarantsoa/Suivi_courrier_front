{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nvar huhu = localStorage.getItem('authToken');\nconsole.log(huhuh);\nimport jwt_decode from 'jwt-decode';\nexport default {\n  computed: {\n    routeName: function routeName() {\n      var name = this.$route.name;\n      return this.capitalizeFirstLetter(name);\n    }\n  },\n  data: function data() {\n    return {\n      activeNotifications: false,\n      username: null\n    };\n  },\n  methods: {\n    getUserFromToken: function getUserFromToken() {\n      var token = localStorage.getItem('authToken');\n      console.log(\"Bearer\" + token);\n      if (token) {\n        var decodedToken = jwt_decode(token);\n        console.log(\"Milay be!\");\n        return decodedToken.nom_utilisateur;\n      }\n      return null;\n    },\n    created: function created() {\n      this.username = this.getUserFromToken();\n    },\n    capitalizeFirstLetter: function capitalizeFirstLetter(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    },\n    toggleNotificationDropDown: function toggleNotificationDropDown() {\n      this.activeNotifications = !this.activeNotifications;\n    },\n    closeDropDown: function closeDropDown() {\n      this.activeNotifications = false;\n    },\n    toggleSidebar: function toggleSidebar() {\n      this.$sidebar.displaySidebar(!this.$sidebar.showSidebar);\n    },\n    hideSidebar: function hideSidebar() {\n      this.$sidebar.displaySidebar(false);\n    },\n    logout: function logout() {\n      // this.$store.commit('clearUser'); // Call the clearUser mutation\n      this.$router.push('/'); // Redirect to login page\n    }\n  }\n};","map":{"version":3,"names":["huhu","localStorage","getItem","console","log","huhuh","jwt_decode","computed","routeName","name","$route","capitalizeFirstLetter","data","activeNotifications","username","methods","getUserFromToken","token","decodedToken","nom_utilisateur","created","string","charAt","toUpperCase","slice","toggleNotificationDropDown","closeDropDown","toggleSidebar","$sidebar","displaySidebar","showSidebar","hideSidebar","logout","$router","push"],"sources":["src/layout/dashboard/TopNavbar.vue"],"sourcesContent":["<template>\n  <nav class=\"navbar navbar-expand-lg navbar-light\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" href=\"#\">{{ routeName }}</a>\n      <button\n        class=\"navbar-toggler navbar-burger\"\n        type=\"button\"\n        @click=\"toggleSidebar\"\n        :aria-expanded=\"$sidebar.showSidebar\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span class=\"navbar-toggler-bar\"></span>\n        <span class=\"navbar-toggler-bar\"></span>\n        <span class=\"navbar-toggler-bar\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\">\n        <ul class=\"navbar-nav ml-auto\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\">\n              <p class=\"nav-item\" v-if=\"username\">{{ username }}</p>\n            </a>\n          </li>\n          <drop-down\n            class=\"nav-item\"\n            title=\"5 Notifications\"\n            title-classes=\"nav-link\"\n            icon=\"ti-bell\"\n          >\n          <a class=\"dropdown-item\" @click=\"$router.push('/board/notifications')\">Voir les notifications</a>\n          </drop-down>\n          <li class=\"nav-item\">\n            <p-button type=\"danger\" @click.native.prevent=\"logout\">\n              <a >\n                <small>Log out</small>\n              </a>\n            </p-button>\n        </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</template>\n<script>\nconst huhu = localStorage.getItem('authToken');\nconsole.log(huhuh);\nimport jwt_decode from 'jwt-decode';\nexport default {\n  computed: {\n    routeName() {\n      const { name } = this.$route;\n      return this.capitalizeFirstLetter(name);\n    },\n  },\n  data() {\n    return {\n      activeNotifications: false,\n      username : null\n    };\n  },\n  methods: {\n    getUserFromToken() {\n      const token = localStorage.getItem('authToken');\n      console.log(\"Bearer\" + token);\n      if (token) {\n        const decodedToken = jwt_decode(token);\n        console.log(\"Milay be!\");\n        return decodedToken.nom_utilisateur;\n      }\n      return null;\n    },\n    created() {\n      this.username = this.getUserFromToken();\n    },\n\n    capitalizeFirstLetter(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    },\n    toggleNotificationDropDown() {\n      this.activeNotifications = !this.activeNotifications;\n    },\n    closeDropDown() {\n      this.activeNotifications = false;\n    },\n    toggleSidebar() {\n      this.$sidebar.displaySidebar(!this.$sidebar.showSidebar);\n    },\n    hideSidebar() {\n      this.$sidebar.displaySidebar(false);\n    },\n    logout() {\n      // this.$store.commit('clearUser'); // Call the clearUser mutation\n      this.$router.push('/'); // Redirect to login page\n    }\n  },\n};\n</script>\n<style></style>\n"],"mappings":";;;AA2CA,IAAAA,IAAA,GAAAC,YAAA,CAAAC,OAAA;AACAC,OAAA,CAAAC,GAAA,CAAAC,KAAA;AACA,OAAAC,UAAA;AACA;EACAC,QAAA;IACAC,SAAA,WAAAA,UAAA;MACA,IAAAC,IAAA,QAAAC,MAAA,CAAAD,IAAA;MACA,YAAAE,qBAAA,CAAAF,IAAA;IACA;EACA;EACAG,IAAA,WAAAA,KAAA;IACA;MACAC,mBAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACAC,gBAAA,WAAAA,iBAAA;MACA,IAAAC,KAAA,GAAAhB,YAAA,CAAAC,OAAA;MACAC,OAAA,CAAAC,GAAA,YAAAa,KAAA;MACA,IAAAA,KAAA;QACA,IAAAC,YAAA,GAAAZ,UAAA,CAAAW,KAAA;QACAd,OAAA,CAAAC,GAAA;QACA,OAAAc,YAAA,CAAAC,eAAA;MACA;MACA;IACA;IACAC,OAAA,WAAAA,QAAA;MACA,KAAAN,QAAA,QAAAE,gBAAA;IACA;IAEAL,qBAAA,WAAAA,sBAAAU,MAAA;MACA,OAAAA,MAAA,CAAAC,MAAA,IAAAC,WAAA,KAAAF,MAAA,CAAAG,KAAA;IACA;IACAC,0BAAA,WAAAA,2BAAA;MACA,KAAAZ,mBAAA,SAAAA,mBAAA;IACA;IACAa,aAAA,WAAAA,cAAA;MACA,KAAAb,mBAAA;IACA;IACAc,aAAA,WAAAA,cAAA;MACA,KAAAC,QAAA,CAAAC,cAAA,OAAAD,QAAA,CAAAE,WAAA;IACA;IACAC,WAAA,WAAAA,YAAA;MACA,KAAAH,QAAA,CAAAC,cAAA;IACA;IACAG,MAAA,WAAAA,OAAA;MACA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}