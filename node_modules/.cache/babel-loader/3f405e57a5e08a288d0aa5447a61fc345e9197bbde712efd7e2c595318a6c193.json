{"ast":null,"code":"import _regeneratorRuntime from \"/home/adrienna/Documents/Stage/Suivi_courrier_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/adrienna/Documents/Stage/Suivi_courrier_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport jwt_decode from 'jwt-decode';\nexport default {\n  computed: {\n    routeName: function routeName() {\n      var name = this.$route.name;\n      return this.capitalizeFirstLetter(name);\n    }\n  },\n  data: function data() {\n    return {\n      activeNotifications: false,\n      username: null\n    };\n  },\n  created: function created() {\n    var _this = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _this.getUserFromToken();\n          case 2:\n            _this.username = _context.sent;\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  methods: {\n    getUserFromToken: function getUserFromToken() {\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var token, decodedToken;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"getUserFromToken function called\");\n              token = localStorage.getItem('authToken');\n              if (!token) {\n                _context2.next = 12;\n                break;\n              }\n              _context2.prev = 3;\n              decodedToken = jwt_decode(token);\n              console.log(\"Decoded token:\", decodedToken); // Log the decoded token\n              return _context2.abrupt(\"return\", decodedToken.nom_utilisateur);\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](3);\n              console.error(\"Error decoding token:\", _context2.t0); // Catch any errors\n            case 12:\n              return _context2.abrupt(\"return\", null);\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[3, 9]]);\n      }))();\n    },\n    capitalizeFirstLetter: function capitalizeFirstLetter(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    },\n    toggleNotificationDropDown: function toggleNotificationDropDown() {\n      this.activeNotifications = !this.activeNotifications;\n    },\n    closeDropDown: function closeDropDown() {\n      this.activeNotifications = false;\n    },\n    toggleSidebar: function toggleSidebar() {\n      this.$sidebar.displaySidebar(!this.$sidebar.showSidebar);\n    },\n    hideSidebar: function hideSidebar() {\n      this.$sidebar.displaySidebar(false);\n    },\n    logout: function logout() {\n      // this.$store.commit('clearUser'); // Call the clearUser mutation\n      localStorage.clear(\"authToken\");\n      this.$router.push('/'); // Redirect to login page\n    }\n  }\n};","map":{"version":3,"names":["jwt_decode","computed","routeName","name","$route","capitalizeFirstLetter","data","activeNotifications","username","created","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","getUserFromToken","sent","stop","methods","_callee2","token","decodedToken","_callee2$","_context2","console","log","localStorage","getItem","abrupt","nom_utilisateur","t0","error","string","charAt","toUpperCase","slice","toggleNotificationDropDown","closeDropDown","toggleSidebar","$sidebar","displaySidebar","showSidebar","hideSidebar","logout","clear","$router","push"],"sources":["src/layout/dashboard/TopNavbar.vue"],"sourcesContent":["<template>\n  <nav class=\"navbar navbar-expand-lg navbar-light\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" href=\"#\">{{ routeName }}</a>\n      <button\n        class=\"navbar-toggler navbar-burger\"\n        type=\"button\"\n        @click=\"toggleSidebar\"\n        :aria-expanded=\"$sidebar.showSidebar\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span class=\"navbar-toggler-bar\"></span>\n        <span class=\"navbar-toggler-bar\"></span>\n        <span class=\"navbar-toggler-bar\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\">\n        <ul class=\"navbar-nav ml-auto\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\">\n              <p class=\"nav-item\" v-if=\"username\">{{ username }}</p>\n            </a>\n          </li>\n          <drop-down\n            class=\"nav-item\"\n            title=\"5 Notifications\"\n            title-classes=\"nav-link\"\n            icon=\"ti-bell\"\n          >\n          <a class=\"dropdown-item\" @click=\"$router.push('/board/notifications')\">Voir les notifications</a>\n          </drop-down>\n          <li class=\"nav-item\">\n            <p-button type=\"danger\" @click.native.prevent=\"logout\">\n              <a >\n                <small>Log out</small>\n              </a>\n            </p-button>\n        </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</template>\n<script>\nimport jwt_decode from 'jwt-decode';\nexport default {\n  computed: {\n    routeName() {\n      const { name } = this.$route;\n      return this.capitalizeFirstLetter(name);\n    },\n  },\n  data() {\n    return {\n      activeNotifications: false,\n      username : null\n    };\n  },\n  async created() { // Make this an async lifecycle hook\n    this.username = await this.getUserFromToken(); // Use await here\n  },\n  methods: {\n    async getUserFromToken() {\n      console.log(\"getUserFromToken function called\");\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        try {\n          const decodedToken = jwt_decode(token);\n          console.log(\"Decoded token:\", decodedToken); // Log the decoded token\n          return decodedToken.nom_utilisateur; // Return the username from the decoded token\n        } catch (error) {\n          console.error(\"Error decoding token:\", error); // Catch any errors\n        }\n      }\n      return null; // Return null if no token found\n    },\n    capitalizeFirstLetter(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    },\n    toggleNotificationDropDown() {\n      this.activeNotifications = !this.activeNotifications;\n    },\n    closeDropDown() {\n      this.activeNotifications = false;\n    },\n    toggleSidebar() {\n      this.$sidebar.displaySidebar(!this.$sidebar.showSidebar);\n    },\n    hideSidebar() {\n      this.$sidebar.displaySidebar(false);\n    },\n    logout() {\n      // this.$store.commit('clearUser'); // Call the clearUser mutation\n      localStorage.clear(\"authToken\");\n      this.$router.push('/'); // Redirect to login page\n    }\n  },\n};\n</script>\n<style></style>\n"],"mappings":";;;;;AA2CA,OAAAA,UAAA;AACA;EACAC,QAAA;IACAC,SAAA,WAAAA,UAAA;MACA,IAAAC,IAAA,QAAAC,MAAA,CAAAD,IAAA;MACA,YAAAE,qBAAA,CAAAF,IAAA;IACA;EACA;EACAG,IAAA,WAAAA,KAAA;IACA;MACAC,mBAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;MAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OACAT,KAAA,CAAAU,gBAAA;UAAA;YAAAV,KAAA,CAAAF,QAAA,GAAAS,QAAA,CAAAI,IAAA;UAAA;UAAA;YAAA,OAAAJ,QAAA,CAAAK,IAAA;QAAA;MAAA,GAAAR,OAAA;IAAA;EACA;EACAS,OAAA;IACAH,gBAAA,WAAAA,iBAAA;MAAA,OAAAT,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAW,SAAA;QAAA,IAAAC,KAAA,EAAAC,YAAA;QAAA,OAAAd,mBAAA,GAAAG,IAAA,UAAAY,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAV,IAAA,GAAAU,SAAA,CAAAT,IAAA;YAAA;cACAU,OAAA,CAAAC,GAAA;cACAL,KAAA,GAAAM,YAAA,CAAAC,OAAA;cAAA,KACAP,KAAA;gBAAAG,SAAA,CAAAT,IAAA;gBAAA;cAAA;cAAAS,SAAA,CAAAV,IAAA;cAEAQ,YAAA,GAAA1B,UAAA,CAAAyB,KAAA;cACAI,OAAA,CAAAC,GAAA,mBAAAJ,YAAA;cAAA,OAAAE,SAAA,CAAAK,MAAA,WACAP,YAAA,CAAAQ,eAAA;YAAA;cAAAN,SAAA,CAAAV,IAAA;cAAAU,SAAA,CAAAO,EAAA,GAAAP,SAAA;cAEAC,OAAA,CAAAO,KAAA,0BAAAR,SAAA,CAAAO,EAAA;YAAA;cAAA,OAAAP,SAAA,CAAAK,MAAA,WAGA;YAAA;YAAA;cAAA,OAAAL,SAAA,CAAAN,IAAA;UAAA;QAAA,GAAAE,QAAA;MAAA;IACA;IACAnB,qBAAA,WAAAA,sBAAAgC,MAAA;MACA,OAAAA,MAAA,CAAAC,MAAA,IAAAC,WAAA,KAAAF,MAAA,CAAAG,KAAA;IACA;IACAC,0BAAA,WAAAA,2BAAA;MACA,KAAAlC,mBAAA,SAAAA,mBAAA;IACA;IACAmC,aAAA,WAAAA,cAAA;MACA,KAAAnC,mBAAA;IACA;IACAoC,aAAA,WAAAA,cAAA;MACA,KAAAC,QAAA,CAAAC,cAAA,OAAAD,QAAA,CAAAE,WAAA;IACA;IACAC,WAAA,WAAAA,YAAA;MACA,KAAAH,QAAA,CAAAC,cAAA;IACA;IACAG,MAAA,WAAAA,OAAA;MACA;MACAjB,YAAA,CAAAkB,KAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}