{"ast":null,"code":"import _regeneratorRuntime from \"/home/adrienna/Documents/Stage/Suivi_courrier_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/adrienna/Documents/Stage/Suivi_courrier_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'connection_user',\n  data: function data() {\n    return {\n      nom_utilisateur: '',\n      mot_de_passe: '',\n      confirmMdp: '',\n      role: '',\n      departement: '',\n      isLogin: true,\n      departements: [],\n      roles: [],\n      erreurMessage: ''\n    };\n  },\n  mounted: function mounted() {\n    this.getDepartements();\n    this.getRoles();\n  },\n  methods: {\n    getDepartements: function getDepartements() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"http://localhost:8081/api/departements\");\n            case 3:\n              response = _context.sent;\n              _this.departements = response.data;\n              console.log(_this.departements);\n              _context.next = 11;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 8]]);\n      }))();\n    },\n    getRoles: function getRoles() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.get(\"http://localhost:8081/api/roles\");\n            case 3:\n              response = _context2.sent;\n              _this2.roles = response.data;\n              console.log(_this2.roles);\n              _context2.next = 11;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error(_context2.t0);\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 8]]);\n      }))();\n    },\n    login: function login() {\n      var _this3 = this;\n      var formData = new FormData();\n      formData.append('nom_utilisateur', this.nom_utilisateur);\n      formData.append('mot_de_passe', this.mot_de_passe);\n      axios.post('http://localhost:8081/api/login', formData).then(function (response) {\n        console.log(response.data);\n        var token = response.data.token;\n        localStorage.setItem('authToken', token);\n        var redirectUrl = response.data.redirect;\n        if (redirectUrl === '/dashboard/document_register') {\n          _this3.$router.push({\n            name: 'Insert the document'\n          });\n        } else {\n          _this3.$router.push(redirectUrl);\n        }\n      }).catch(function (error) {\n        console.error(error);\n        if (error.response) {\n          _this3.erreurMessage = error.response.data; // Affichez le message d'erreur\n        } else {\n          _this3.erreurMessage = 'Une erreur est survenue lors de la connexion.'; // Message générique\n        }\n      });\n    },\n    signUp: function signUp() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var receptionData, response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(_this4.mot_de_passe === _this4.confirmMdp)) {\n                _context3.next = 21;\n                break;\n              }\n              receptionData = {\n                nom_utilisateur: _this4.nom_utilisateur,\n                mot_de_passe: _this4.confirmMdp,\n                departement: _this4.departement,\n                role: _this4.role\n              };\n              console.log(\"Sending Reception Data:\", receptionData);\n              _context3.prev = 3;\n              _context3.next = 6;\n              return axios.post('http://localhost:8081/api/signup', receptionData);\n            case 6:\n              response = _context3.sent;\n              console.log(response.data); // La réponse du backend, potentiellement le token\n\n              _this4.isLogin = true;\n              _this4.nom_utilisateur = '';\n              _this4.mot_de_passe = '';\n              _this4.confirmMdp = '';\n              _this4.role = '';\n              _this4.departement = '';\n              _context3.next = 19;\n              break;\n            case 16:\n              _context3.prev = 16;\n              _context3.t0 = _context3[\"catch\"](3);\n              console.error(\"Erreur lors de l'inscription:\", _context3.t0);\n            case 19:\n              _context3.next = 22;\n              break;\n            case 21:\n              alert(\"Les mots de passe ne correspondent pas\");\n            case 22:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[3, 16]]);\n      }))();\n    },\n    toggleMode: function toggleMode() {\n      this.isLogin = !this.isLogin;\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","nom_utilisateur","mot_de_passe","confirmMdp","role","departement","isLogin","departements","roles","erreurMessage","mounted","getDepartements","getRoles","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","sent","console","log","t0","error","stop","_this2","_callee2","_callee2$","_context2","login","_this3","formData","FormData","append","post","then","token","localStorage","setItem","redirectUrl","redirect","$router","push","catch","signUp","_this4","_callee3","receptionData","_callee3$","_context3","alert","toggleMode"],"sources":["src/pages/LoginUser.vue"],"sourcesContent":["<template>\n  <div class=\"login-page\">\n    <div class=\"form\">\n      <img alt=\"User profile icon\" src=\"@/assets/ok.avif\" width=\"80\" height=\"80\" />\n      <h2>{{ isLogin ? 'Login' : 'Sign Up' }}</h2>\n\n      <div v-if=\"erreurMessage\" class=\"error\">{{ erreurMessage }}</div>\n\n      <form @submit.prevent=\"isLogin ? login() : signUp()\">\n        <div class=\"input-field\">\n          <label for=\"nom\">Username</label>\n          <input type=\"text\" id=\"nom\" v-model=\"nom_utilisateur\" placeholder=\"Enter your username\" />\n        </div>\n        <div class=\"input-field\">\n          <label for=\"mdp\">Password</label>\n          <input type=\"password\" id=\"mdp\" v-model=\"mot_de_passe\" placeholder=\"Enter your password\" />\n        </div>\n        <div v-if=\"!isLogin\" class=\"input-field\">\n          <label for=\"confirm-mdp\">Confirm Password</label>\n          <input type=\"password\" id=\"confirm-mdp\" v-model=\"confirmMdp\" placeholder=\"Re-enter your password\" />\n        </div>\n\n        <div v-if=\"!isLogin\" class=\"input-field\">\n          <label for=\"role\">Role</label>\n          <select v-model=\"role\" id=\"role\" class=\"styled-select\">\n            <option value=\"\" disabled>Select your role</option>\n            <option v-for=\"role in roles\" :key=\"role.id\" :value=\"role\">\n              {{ role.nom_role }}\n            </option>\n          </select>\n        </div>\n\n        <div v-if=\"!isLogin && role.nom_role !== 'Secretaire'\" class=\"input-field\">\n          <label for=\"departement\">Department</label>\n          <select v-model=\"departement\" id=\"departement\" class=\"styled-select\">\n            <option value=\"\" disabled>Select your department</option>\n            <option v-for=\"departement in departements\" :key=\"departement.id\" :value=\"departement\">\n              {{ departement.nom_departement }}\n            </option>\n          </select>\n        </div>\n\n        <div class=\"remember-me\" v-if=\"isLogin\">\n          <a href=\"#\" class=\"forgot-password\">Forgot Password?</a>\n        </div>\n        <button type=\"submit\" class=\"login-btn\">{{ isLogin ? 'LOGIN' : 'SIGN UP' }}</button>\n      </form>\n      <p class=\"message\" @click=\"toggleMode\">{{ isLogin ? \"Don't have an account? Sign Up\" : \"Already have an account? Login\" }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'connection_user',\n  data() {\n    return {\n      nom_utilisateur: '',\n      mot_de_passe: '',\n      confirmMdp: '',\n      role: '',\n      departement: '',\n      isLogin: true,\n      departements: [],\n      roles: [],\n      erreurMessage: '' \n    }\n  },\n  mounted() {\n    this.getDepartements();\n    this.getRoles();\n  },\n  methods: {\n    async getDepartements() {\n      try {\n        const response = await axios.get(\"http://localhost:8081/api/departements\");\n        this.departements = response.data;\n        console.log(this.departements);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getRoles() {\n      try {\n        const response = await axios.get(\"http://localhost:8081/api/roles\");\n        this.roles = response.data;\n        console.log(this.roles);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    login() {\n      const formData = new FormData();\n      formData.append('nom_utilisateur', this.nom_utilisateur);\n      formData.append('mot_de_passe', this.mot_de_passe);\n\n      axios.post('http://localhost:8081/api/login', formData)\n        .then(response => {\n          console.log(response.data);\n          const token = response.data.token;\n          localStorage.setItem('authToken', token);\n          const redirectUrl = response.data.redirect;\n          if (redirectUrl === '/dashboard/document_register') {\n            this.$router.push({ name: 'Insert the document' });\n          } else {\n            this.$router.push(redirectUrl);\n          }\n        })\n        .catch(error => {\n          console.error(error);\n          if (error.response) {\n            this.erreurMessage = error.response.data; // Affichez le message d'erreur\n          } else {\n            this.erreurMessage = 'Une erreur est survenue lors de la connexion.'; // Message générique\n          }\n        });\n    },\n    async signUp() {\n      if (this.mot_de_passe === this.confirmMdp) {\n        const receptionData = {\n          nom_utilisateur: this.nom_utilisateur,\n          mot_de_passe: this.confirmMdp,\n          departement: this.departement,\n          role: this.role\n        };\n\n        console.log(\"Sending Reception Data:\", receptionData);\n\n        try {\n          const response = await axios.post('http://localhost:8081/api/signup', receptionData);\n          console.log(response.data);  // La réponse du backend, potentiellement le token\n          \n          this.isLogin = true;\n          this.nom_utilisateur = '';\n          this.mot_de_passe = '';\n          this.confirmMdp = '';\n          this.role = '';\n          this.departement = '';\n        } catch (error) {\n          console.error(\"Erreur lors de l'inscription:\", error);\n        }\n      } else {\n        alert(\"Les mots de passe ne correspondent pas\");\n      }\n    },\n    toggleMode() {\n      this.isLogin = !this.isLogin;\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-page {\n  background: linear-gradient(to right, #4CAF50, #81C784); /* Dégradé vert */\n  min-height: 100vh; /* Hauteur minimale pour occuper toute la page */\n  display: flex; /* Utilisation de Flexbox pour centrer le contenu */\n  justify-content: center; /* Centrage horizontal */\n  align-items: center; /* Centrage vertical */\n}\n\n.form {\n  background: white; /* Couleur de fond blanche pour le formulaire */\n  padding: 40px; /* Espacement intérieur */\n  border-radius: 10px; /* Coins arrondis pour le formulaire */\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1); /* Ombre autour du formulaire */\n  width: 100%;\n  max-width: 400px; /* Largeur maximale pour le formulaire */\n}\n\nh2 {\n  text-align: center; /* Centrage du titre */\n  margin-bottom: 30px; /* Espace en bas du titre */\n  font-family: \"Roboto\", sans-serif; /* Police du titre */\n}\n\n.error {\n  color: red; /* Couleur rouge pour les messages d'erreur */\n  margin-bottom: 15px; /* Espacement en bas des messages d'erreur */\n}\n\n.input-field {\n  position: relative; /* Position relative pour les champs de saisie */\n  margin-bottom: 20px; /* Espace entre les champs */\n}\n\n.input-field label {\n  font-family: \"Roboto\", sans-serif; /* Police pour les labels */\n  font-size: 14px; /* Taille de police des labels */\n  color: #4d4d4d; /* Couleur des labels */\n  display: block; /* Chaque label sur une nouvelle ligne */\n  margin-bottom: 5px; /* Espace entre le label et le champ de saisie */\n}\n\n.form input {\n  font-family: \"Roboto\", sans-serif; /* Police pour les champs de saisie */\n  outline: 0; /* Retrait de la bordure par défaut */\n  background: #f2f2f2; /* Couleur de fond des champs de saisie */\n  width: 100%; /* Largeur pleine */\n  border: 0; /* Pas de bordure */\n  margin: 0 0 15px; /* Espacement en bas des champs de saisie */\n  padding: 15px; /* Espacement intérieur des champs de saisie */\n  box-sizing: border-box; /* Prise en compte de la largeur et de la hauteur */\n  font-size: 14px; /* Taille de police des champs de saisie */\n  border-radius: 5px; /* Coins arrondis pour les champs de saisie */\n  transition: border-color 0.3s; /* Transition pour l'effet au focus */\n}\n\n.form input:focus {\n  border-color: #4CAF50; /* Changer la couleur de la bordure au focus */\n}\n\n.styled-select {\n  font-family: \"Roboto\", sans-serif; /* Police pour les sélecteurs */\n  background: #f2f2f2; /* Couleur de fond des sélecteurs */\n  width: 100%; /* Largeur pleine */\n  border: 0; /* Pas de bordure */\n  padding: 15px; /* Espacement intérieur des sélecteurs */\n  box-sizing: border-box; /* Prise en compte de la largeur et de la hauteur */\n  border-radius: 5px; /* Coins arrondis pour le sélecteur */\n  transition: border-color 0.3s; /* Transition pour l'effet au focus */\n}\n\n.styled-select:focus {\n  border-color: #4CAF50; /* Changer la couleur de la bordure au focus */\n}\n\n.login-btn {\n  background-color: #4CAF50; /* Couleur de fond du bouton */\n  color: white; /* Couleur du texte du bouton */\n  border: none; /* Pas de bordure */\n  padding: 15px; /* Espacement intérieur du bouton */\n  width: 100%; /* Largeur pleine du bouton */\n  border-radius: 5px; /* Coins arrondis pour le bouton */\n  cursor: pointer; /* Curseur en main au survol */\n  font-size: 14px; /* Taille de police du bouton */\n  transition: background-color 0.3s; /* Transition pour l'effet au survol */\n}\n\n.login-btn:hover {\n  background-color: #45a049; /* Couleur du bouton au survol */\n}\n\n.message {\n  text-align: center; /* Centrage du message */\n  margin-top: 15px; /* Espace en haut du message */\n  font-family: \"Roboto\", sans-serif; /* Police du message */\n  color: #666; /* Couleur du texte du message */\n  cursor: pointer; /* Curseur en main au survol */\n}\n\n.forgot-password {\n  float: right; /* Alignement à droite */\n  font-size: 12px; /* Taille de police pour le lien mot de passe oublié */\n  color: #4CAF50; /* Couleur verte pour le lien */\n}\n\n.forgot-password:hover {\n  text-decoration: underline; /* Soulignement au survol */\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}