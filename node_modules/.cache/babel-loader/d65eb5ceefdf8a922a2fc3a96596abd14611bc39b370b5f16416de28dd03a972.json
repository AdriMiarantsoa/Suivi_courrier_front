{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      reculist: [],\n      user: null,\n      departement: '',\n      startDate: '',\n      expediteur: '',\n      endDate: '',\n      departementName: '',\n      downloadUrl: ''\n    };\n  },\n  async mounted() {\n    await this.getListRecu();\n    this.exportCourriers();\n  },\n  methods: {\n    async getListRecu() {\n      try {\n        const response = await axios.get('http://localhost:8081/api/utilisateur', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        this.user = response.data;\n        if (!this.user) {\n          console.error(\"User data is missing\");\n          return;\n        }\n        const responsedept = await axios.get(`http://localhost:8081/api/departement/utilisateur/${this.user.id_utilisateur}`);\n        this.departement = responsedept.data;\n        console.log(\"Données du view :\", this.departement);\n        const deptresponse = await axios.get(`http://localhost:8081/api/departement/${this.departement}`);\n        this.departementName = deptresponse.data;\n        console.log('nom_departement:', this.departementName);\n        let url = `http://localhost:8081/api/courriers_recu/${this.departement}`;\n        const params = [];\n        if (this.startDate && this.endDate && this.expediteur) {\n          params.push(`startDate=${this.startDate}&endDate=${this.endDate}&expediteur=${this.expediteur}`);\n        }\n        if (this.startDate && this.endDate) {\n          params.push(`startDate=${this.startDate}&endDate=${this.endDate}`);\n        }\n        if (this.expediteur) {\n          params.push(`expediteur=${this.expediteur}`);\n        }\n        const paramString = params.length > 0 ? `?${params.join('&')}` : '';\n        const listresponse = await axios.get(`${url}${paramString}`);\n        this.reculist = listresponse.data;\n        console.log(\"liste :\", this.reculist);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    downloadFile() {\n      const a = document.createElement('a');\n      a.href = this.downloadUrl;\n      a.download = 'courriers.xlsx';\n      a.click();\n    },\n    async exportCourriers() {\n      try {\n        const response = await axios.post('http://localhost:8081/api/courriers/export', this.reculist, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          params: {\n            departementName: this.departementName\n          },\n          responseType: 'arraybuffer'\n        });\n        console.log(\"Données du tab :\", response.data);\n        const blob = new Blob([response.data], {\n          type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n        });\n        const url = window.URL.createObjectURL(blob);\n        this.downloadUrl = url;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  },\n  watch: {\n    startDate() {\n      if (!this.startDate) {\n        this.getListRecu();\n      }\n    },\n    endDate() {\n      if (!this.endDate) {\n        this.getListRecu();\n      }\n    },\n    expediteur() {\n      if (!this.expediteur) {\n        this.getListRecu();\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","reculist","user","departement","startDate","expediteur","endDate","departementName","downloadUrl","mounted","getListRecu","exportCourriers","methods","response","get","headers","Authorization","localStorage","getItem","console","error","responsedept","id_utilisateur","log","deptresponse","url","params","push","paramString","length","join","listresponse","downloadFile","a","document","createElement","href","download","click","post","responseType","blob","Blob","type","window","URL","createObjectURL","watch"],"sources":["src/pages/ListCourriersRecu.vue"],"sourcesContent":["<template>\n    <div>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n                \n                <div class=\"form-inline\">\n                  <div class=\"form-group\">\n                    <label for=\"expediteur\">Expeditor:</label>\n                    <input type=\"text\" v-model=\"expediteur\" id=\"expediteur\" />\n                  </div>  \n                  <div class=\"form-group\">\n                      <label for=\"startDate\">Start Date:</label>\n                      <input type=\"date\" v-model=\"startDate\" id=\"startDate\" />\n                    </div>\n                    <div class=\"form-group\">\n                      <label for=\"endDate\">End Date:</label>\n                      <input type=\"date\" v-model=\"endDate\" id=\"endDate\" />\n                    </div>\n                    <button class=\"btn btn-submit\" @click=\"getListRecu\">Filter</button>\n                    <button v-if=\"!startDate && !endDate && !expediteur\" class=\"btn btn-submit export-button\" @click=\"downloadFile\">Excel exportation</button>\n                  </div>\n            </div>\n\n            <div class=\"card-body table-responsive\">\n              <table class=\"table\">\n                <thead>\n                  <tr>\n                    <th>Status</th>\n                    <th>Document</th>\n                    <th>Description</th>\n                    <th>Expeditor</th>\n                    <th>Date of treatment</th>\n                    <th>Receive by</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"courrier in reculist\" :key=\"courrier.id_courrier\">\n                    <td>{{ courrier.statut }}</td>\n                    <td>{{ courrier.nom_courrier }}</td>\n                    <td>{{ courrier.description }}</td>\n                    <td>{{ courrier.expediteur }}</td>\n                    <td>{{ courrier.date_traitement }}</td>\n                    <td>{{ courrier.nom_utilisateur }}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        reculist: [],\n        user:null,\n        departement:'',\n        startDate: '',\n        expediteur: '',\n        endDate: '',\n        departementName: '',\n\n        downloadUrl: ''\n      };\n    },\n    async mounted() {\n      await this.getListRecu();\n      this.exportCourriers();\n    },\n    methods: {\n        async getListRecu() {\n            try {\n                const response = await axios.get('http://localhost:8081/api/utilisateur', {\n                    headers: {\n                    Authorization: `Bearer ${localStorage.getItem('authToken')}`, \n                    },\n                });\n                this.user = response.data; \n                if (!this.user) {\n                    console.error(\"User data is missing\");\n                    return;\n                }\n\n                const responsedept = await axios.get(`http://localhost:8081/api/departement/utilisateur/${this.user.id_utilisateur}`);\n                this.departement = responsedept.data;\n                console.log(\"Données du view :\",this.departement);\n\n                const deptresponse = await axios.get(`http://localhost:8081/api/departement/${this.departement}`);\n                this.departementName = deptresponse.data;\n                console.log('nom_departement:', this.departementName)\n\n\n                let url = `http://localhost:8081/api/courriers_recu/${this.departement}`;\n\n                const params = [];\n              \n                if (this.startDate && this.endDate && this.expediteur) {\n                    params.push(`startDate=${this.startDate}&endDate=${this.endDate}&expediteur=${this.expediteur}`);\n                }\n\n                if (this.startDate && this.endDate) {\n                    params.push(`startDate=${this.startDate}&endDate=${this.endDate}`);\n                }\n\n                if (this.expediteur) {\n                    params.push(`expediteur=${this.expediteur}`);\n                }\n\n                const paramString = params.length > 0 ? `?${params.join('&')}` : '';\n                const listresponse = await axios.get(`${url}${paramString}`);\n\n                this.reculist = listresponse.data;\n\n                console.log(\"liste :\", this.reculist);\n            } catch (error) {\n                console.error(error);\n            }\n        },\n        downloadFile() {\n          const a = document.createElement('a');\n          a.href = this.downloadUrl;\n          a.download = 'courriers.xlsx';\n          a.click();\n        },\n        async exportCourriers() {\n          try {\n            const response = await axios.post('http://localhost:8081/api/courriers/export', this.reculist, {\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              params: {\n                departementName: this.departementName\n              },\n              responseType: 'arraybuffer',\n            });\n            console.log(\"Données du tab :\",response.data);\n            \n            const blob = new Blob([response.data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n            const url = window.URL.createObjectURL(blob);\n            this.downloadUrl = url;\n          } catch (error) {\n            console.error(error);\n          }\n        }\n    },\n    watch: {\n        startDate() {\n            if (!this.startDate) {\n                this.getListRecu();\n            }\n        },\n        endDate() {\n            if (!this.endDate) {\n                this.getListRecu();\n            }\n        },\n        expediteur() {\n            if (!this.expediteur) {\n                this.getListRecu();\n            }\n        },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .card {\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n    margin-bottom: 20px;\n\n    max-height: 450px; \n    overflow-y: auto; \n    overflow-x: hidden; \n  }\n  .card-header {\n    background-color: #343a40;\n    color: white;\n    padding: 15px;\n    border-bottom: 1px solid #343a40;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n  }\n  .card-header h3 {\n    margin: 0;\n    color:rgb(12, 12, 12);\n    font-size: medium;\n  }\n  .card-body {\n    padding: 20px;\n  }\n  .table {\n    width: 100%;\n    border-collapse: collapse;\n    margin-top:55px;\n  }\n  .table th, .table td {\n    border: 1px solid #ddd;\n    padding: 8px;\n    text-align: left;\n    position: relative;\n  }\n  .table th {\n    background-color: #f2f2f2;\n    font-weight: bold;\n  }\n  .table td {\n    word-break: break-word; \n  }\n\n  .table tbody tr:nth-child(even) {\n    background-color: #f9f9f9;\n  }\n  .table tbody tr:hover {\n    background-color: #f1f1f1;\n  }\n  .btn {\n    padding: 10px 15px;\n    font-size: 14px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n    \n  }\n  .btn-show {\n    display: block;\n    width: 100%;\n    background-color: #001122;\n    color: white;\n  }\n  .btn-show:hover {\n    background-color: rgb(1, 31, 65);\n    transition: background-color 1s ease;\n  }\n  .modal {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: #001122;\n  }\n  .close {\n    color: #fff;\n    background-color: #dc3545;\n    border-radius: 50%;\n    padding: 5px 10px;\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    font-size: 20px;\n    font-weight: bold;\n    cursor: pointer;\n  }\n  .close:hover,\n  .close:focus {\n    background-color: #c82333;\n    text-decoration: none;\n  }\n  .modal-content {\n    background-color: #fff;\n    padding: 20px;\n    border: 1px solid #888;\n    width: 80%;\n    max-width: 600px;\n    border-radius: 5px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n    position: relative;\n    overflow-y: auto;\n    max-height: 80vh;\n  }\n  \n  .modal-content h2 {\n    font-size: 24px;\n    font-weight: bold;\n    margin-bottom: 10px;\n  }\n  \n  .modal-content h3 {\n    font-size: 18px;\n    font-weight: bold;\n    margin-bottom: 10px;\n  }\n  \n  .form-group {\n    margin-bottom: 20px;\n  }\n  \n  .form-group label {\n    font-size: 16px;\n    font-weight: bold;\n    margin-bottom: 5px;\n  }\n  \n  .form-group input, .form-group textarea {\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n  }\n  \n  .btn-submit {\n    background-color:  #001122;\n    color: #fff;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n  \n  .btn-submit:hover {\n    background-color:  rgb(1, 31, 65);\n  }\n  \n  .form-inline {\n    display: flex;\n    align-items: center;\n    gap: 10px; \n  }\n  \n  .form-inline .form-group {\n    display: flex;\n    align-items: center;\n    margin-right: 20px; \n  }\n  \n  .form-inline label {\n    margin-right: 10px; \n  }\n  \n  .form-inline input {\n    padding: 5px;\n    border-radius: 4px;\n    border: 1px solid #ccc;\n  }\n  \n  .btn-submit {\n    margin-left: 20px; \n    padding: 6px 20px;\n    margin-top: 25px;\n    height: 38px; \n    display: flex;\n    align-items: center;\n  }\n  .export-button {\n\n    position: absolute;  \n    top: 65px;\n    left: 10px;\n  }\n  </style>"],"mappings":";;;;AA0DA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,IAAA;MACAC,WAAA;MACAC,SAAA;MACAC,UAAA;MACAC,OAAA;MACAC,eAAA;MAEAC,WAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA,WAAAC,WAAA;IACA,KAAAC,eAAA;EACA;EACAC,OAAA;IACA,MAAAF,YAAA;MACA;QACA,MAAAG,QAAA,SAAAd,KAAA,CAAAe,GAAA;UACAC,OAAA;YACAC,aAAA,YAAAC,YAAA,CAAAC,OAAA;UACA;QACA;QACA,KAAAhB,IAAA,GAAAW,QAAA,CAAAb,IAAA;QACA,UAAAE,IAAA;UACAiB,OAAA,CAAAC,KAAA;UACA;QACA;QAEA,MAAAC,YAAA,SAAAtB,KAAA,CAAAe,GAAA,2DAAAZ,IAAA,CAAAoB,cAAA;QACA,KAAAnB,WAAA,GAAAkB,YAAA,CAAArB,IAAA;QACAmB,OAAA,CAAAI,GAAA,2BAAApB,WAAA;QAEA,MAAAqB,YAAA,SAAAzB,KAAA,CAAAe,GAAA,+CAAAX,WAAA;QACA,KAAAI,eAAA,GAAAiB,YAAA,CAAAxB,IAAA;QACAmB,OAAA,CAAAI,GAAA,0BAAAhB,eAAA;QAGA,IAAAkB,GAAA,oDAAAtB,WAAA;QAEA,MAAAuB,MAAA;QAEA,SAAAtB,SAAA,SAAAE,OAAA,SAAAD,UAAA;UACAqB,MAAA,CAAAC,IAAA,mBAAAvB,SAAA,iBAAAE,OAAA,oBAAAD,UAAA;QACA;QAEA,SAAAD,SAAA,SAAAE,OAAA;UACAoB,MAAA,CAAAC,IAAA,mBAAAvB,SAAA,iBAAAE,OAAA;QACA;QAEA,SAAAD,UAAA;UACAqB,MAAA,CAAAC,IAAA,oBAAAtB,UAAA;QACA;QAEA,MAAAuB,WAAA,GAAAF,MAAA,CAAAG,MAAA,WAAAH,MAAA,CAAAI,IAAA;QACA,MAAAC,YAAA,SAAAhC,KAAA,CAAAe,GAAA,IAAAW,GAAA,GAAAG,WAAA;QAEA,KAAA3B,QAAA,GAAA8B,YAAA,CAAA/B,IAAA;QAEAmB,OAAA,CAAAI,GAAA,iBAAAtB,QAAA;MACA,SAAAmB,KAAA;QACAD,OAAA,CAAAC,KAAA,CAAAA,KAAA;MACA;IACA;IACAY,aAAA;MACA,MAAAC,CAAA,GAAAC,QAAA,CAAAC,aAAA;MACAF,CAAA,CAAAG,IAAA,QAAA5B,WAAA;MACAyB,CAAA,CAAAI,QAAA;MACAJ,CAAA,CAAAK,KAAA;IACA;IACA,MAAA3B,gBAAA;MACA;QACA,MAAAE,QAAA,SAAAd,KAAA,CAAAwC,IAAA,oDAAAtC,QAAA;UACAc,OAAA;YACA;UACA;UACAW,MAAA;YACAnB,eAAA,OAAAA;UACA;UACAiC,YAAA;QACA;QACArB,OAAA,CAAAI,GAAA,qBAAAV,QAAA,CAAAb,IAAA;QAEA,MAAAyC,IAAA,OAAAC,IAAA,EAAA7B,QAAA,CAAAb,IAAA;UAAA2C,IAAA;QAAA;QACA,MAAAlB,GAAA,GAAAmB,MAAA,CAAAC,GAAA,CAAAC,eAAA,CAAAL,IAAA;QACA,KAAAjC,WAAA,GAAAiB,GAAA;MACA,SAAAL,KAAA;QACAD,OAAA,CAAAC,KAAA,CAAAA,KAAA;MACA;IACA;EACA;EACA2B,KAAA;IACA3C,UAAA;MACA,UAAAA,SAAA;QACA,KAAAM,WAAA;MACA;IACA;IACAJ,QAAA;MACA,UAAAA,OAAA;QACA,KAAAI,WAAA;MACA;IACA;IACAL,WAAA;MACA,UAAAA,UAAA;QACA,KAAAK,WAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}