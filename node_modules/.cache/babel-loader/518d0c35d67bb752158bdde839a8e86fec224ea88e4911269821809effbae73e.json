{"ast":null,"code":"import _regeneratorRuntime from \"/home/adrienna/Documents/Stage/Suivi_courrier_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/adrienna/Documents/Stage/Suivi_courrier_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      formData: {\n        nom_courrier: '',\n        expediteur: '',\n        description: '',\n        dept_destinataire: ''\n      },\n      files: [],\n      depts: [],\n      errors: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    axios.get('http://localhost:8081/api/departements').then(function (response) {\n      _this.depts = response.data;\n    }).catch(function (error) {\n      console.error('Error fetching departments:', error);\n    });\n  },\n  methods: {\n    handleFileUpload: function handleFileUpload(event) {\n      this.formData.files = Array.from(event.target.files); // Convertir FileList en tableau\n    },\n    submitForm: function submitForm() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var formDataToSend, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!_this2.formData.nom_courrier || !_this2.formData.expediteur || !_this2.formData.dept_destinataire)) {\n                _context.next = 3;\n                break;\n              }\n              _this2.errors = [\"Veuillez remplir les champs nécessaires\"];\n              return _context.abrupt(\"return\");\n            case 3:\n              formDataToSend = new FormData();\n              formDataToSend.append('nom_courrier', _this2.formData.nom_courrier);\n              formDataToSend.append('expediteur', _this2.formData.expediteur);\n              formDataToSend.append('description', _this2.formData.description);\n              formDataToSend.append('dept_destinataire', _this2.formData.dept_destinataire);\n              _this2.files.forEach(function (file) {\n                formDataToSend.append('files', file);\n              });\n              _context.prev = 9;\n              _context.next = 12;\n              return axios.post('http://localhost:8081/api/insert_courrier', formDataToSend, {\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                }\n              });\n            case 12:\n              response = _context.sent;\n              console.log('Courrier inséré avec succès:', response.data);\n\n              // Réinitialisation des données\n              _this2.errors = null;\n              _this2.formData = {\n                nom_courrier: '',\n                expediteur: '',\n                description: '',\n                dept_destinataire: ''\n              }; // Réinitialiser les données du formulaire\n              _this2.files = [];\n              _context.next = 23;\n              break;\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](9);\n              console.error('Error response:', _context.t0.response);\n              if (_context.t0.response && _context.t0.response.data && _context.t0.response.data.message) {\n                _this2.errors = [_context.t0.response.data.message];\n              } else if (_context.t0.response && _context.t0.response.data && _context.t0.response.data.errors) {\n                _this2.errors = _context.t0.response.data.errors;\n              } else {\n                _this2.errors = [\"Une erreur est survenue\"];\n              }\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[9, 19]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","formData","nom_courrier","expediteur","description","dept_destinataire","files","depts","errors","mounted","_this","get","then","response","catch","error","console","methods","handleFileUpload","event","Array","from","target","submitForm","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formDataToSend","wrap","_callee$","_context","prev","next","abrupt","FormData","append","forEach","file","post","headers","sent","log","t0","message","stop"],"sources":["src/pages/InsertCourrier.vue"],"sourcesContent":["<template>\n  <card class=\"card\" title=\"Insertion Courrier\">\n    <div>\n      <form @submit.prevent>\n        <div v-if=\"errors\" class=\"alert alert-danger\">\n          <ul>\n            <li v-for=\"error in errors\" :key=\"error\">{{ error }}</li>\n          </ul>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <fg-input\n              type=\"text\"\n              label=\"nom\"\n              placeholder=\"Entre le nom du courrier\"\n              class=\"form-input\"\n              v-model=\"formData.nom_courrier\"\n            >\n            </fg-input>\n            <fg-input\n              type=\"text\"\n              label=\"expediteur\"\n              placeholder=\"Entre le nom de l'expediteur\"\n              class=\"form-input\"\n              v-model=\"formData.expediteur\"\n            >\n            </fg-input>\n            <textarea name=\"description\" \n              label=\"description\"\n              placeholder=\"Entre la description\" \n              rows=\"5\"\n              class=\"form-control border-input\"\n              v-model=\"formData.description\"\n            >\n            </textarea>\n            <br>\n            <div class=\"form-group\">\n              <label for=\"dept\">Departement</label>\n              <select v-model=\"formData.dept_destinataire\" id=\"dept-courrier\" class=\"form-control\" placeholder=\"Select a department\">\n                <option v-for=\"dept in depts\" :key=\"dept.id_departement\" :value=\"dept\">\n                  {{ dept.nom_departement }}\n                </option>\n              </select>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"files\">Aperçu du courrier</label>\n              <input type=\"file\" id=\"files\" multiple @change=\"handleFileUpload\" />\n            </div>\n          </div>\n        </div>\n\n        <div class=\"text-center\">\n          <p-button style=\"background-color:#007BFF\" round @click.native.prevent=\"submitForm\">\n            Insert\n          </p-button>\n        </div>\n        <div class=\"clearfix\"></div>\n      </form>\n    </div>\n  </card>\n</template>\n\n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        formData: {\n          nom_courrier: '',\n          expediteur: '',\n          description: '',\n          dept_destinataire: ''\n        },\n        files: [],\n        depts: [],\n        errors: null,\n      };\n    },\n    mounted() {\n      axios.get('http://localhost:8081/api/departements')\n        .then(response => {\n          this.depts = response.data;\n        })\n        .catch(error => {\n          console.error('Error fetching departments:', error);\n        });\n      },\n    methods: {\n      handleFileUpload(event) {\n        this.formData.files = Array.from(event.target.files); // Convertir FileList en tableau\n      },\n      async submitForm() {\n        if (!this.formData.nom_courrier || !this.formData.expediteur || !this.formData.dept_destinataire) {\n          this.errors = [\"Veuillez remplir les champs nécessaires\"];\n          return;\n        }\n        const formDataToSend = new FormData();\n          formDataToSend.append('nom_courrier', this.formData.nom_courrier);\n          formDataToSend.append('expediteur', this.formData.expediteur);\n          formDataToSend.append('description', this.formData.description);\n          formDataToSend.append('dept_destinataire', this.formData.dept_destinataire);\n\n          this.files.forEach(file => {\n            formDataToSend.append('files', file); \n          });\n\n          try {\n            const response = await axios.post('http://localhost:8081/api/insert_courrier', formDataToSend, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            });\n\n            console.log('Courrier inséré avec succès:', response.data);\n            \n            // Réinitialisation des données\n            this.errors = null;\n            this.formData = { nom_courrier: '', expediteur: '', description: '', dept_destinataire: '' }; // Réinitialiser les données du formulaire\n            this.files = [];\n          } catch (error) {\n            console.error('Error response:', error.response);\n            if (error.response && error.response.data && error.response.data.message) {\n              this.errors = [error.response.data.message];\n            } else if (error.response && error.response.data && error.response.data.errors) {\n              this.errors = error.response.data.errors;\n            } else {\n              this.errors = [\"Une erreur est survenue\"];\n            }\n          }\n      },\n\n    },\n  };\n\n  </script>\n  \n  <style>\n  .card {\n    border: 1px solid #b1abab;\n    border-radius: 5px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n    margin-bottom: 20px;\n    max-height: max-content; \n    overflow-y: auto; \n    overflow-x: hidden; \n  }\n  \n  form {\n    max-height: 100%;\n  }\n  .form-input, .form-select, .form-textarea {\n    width: 100%; \n    padding: 12px;\n    border: 1px solid #a3a3a3; \n    border-radius: 5px; \n    margin-bottom: 15px; \n    font-size: 16px; \n    transition: border-color 0.3s; \n  }\n  #dept-courrier{\n    width: 100%; \n    padding: 12px;\n    border: 1px solid #a3a3a3; \n    border-radius: 5px; \n    margin-bottom: 15px; \n    font-size: 12px; \n    transition: border-color 0.3s; \n  }\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}