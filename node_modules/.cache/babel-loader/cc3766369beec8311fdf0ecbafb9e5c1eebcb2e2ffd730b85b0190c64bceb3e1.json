{"ast":null,"code":"import { Bar } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nimport axios from 'axios';\n\n// Register Chart.js components\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nexport default {\n  components: {\n    BarChart: Bar\n  },\n  data() {\n    return {\n      statisticsData: [],\n      statisticsDataGeneral: [],\n      departementName: '',\n      departementId: '',\n      selectedWeek: '',\n      selectedMonth: '',\n      selectedYear: '',\n      recu_par: null,\n      weeks: Array.from({\n        length: 5\n      }, (_, i) => i + 1),\n      // Array of weeks\n      formSubmitted: false,\n      showGeneralChart: true,\n      showWeekChart: false\n    };\n  },\n  computed: {\n    chartDataGeneral() {\n      if (this.statisticsDataGeneral.length === 0) {\n        return null;\n      }\n      const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n      const data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      this.statisticsDataGeneral.forEach(item => {\n        const monthIndex = item.month;\n        if (monthIndex >= 1 && monthIndex <= 12) {\n          data[monthIndex - 1] = item.courrierCount;\n        }\n      });\n      console.log(\"data\", data);\n      return {\n        labels: labels,\n        datasets: [{\n          label: 'Statistics of Document this year',\n          backgroundColor: '#42A5F5',\n          data: data\n        }]\n      };\n    },\n    chartData() {\n      if (this.statisticsData.length === 0) {\n        return null;\n      }\n      const labels = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n      const data = [0, 0, 0, 0, 0, 0, 0];\n      this.statisticsData.forEach(item => {\n        //const adjustedIndex = (item.dayOfWeek + 6) % 7; 0 dimanche\n        const adjustedIndex = item.dayOfWeek - 1;\n        if (adjustedIndex >= 0 && adjustedIndex < 7) {\n          data[adjustedIndex] = item.courrierCount;\n        }\n      });\n      return {\n        labels: labels,\n        datasets: [{\n          label: 'Statistics of Document',\n          backgroundColor: '#42A5F5',\n          data: data\n        }]\n      };\n    },\n    chartOptions() {\n      return {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: true\n          },\n          title: {\n            display: true\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true,\n            ticks: {\n              stepSize: 1\n            }\n          }\n        }\n      };\n    }\n  },\n  mounted() {\n    this.getDepartement();\n  },\n  methods: {\n    async getDepartement() {\n      try {\n        const userresponse = await axios.get('http://localhost:8081/api/utilisateur', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        const recu_par = userresponse.data;\n        if (!recu_par) {\n          console.error(\"User  data is missing\");\n          return;\n        }\n        const responsedept = await axios.get(`http://localhost:8081/api/departement/utilisateur/${recu_par.id_utilisateur}`);\n        this.departementId = responsedept.data;\n        const deptresponse = await axios.get(`http://localhost:8081/api/departement/${this.departementId}`);\n        this.departementName = deptresponse.data;\n        await this.fetchStatistics();\n        await this.fetchCurrentMonthAndYearStatistics();\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async fetchStatistics() {\n      this.formSubmitted = true;\n      this.showGeneralChart = false;\n      try {\n        const response = await axios.get(`http://localhost:8081/api/statistique/courriers/${this.departementId}/${this.selectedWeek}/${this.selectedMonth}/${this.selectedYear}`);\n        this.statisticsData = response.data;\n        if (this.statisticsData.length > 0) {\n          this.showWeekChart = true;\n        }\n      } catch (error) {\n        console.error('Error fetching statistics:', error);\n        this.statisticsData = [];\n      }\n    },\n    async fetchCurrentMonthAndYearStatistics() {\n      this.formSubmitted = true;\n      try {\n        const response = await axios.get(`http://localhost:8081/api/statistique-general/courriers/${this.departementId}`);\n        this.statisticsDataGeneral = response.data;\n        console.log(this.statisticsDataGeneral);\n        if (this.statisticsDataGeneral.length > 0) {\n          this.showGeneralChart = true;\n        } else {\n          this.showGeneralChart = false;\n        }\n      } catch (error) {\n        console.error('Error fetching statistics:', error);\n        this.statisticsDataGeneral = [];\n      }\n    }\n  }\n};","map":{"version":3,"names":["Bar","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","axios","register","components","BarChart","data","statisticsData","statisticsDataGeneral","departementName","departementId","selectedWeek","selectedMonth","selectedYear","recu_par","weeks","Array","from","length","_","i","formSubmitted","showGeneralChart","showWeekChart","computed","chartDataGeneral","labels","forEach","item","monthIndex","month","courrierCount","console","log","datasets","label","backgroundColor","chartData","adjustedIndex","dayOfWeek","chartOptions","responsive","maintainAspectRatio","plugins","legend","display","title","scales","y","beginAtZero","ticks","stepSize","mounted","getDepartement","methods","userresponse","get","headers","Authorization","localStorage","getItem","error","responsedept","id_utilisateur","deptresponse","fetchStatistics","fetchCurrentMonthAndYearStatistics","response"],"sources":["src/pages/StatistiqueCourrierDept.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <h3 style=\"color:#003366;\">{{ departementName }}</h3>\n            <h6>Statistics of the number of documents in the department</h6>\n            <form @submit.prevent=\"fetchStatistics\" class=\"form-inline\">\n              <div class=\"form-group mx-sm-3 mb-2\">\n                <label for=\"week\" class=\"mr-2\">Week:</label>\n                <select v-model=\"selectedWeek\" id=\"week\" class=\"form-control\">\n                  <option v-for=\"week in weeks\" :key=\"week\" :value=\"week\">{{ week }}</option>\n                </select>\n              </div>\n              <div class=\"form-group mx-sm-3 mb-2\">\n                <label for=\"month\" class=\"mr-2\">Month:</label>\n                <select v-model=\"selectedMonth\" id=\"month\" class=\"form-control\">\n                  <option value=\"1\">January</option>\n                  <option value=\"2\">February</option>\n                  <option value=\"3\">March</option>\n                  <option value=\"4\">April</option>\n                  <option value=\"5\">May</option>\n                  <option value=\"6\">June</option>\n                  <option value=\"7\">July</option>\n                  <option value=\"8\">August</option>\n                  <option value=\"9\">September</option>\n                  <option value=\"10\">October</option>\n                  <option value=\"11\">November</option>\n                  <option value=\"12\">December</option>\n                </select>\n              </div>\n              <div class=\"form-group mx-sm-3 mb-2\">\n                <label for=\"year\" class=\"mr-2\">Year:</label>\n                <input type=\"number\" v-model=\"selectedYear\" id=\"year\" class=\"form-control\" placeholder=\"Year\" />\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary mb-2\">Fetch Statistics</button>\n            </form>\n            <bar-chart v-if=\"chartDataGeneral !== null && showGeneralChart\" :data=\"chartDataGeneral\" :options=\"chartOptions\"></bar-chart>\n\n            <bar-chart v-if=\"showWeekChart\" :data=\"chartData\" :options=\"chartOptions\"></bar-chart>\n<!-- \n            <p v-else-if=\"formSubmitted && !statisticsData.length\">No couriers found for {{ selectedMonth }} {{ selectedYear }} in your department.</p> -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n  <script>\n  import { Bar } from 'vue-chartjs';\n  import { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\n  import axios from 'axios';\n  \n  // Register Chart.js components\n  ChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n  \n  export default {\n    components: {\n      BarChart: Bar\n    },\n    data() {\n      return {\n        statisticsData: [],\n        statisticsDataGeneral: [],\n        departementName: '',\n        departementId: '',\n        selectedWeek: '',\n        selectedMonth: '',\n        selectedYear: '',\n        recu_par: null,\n        weeks: Array.from({ length: 5 }, (_, i) => i + 1), // Array of weeks\n        formSubmitted: false,\n\n        showGeneralChart: true,\n        showWeekChart: false\n\n      };\n    },\n    computed: {\n      chartDataGeneral() {\n        if (this.statisticsDataGeneral.length === 0) {\n          return null;\n        }\n        const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n        const data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        this.statisticsDataGeneral.forEach(item => {\n          const monthIndex = item.month; \n          if (monthIndex >= 1 && monthIndex <= 12) {\n            data[monthIndex -1] = item.courrierCount;\n          }\n        });\n        console.log(\"data\",data);\n        return {\n          labels: labels,\n          datasets: [\n            {\n              label: 'Statistics of Document this year',\n              backgroundColor: '#42A5F5',\n              data: data\n            }\n          ]\n        };\n      },\n      chartData() {\n        if (this.statisticsData.length === 0) {\n          return null;\n        }\n        const labels = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n        const data = [0, 0, 0, 0, 0, 0, 0];\n\n        this.statisticsData.forEach(item => {\n        //const adjustedIndex = (item.dayOfWeek + 6) % 7; 0 dimanche\n        const adjustedIndex = item.dayOfWeek - 1;\n        if (adjustedIndex >= 0 && adjustedIndex < 7) {\n         data[adjustedIndex] = item.courrierCount;\n        }\n\n        });\n\n        return {\n          labels: labels,\n          datasets: [\n            {\n              label: 'Statistics of Document',\n              backgroundColor: '#42A5F5',\n              data: data\n            }\n          ]\n        };\n      },\n      chartOptions() {\n        return {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              display: true\n            },\n            title: {\n              display: true,\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true,\n              ticks: {\n                stepSize: 1 \n              }\n            }\n          }\n        };\n      }\n    },\n    mounted() {\n      this.getDepartement();\n    },\n    methods: {\n      async getDepartement() {\n            try {\n            const userresponse = await axios.get('http://localhost:8081/api/utilisateur', {\n                headers: {\n                Authorization: `Bearer ${localStorage.getItem('authToken')}`,\n                },\n            });\n            const recu_par = userresponse.data; \n            if (!recu_par) {\n                console.error(\"User  data is missing\");\n                return;\n            }\n            const responsedept = await axios.get(`http://localhost:8081/api/departement/utilisateur/${recu_par.id_utilisateur}`);\n            this.departementId = responsedept.data;\n\n            const deptresponse = await axios.get(`http://localhost:8081/api/departement/${this.departementId}`);\n            this.departementName = deptresponse.data;\n\n            await this.fetchStatistics();\n            await this.fetchCurrentMonthAndYearStatistics();\n\n\n            } catch (error) {\n            console.error(error);\n            }\n        },\n        async fetchStatistics() {\n          this.formSubmitted = true;\n          this.showGeneralChart = false;\n\n            try {\n            const response = await axios.get(`http://localhost:8081/api/statistique/courriers/${this.departementId}/${this.selectedWeek}/${this.selectedMonth}/${this.selectedYear}`);\n            this.statisticsData = response.data;\n              if (this.statisticsData.length > 0) {\n                this.showWeekChart = true;\n              }\n            } catch (error) {\n                console.error('Error fetching statistics:', error);\n                this.statisticsData = [];\n            }\n        },\n        async fetchCurrentMonthAndYearStatistics() {\n          this.formSubmitted = true;\n          try {\n            const response = await axios.get(`http://localhost:8081/api/statistique-general/courriers/${this.departementId}`);\n            this.statisticsDataGeneral = response.data;\n            console.log(this.statisticsDataGeneral);\n            if (this.statisticsDataGeneral.length > 0) {\n              this.showGeneralChart = true;\n            }else {\n              this.showGeneralChart = false;\n            }\n          } catch (error) {\n            console.error('Error fetching statistics:', error);\n            this.statisticsDataGeneral = [];\n          }\n        }\n    }\n  };\n  </script>\n\n<style scoped>\n  .form-inline {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n  }\n\n  .form-group {\n    margin-right: 15px;\n  }\n\n  .btn {\n    margin-left: 10px;\n  }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}