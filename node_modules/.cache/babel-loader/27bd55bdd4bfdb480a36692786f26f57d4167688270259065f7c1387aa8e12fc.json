{"ast":null,"code":"import _objectSpread from \"/home/adrienna/Documents/Stage/Suivi_courrier_front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/home/adrienna/Documents/Stage/Suivi_courrier_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/adrienna/Documents/Stage/Suivi_courrier_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      courrierlist: [],\n      receptionlist: [],\n      transfertlist: [],\n      user: null,\n      departement: '',\n      departementName: '',\n      errors: null,\n      id_courrier: ''\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _this.getAcheminementCourrier();\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  methods: {\n    getAcheminementCourrier: function getAcheminementCourrier() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response, responsedept, deptresponse, courrierresponse, transfertresponse, receptionresponse;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.get('http://localhost:8081/api/utilisateur', {\n                headers: {\n                  Authorization: \"Bearer \".concat(localStorage.getItem('authToken'))\n                }\n              });\n            case 3:\n              response = _context2.sent;\n              _this2.user = response.data;\n              if (_this2.user) {\n                _context2.next = 8;\n                break;\n              }\n              console.error(\"User data is missing\");\n              return _context2.abrupt(\"return\");\n            case 8:\n              _context2.next = 10;\n              return axios.get(\"http://localhost:8081/api/departement/utilisateur/\".concat(_this2.user.id_utilisateur));\n            case 10:\n              responsedept = _context2.sent;\n              _this2.departement = responsedept.data;\n              console.log(\"Données du view :\", _this2.departement);\n              _context2.next = 15;\n              return axios.get(\"http://localhost:8081/api/departement/\".concat(_this2.departement));\n            case 15:\n              deptresponse = _context2.sent;\n              _this2.departementName = deptresponse.data;\n              console.log('nom_departement:', _this2.departementName);\n\n              //verification\n              if (!(_this2.id_courrier !== '')) {\n                _context2.next = 38;\n                break;\n              }\n              _context2.next = 21;\n              return axios.get(\"http://localhost:8081/api/verification/\".concat(_this2.id_courrier, \"/\").concat(_this2.departement));\n            case 21:\n              console.log('id_courrier:', _this2.id_courrier);\n              _context2.next = 24;\n              return axios.get(\"http://localhost:8081/api/courrier/\".concat(_this2.id_courrier, \"/\").concat(_this2.departement));\n            case 24:\n              courrierresponse = _context2.sent;\n              _this2.courrierlist = courrierresponse.data.map(function (item) {\n                return _objectSpread({}, item);\n              }); // Conversion en tableau simple\n              console.log('courrierList', _this2.courrierlist);\n              _context2.next = 29;\n              return axios.get(\"http://localhost:8081/api/courrier_transfert/\".concat(_this2.id_courrier, \"/\").concat(_this2.departement));\n            case 29:\n              transfertresponse = _context2.sent;\n              _this2.transfertlist = transfertresponse.data.map(function (item) {\n                return _objectSpread({}, item);\n              }); // Conversion en tableau simple\n              console.log('transfertList', _this2.transfertlist);\n              _context2.next = 34;\n              return axios.get(\"http://localhost:8081/api/courrier_reception/\".concat(_this2.id_courrier));\n            case 34:\n              receptionresponse = _context2.sent;\n              _this2.receptionlist = receptionresponse.data.map(function (item) {\n                return _objectSpread({}, item);\n              }); // Conversion en tableau simple\n              console.log('receptionList', _this2.receptionlist);\n              _this2.errors = null;\n            case 38:\n              _context2.next = 45;\n              break;\n            case 40:\n              _context2.prev = 40;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error response:', _context2.t0.response);\n              if (_context2.t0.response) {\n                _this2.errors = [_context2.t0.response.data];\n              } else {\n                _this2.errors = [\"une erreur a survenue\"];\n              }\n              console.error(_context2.t0);\n            case 45:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 40]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","courrierlist","receptionlist","transfertlist","user","departement","departementName","errors","id_courrier","mounted","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","getAcheminementCourrier","stop","methods","_this2","_callee2","response","responsedept","deptresponse","courrierresponse","transfertresponse","receptionresponse","_callee2$","_context2","get","headers","Authorization","concat","localStorage","getItem","sent","console","error","abrupt","id_utilisateur","log","map","item","_objectSpread","t0"],"sources":["src/pages/EtatCourrier.vue"],"sourcesContent":["<template>\n    <div>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n                \n                <div class=\"form-inline\">\n                  <div class=\"form-group\">\n                    <label for=\"expediteur\">Id Courrier:</label>\n                    <input type=\"text\" v-model=\"id_courrier\" id=\"id_courrier\" />\n                  </div>  \n                    <button class=\"btn btn-submit\" @click=\"getAcheminementCourrier\">Voir</button>\n                  </div>\n                  <div v-if=\"errors\" class=\"alert alert-danger\">\n                    <ul>\n                      <li v-for=\"error in errors\" :key=\"error\">{{ error }}</li>\n                    </ul>\n                  </div>\n\n                  <div v-if=\"courrierlist.length > 0\" class=\"courrier-list\">\n                    <h3>Liste des courriers :</h3>\n                    <table class=\"table\">\n                      <thead>\n                        <tr>\n                          <th>Id Courrier</th>\n                          <th>Nom</th>\n                          <th>Date de reception</th>\n                          <th>Statut</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr v-for=\"courrier in courrierlist\" :key=\"courrier.id_courrier\">\n                          <td>{{ courrier.id_courrier }}</td>\n                          <td>{{ courrier.nom_courrier }}</td>\n                          <td>{{ courrier.date_reception }}</td>\n                          <td>en attente</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n              \n                  <div v-if=\"transfertlist.length > 0\" class=\"transfert-list\">\n                    <h3>Liste des transferts :</h3>\n                    <table class=\"table\">\n                      <thead>\n                        <tr>\n                          <th>Date Transfert</th>\n                          <th>Statut</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr v-for=\"transfert in transfertlist\" :key=\"transfert.id_transfert\">\n                          <td>{{ transfert.date_transfert }}</td>\n                          <td>transfert</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n\n                  <div v-if=\"receptionlist.length > 0\" class=\"reception-list\">\n                    <h3>Liste des réceptions :</h3>\n                    <table class=\"table\">\n                      <thead>\n                        <tr>\n                          <th>Date Traitement</th>\n                          <th>Statut</th>\n                          <th>Destinataire</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr v-for=\"reception in receptionlist\" :key=\"reception.id_reception\">\n                          <td>{{ reception.date_traitement }}</td>\n                          <td>reçu</td>\n                          <td>{{ reception.recu_par.dept_destinataire }}</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                </div>\n\n            </div>\n            </div>\n        </div>\n    </div>\n  </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        courrierlist: [],\n        receptionlist:[],\n        transfertlist:[],\n        user:null,\n        departement:'',\n        departementName: '',\n        errors: null,\n        id_courrier:''\n      };\n    },\n    async mounted() {\n      await this.getAcheminementCourrier();\n    },\n    methods: {\n        async getAcheminementCourrier() {\n            try {\n                const response = await axios.get('http://localhost:8081/api/utilisateur', {\n                    headers: {\n                    Authorization: `Bearer ${localStorage.getItem('authToken')}`, \n                    },\n                });\n                this.user = response.data; \n                if (!this.user) {\n                    console.error(\"User data is missing\");\n                    return;\n                }\n\n                const responsedept = await axios.get(`http://localhost:8081/api/departement/utilisateur/${this.user.id_utilisateur}`);\n                this.departement = responsedept.data;\n                console.log(\"Données du view :\",this.departement);\n\n                const deptresponse = await axios.get(`http://localhost:8081/api/departement/${this.departement}`);\n                this.departementName = deptresponse.data;\n                console.log('nom_departement:', this.departementName)\n\n                //verification\n                if(this.id_courrier !==''){\n                  await axios.get(`http://localhost:8081/api/verification/${this.id_courrier}/${this.departement}`);\n                  console.log('id_courrier:', this.id_courrier);\n                \n                  const courrierresponse = await axios.get(`http://localhost:8081/api/courrier/${this.id_courrier}/${this.departement}`);\n                  this.courrierlist = courrierresponse.data.map(item => ({ ...item })); // Conversion en tableau simple\n                  console.log('courrierList', this.courrierlist);\n\n                  const transfertresponse = await axios.get(`http://localhost:8081/api/courrier_transfert/${this.id_courrier}/${this.departement}`);\n                  this.transfertlist = transfertresponse.data.map(item => ({ ...item })); // Conversion en tableau simple\n                  console.log('transfertList', this.transfertlist);\n\n                  const receptionresponse = await axios.get(`http://localhost:8081/api/courrier_reception/${this.id_courrier}`);\n                  this.receptionlist = receptionresponse.data.map(item => ({ ...item })); // Conversion en tableau simple\n                  console.log('receptionList', this.receptionlist);\n\n                this.errors = null;\n\n                \n                }\n\n            } catch (error) {\n              console.error('Error response:', error.response);\n              if (error.response) {\n                this.errors = [error.response.data];\n              } else {\n                this.errors = [\"une erreur a survenue\"];\n              }\n                console.error(error);\n            }\n        }\n  }\n};\n  </script>\n  \n  <style scoped>\n  .empty-state {\n    text-align: center;\n    padding: 40px 20px;\n    color: #6c757d;\n  }\n  .empty-icon {\n    font-size: 48px;\n    margin-bottom: 20px;\n  }\n  .card {\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n    margin-bottom: 20px;\n    max-height: max-content;\n    overflow-y: auto; \n    overflow-x: hidden; \n  }\n  .card-header {\n    background-color: #343a40;\n    color: white;\n    padding: 15px;\n    border-bottom: 1px solid #343a40;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n  }\n  .card-header h3 {\n    margin: 0;\n    color:rgb(12, 12, 12);\n    font-size: medium;\n  }\n  .card-body {\n    padding: 20px;\n  }\n  .table {\n    width: 100%;\n    border-collapse: collapse;\n    margin-top:55px;\n  }\n  .table th, .table td {\n    border: 1px solid #ddd;\n    padding: 8px;\n    text-align: left;\n    position: relative;\n  }\n  .table th {\n    background-color: #f2f2f2;\n    font-weight: bold;\n  }\n  .table td {\n    word-break: break-word; \n  }\n\n  .table tbody tr:nth-child(even) {\n    background-color: #f9f9f9;\n  }\n  .table tbody tr:hover {\n    background-color: #f1f1f1;\n  }\n  .btn {\n    padding: 10px 15px;\n    font-size: 14px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n    \n  }\n  .btn-show {\n    display: block;\n    width: 100%;\n    background-color: #001122;\n    color: white;\n  }\n  .btn-show:hover {\n    background-color: #007BFF;\n    transition: background-color 1s ease;\n  }\n  .modal {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: #001122;\n  }\n  .close {\n    color: #fff;\n    background-color: #dc3545;\n    border-radius: 50%;\n    padding: 5px 10px;\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    font-size: 20px;\n    font-weight: bold;\n    cursor: pointer;\n  }\n  .close:hover,\n  .close:focus {\n    background-color: #c82333;\n    text-decoration: none;\n  }\n  .modal-content {\n    background-color: #fff;\n    padding: 20px;\n    border: 1px solid #888;\n    width: 80%;\n    max-width: 600px;\n    border-radius: 5px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n    position: relative;\n    overflow-y: auto;\n    max-height: 80vh;\n  }\n  \n  .modal-content h2 {\n    font-size: 24px;\n    font-weight: bold;\n    margin-bottom: 10px;\n  }\n  \n  .modal-content h3 {\n    font-size: 18px;\n    font-weight: bold;\n    margin-bottom: 10px;\n  }\n  \n  .form-group {\n    margin-bottom: 20px;\n  }\n  \n  .form-group label {\n    font-size: 16px;\n    font-weight: bold;\n    margin-bottom: 5px;\n  }\n  \n  .form-group input, .form-group textarea {\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n  }\n  \n  .btn-submit {\n    background-color: #007BFF ;\n    color: #fff;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n  \n  .btn-submit:hover {\n    background-color:  #007BFF;\n  }\n  \n  .form-inline {\n    display: flex;\n    align-items: center;\n    gap: 10px; \n  }\n  \n  .form-inline .form-group {\n    display: flex;\n    align-items: center;\n    margin-right: 20px; \n  }\n  \n  .form-inline label {\n    margin-right: 10px; \n  }\n  \n  .form-inline input {\n    padding: 5px;\n    border-radius: 4px;\n    border: 1px solid #ccc;\n  }\n  \n  .btn-submit {\n    margin-left: 20px; \n    padding: 6px 20px;\n    margin-top: 25px;\n    height: 38px; \n    display: flex;\n    align-items: center;\n  }\n  .export-button {\n\n    position: absolute;  \n    top: 65px;\n    left: 10px;\n  }\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}