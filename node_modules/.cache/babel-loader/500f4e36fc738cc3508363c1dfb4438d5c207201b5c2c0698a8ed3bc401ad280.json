{"ast":null,"code":"import TopNavbar from \"./TopNavbar.vue\";\nimport DashboardContent from \"./Content.vue\";\nimport MobileMenu from \"./MobileMenu\";\nimport axios from 'axios';\nexport default {\n  components: {\n    TopNavbar,\n    DashboardContent,\n    MobileMenu\n  },\n  data() {\n    return {\n      notificationCount: 0,\n      user: null,\n      departement: ''\n    };\n  },\n  mounted() {\n    this.fetchNotificationCount();\n  },\n  methods: {\n    toggleSidebar() {\n      if (this.$sidebar.showSidebar) {\n        this.$sidebar.displaySidebar(false);\n      }\n    },\n    async fetchNotificationCount() {\n      try {\n        const response = await axios.get('http://localhost:8081/api/utilisateur', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        this.user = response.data;\n        if (!this.user) {\n          console.error(\"User data is missing\");\n          return;\n        }\n\n        // Récupérer le département de l'utilisateur\n        const responsedept = await axios.get(`http://localhost:8081/api/departement/utilisateur/${this.user.id_utilisateur}`);\n        this.departement = responsedept.data;\n        console.log(\"Données du département :\", this.departement);\n\n        // Récupérer le nombre de notifications pour le département\n        const notificationResponse = await axios.get(`http://localhost:8081/api/notifications/${this.departement}`);\n        this.notificationCount = notificationResponse.data; // Mettez à jour le compteur de notifications\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des notifications:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["TopNavbar","DashboardContent","MobileMenu","axios","components","data","notificationCount","user","departement","mounted","fetchNotificationCount","methods","toggleSidebar","$sidebar","showSidebar","displaySidebar","response","get","headers","Authorization","localStorage","getItem","console","error","responsedept","id_utilisateur","log","notificationResponse"],"sources":["src/layout/dashboard/DashboardDept.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <side-bar>\n      <template slot=\"links\">\n        <!-- Afficher le lien notifications uniquement si notificationCount > 0 -->\n        <template v-if=\"notificationCount > 0\">\n          <sidebar-link\n            to=\"/board/notifications\"\n            name=\"notifications\"\n            icon=\"ti-bell\"\n          />\n          <span class=\"notification-badge\">{{ notificationCount }}</span>\n        </template>\n\n        <sidebar-link\n          to=\"/board/departement/:id_departement/courriers\"\n          name=\"Waiting document list\"\n          icon=\"ti-view-list-alt\"\n        />\n        <sidebar-link\n          to=\"/board/courriersRecu\"\n          name=\"List of documents received by your department\"\n          icon=\"ti-view-list-alt\"\n        />\n        <sidebar-link\n          to=\"/board/statistique\"\n          name=\"document statistique of your departement\"\n          icon=\"ti-view-list-alt\"\n        />\n      </template>\n    </side-bar>\n\n    <div class=\"main-panel\">\n      <top-navbar></top-navbar>\n      <dashboard-content @click.native=\"toggleSidebar\"></dashboard-content>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\">\n.notification-badge {\n  background-color: red;\n  color: white; \n  border-radius: 30%;\n  padding-top: 10px; \n  padding-right: 5px;\n  padding-left: 3px;\n  height: 30px;\n  margin-left:48px; \n  margin-top: -50px;\n  font-size: 0.8em; \n}\n</style>\n  <script>\n  import TopNavbar from \"./TopNavbar.vue\";\n  import DashboardContent from \"./Content.vue\";\n  import MobileMenu from \"./MobileMenu\";\n\n  import axios from 'axios';\n\n  export default {\n    components: {\n      TopNavbar,\n      DashboardContent,\n      MobileMenu,\n    },\n    data() {\n      return {\n        notificationCount: 0,\n        user:null,\n        departement:'',\n      };\n    },\n    mounted() {\n      this.fetchNotificationCount();\n    },\n    methods: {\n      toggleSidebar() {\n        if (this.$sidebar.showSidebar) {\n          this.$sidebar.displaySidebar(false);\n        }\n      },\n      async fetchNotificationCount() {\n        try {\n          const response = await axios.get('http://localhost:8081/api/utilisateur', {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('authToken')}`, \n            },\n          });\n          \n          this.user = response.data; \n          if (!this.user) {\n            console.error(\"User data is missing\");\n            return;\n          }\n\n          // Récupérer le département de l'utilisateur\n          const responsedept = await axios.get(`http://localhost:8081/api/departement/utilisateur/${this.user.id_utilisateur}`);\n          this.departement = responsedept.data;\n          console.log(\"Données du département :\", this.departement);\n          \n          // Récupérer le nombre de notifications pour le département\n          const notificationResponse = await axios.get(`http://localhost:8081/api/notifications/${this.departement}`);\n          this.notificationCount = notificationResponse.data; // Mettez à jour le compteur de notifications\n        } catch (error) {\n          console.error(\"Erreur lors de la récupération des notifications:\", error);\n        }\n      },\n    },\n  };\n  </script>\n  "],"mappings":"AAsDA,OAAAA,SAAA;AACA,OAAAC,gBAAA;AACA,OAAAC,UAAA;AAEA,OAAAC,KAAA;AAEA;EACAC,UAAA;IACAJ,SAAA;IACAC,gBAAA;IACAC;EACA;EACAG,KAAA;IACA;MACAC,iBAAA;MACAC,IAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,sBAAA;EACA;EACAC,OAAA;IACAC,cAAA;MACA,SAAAC,QAAA,CAAAC,WAAA;QACA,KAAAD,QAAA,CAAAE,cAAA;MACA;IACA;IACA,MAAAL,uBAAA;MACA;QACA,MAAAM,QAAA,SAAAb,KAAA,CAAAc,GAAA;UACAC,OAAA;YACAC,aAAA,YAAAC,YAAA,CAAAC,OAAA;UACA;QACA;QAEA,KAAAd,IAAA,GAAAS,QAAA,CAAAX,IAAA;QACA,UAAAE,IAAA;UACAe,OAAA,CAAAC,KAAA;UACA;QACA;;QAEA;QACA,MAAAC,YAAA,SAAArB,KAAA,CAAAc,GAAA,2DAAAV,IAAA,CAAAkB,cAAA;QACA,KAAAjB,WAAA,GAAAgB,YAAA,CAAAnB,IAAA;QACAiB,OAAA,CAAAI,GAAA,kCAAAlB,WAAA;;QAEA;QACA,MAAAmB,oBAAA,SAAAxB,KAAA,CAAAc,GAAA,iDAAAT,WAAA;QACA,KAAAF,iBAAA,GAAAqB,oBAAA,CAAAtB,IAAA;MACA,SAAAkB,KAAA;QACAD,OAAA,CAAAC,KAAA,sDAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}